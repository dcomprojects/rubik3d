!function e(r,n,t){function a(i,s){if(!n[i]){if(!r[i]){var c="function"==typeof require&&require;if(!s&&c)return c(i,!0);if(o)return o(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var f=n[i]={exports:{}};r[i][0].call(f.exports,(function(e){return a(r[i][1][e]||e)}),f,f.exports,e,r,n,t)}return n[i].exports}for(var o="function"==typeof require&&require,i=0;i<t.length;i++)a(t[i]);return a}({1:[function(e,r,n){"use strict";function t(e,r,n){var t=e.createShader(r);if(e.shaderSource(t,n),e.compileShader(t),e.getShaderParameter(t,e.COMPILE_STATUS))return t;console.log(e.getShaderInfoLog(t)),e.deleteShader(t)}n.main=function(e,r,n){var a=e.getContext("webgl");if(a){var o=function(e,r,n){var t=e.createProgram();if(e.attachShader(t,r),e.attachShader(t,n),e.linkProgram(t),e.getProgramParameter(t,e.LINK_STATUS))return t;console.log(e.getProgramInfoLog(t)),e.deleteProgram(t)}(a,t(a,a.VERTEX_SHADER,r),t(a,a.FRAGMENT_SHADER,n)),i=a.getAttribLocation(o,"a_position"),s=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,s);a.bufferData(a.ARRAY_BUFFER,new Float32Array([0,0,0,.5,.7,0]),a.STATIC_DRAW),function(e,r){r=r||1;const n=e.clientWidth*r|0,t=e.clientHeight*r|0;(e.width!==n||e.height!==t)&&(e.width=n,e.height=t)}(a.canvas),a.viewport(0,0,a.canvas.width,a.canvas.height),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT),a.useProgram(o),a.enableVertexAttribArray(i),a.bindBuffer(a.ARRAY_BUFFER,s);var c=a.FLOAT,l=0;a.vertexAttribPointer(i,2,c,!1,0,l);var f=a.TRIANGLES;l=0;a.drawArrays(f,l,3)}}},{}],2:[function(e,r,n){const t=e("./blah.js");new Promise((function(e,r){window.onload=e})).then(()=>{const e=document.querySelectorAll("#c");t.main(e[0],"\n// an attribute will receive data from a buffer\nattribute vec4 a_position;\n\n// all shaders have a main function\nvoid main() {\n\n  // gl_Position is a special variable a vertex shader\n  // is responsible for setting\n  gl_Position = a_position;\n}\n","\n// fragment shaders don't have a default precision so we need\n// to pick one. mediump is a good default\nprecision mediump float;\n\nvoid main() {\n  // gl_FragColor is a special variable a fragment shader\n  // is responsible for setting\n  gl_FragColor = vec4(1, 0, 0.5, 1); // return redish-purple\n}\n"),console.log(e)})},{"./blah.js":1}]},{},[2]);
//# sourceMappingURL=app.js.map

{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app2.js","app/js2/2d/render.js","app/js2/2d/somed3.js","app/js2/3d/render3d.js","app/js2/cube.js","app/js2/main.js","node_modules/d3-array/dist/d3-array.js","node_modules/d3-axis/dist/d3-axis.js","node_modules/d3-brush/dist/d3-brush.js","node_modules/d3-chord/dist/d3-chord.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-contour/dist/d3-contour.js","node_modules/d3-dispatch/dist/d3-dispatch.js","node_modules/d3-drag/dist/d3-drag.js","node_modules/d3-dsv/dist/d3-dsv.js","node_modules/d3-ease/dist/d3-ease.js","node_modules/d3-fetch/dist/d3-fetch.js","node_modules/d3-force/dist/d3-force.js","node_modules/d3-format/dist/d3-format.js","node_modules/d3-geo/dist/d3-geo.js","node_modules/d3-hierarchy/dist/d3-hierarchy.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-path/dist/d3-path.js","node_modules/d3-polygon/dist/d3-polygon.js","node_modules/d3-quadtree/dist/d3-quadtree.js","node_modules/d3-random/dist/d3-random.js","node_modules/d3-scale-chromatic/dist/d3-scale-chromatic.js","node_modules/d3-scale/dist/d3-scale.js","node_modules/d3-selection/dist/d3-selection.js","node_modules/d3-shape/dist/d3-shape.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/d3-timer/dist/d3-timer.js","node_modules/d3-transition/dist/d3-transition.js","node_modules/d3-voronoi/dist/d3-voronoi.js","node_modules/d3-zoom/dist/d3-zoom.js","node_modules/d3/dist/d3.node.js","node_modules/gl-matrix/cjs/common.js","node_modules/gl-matrix/cjs/index.js","node_modules/gl-matrix/cjs/mat2.js","node_modules/gl-matrix/cjs/mat2d.js","node_modules/gl-matrix/cjs/mat3.js","node_modules/gl-matrix/cjs/mat4.js","node_modules/gl-matrix/cjs/quat.js","node_modules/gl-matrix/cjs/quat2.js","node_modules/gl-matrix/cjs/vec2.js","node_modules/gl-matrix/cjs/vec3.js","node_modules/gl-matrix/cjs/vec4.js","node_modules/three/build/three.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","render","_d","_somed","cube","forward","color","rotate","reverse","rotateReverse","rotateFn","window","addEventListener","key","document","querySelectorAll","forEach","d","ev","faceColors","getFaceColors","face","querySelector","concat","svg","drawCube","clientWidth","clientHeight","console","log","append","update","clickMap","white","red","green","blue","yellow","orange","keys","k","select","on","g","event","preventDefault","./somed3","d3","2","_typeof","obj","Symbol","iterator","constructor","prototype","width","height","inData","dim","min","create","attr","cdim","pieceGroup","selectAll","data","buildData","join","path","rect","assign","node","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","_interopRequireWildcard","WeakMap","data2","iter","values","y","x","push","next","3","render3d","THREE","_glMatrix","divCube","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","vertexColors","FaceColors","group","Group","pieces","getFace","s","clone","colorFaces","cf","faces","dot","vec3","fromValues","normal","z","vector","setColorName","m","Mesh","position","position2","add","fn","animate","requestAnimationFrame","rotation","gl-matrix","three","4","Cube","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","toString","slice","name","from","test","_unsupportedIterableToArray","F","done","_e","TypeError","err","normalCompletion","didErr","step","_e2","arr","len","arr2","colorMap","w","direction","adjacent","b","#","COLORS","FACES","ColorFace","transform","this","parentTransform","Piece","colors","split","map","mat4","fromTranslation","csv","_this3","dsvFormat","parse","Map","v","faceRotations","dir","cw","fromRotation","Math","PI","tr1","scale","tr2","rota","mul","transformMat4","adjacentCenter","max","ret","_this","pos","getColors","getFaceColor","_this2","_step","_iterator","_step2","_iterator2","_step3","_iterator3","invert","getByPosition","vec","_step4","_iterator4","equals","_step5","_iterator5","getFacePiecePositions","faceColor","a1","a2","a3","_i","_a","_step6","c1","_iterator6","_step7","c2","_iterator7","c3","_this4","5","_cube","_render","_render3d","Promise","resolve","reject","then","vh","innerHeight","documentElement","style","setProperty","text","./2d/render","./3d/render3d","./cube","6","global","factory","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pair","number","variance","valueof","delta","mean","sum","isNaN","deviation","array","sqrt","extent","constant","identity","range","start","stop","arguments","ceil","e10","e5","e2","tickIncrement","count","power","floor","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","quantile","i0","value0","transpose","matrix","j","row","bisect","cross","values0","values1","reduce","i1","n0","n1","descending","histogram","domain","threshold","xz","x0","x1","tz","shift","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","random","ticks","isFinite","zip","define","amd","7","translateX","translateY","center","offset","bandwidth","round","entering","__axis","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","context","apply","format","spacing","range0","range1","copy","selection","tick","order","tickExit","exit","tickEnter","enter","line","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","8","d3Dispatch","d3Drag","d3Interpolate","d3Selection","d3Transition","BrushEvent","target","type","nopropagation","stopImmediatePropagation","noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","number1","number2","toucher","identifier","touch","touches","X","handles","input","output","xy","Y","XY","cursors","overlay","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","ctrlKey","button","defaultExtent","ownerSVGElement","hasAttribute","viewBox","baseVal","defaultTouchable","navigator","maxTouchPoints","local","__brush","empty","brush$1","touchending","touchable","listeners","dispatch","handleSize","brush","property","initialize","handle","redraw","started","touchmoved","touchended","emitter","that","args","clean","Emitter","state","active","w0","w1","e0","e1","s0","s1","moving","lockX","lockY","__data__","mode","metaKey","altKey","signX","signY","W","N","E","S","dx","dy","shifting","shiftKey","pointer","changedTouches","mouse","point0","point","emit","beforestart","moved","ended","view","keydowned","keyupped","dragDisable","interrupt","point1","move","clearTimeout","setTimeout","dragEnable","end","keyCode","tween","selection0","selection1","interpolate","clear","starting","customEvent","keyModifiers","brushSelection","brushX","brushY","self","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition","9","d3Array","d3Path","cos","sin","pi","halfPi","tau","compareValue","source","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","chord","padAngle","sortGroups","sortSubgroups","sortChords","groupSums","groupIndex","subgroupIndex","chords","groups","subgroups","di","dj","a0","index","subindex","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","moveTo","arc","quadraticCurveTo","closePath","d3-array","d3-path","10","object","createObject","setObject","createMap","setMap","map$$1","Set","entries","size","proto","nest","sortValues","rollup","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","sortKey","11","extend","parent","definition","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","channels","displayable","formatHsl","brighter","darker","deg2rad","rad2deg","t1","t2","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","A","B","C","D","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh","lch","12","contains","ring","hole","ringContains","yi","pj","yj","segmentContains","q","collinear","noop","cases","contours","smooth","smoothLinear","contour","polygons","holes","callback","t0","t3","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","area","polygon","coordinates","v0","xt","yt","v1","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","contourDensity","weight","density","Float32Array","wi","transformPolygon","transformRing","transformPoint","resize","cellSize","13","Dispatch","parseTypenames","typenames","types","indexOf","typename","T","14","nodrag","root","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","defaultContainer","defaultSubject","drag","mousedownx","mousedowny","mousemoving","container","gestures","clickDistance2","mousedowned","touchstarted","gesture","mousemoved","mouseupped","clientX","clientY","sublisteners","p0","clickDistance","15","EOL","EOF","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","I","eof","eol","token","replace","preformatBody","formatValue","formatRow","Date","convert","customConverter","formatBody","formatRows","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","csvFormatRow","csvFormatValue","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsvFormatRow","tsvFormatValue","fixtz","getHours","autoType","match","16","quadInOut","cubicInOut","polyIn","custom","exponent","polyOut","polyInOut","sinInOut","expInOut","circleInOut","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","easeBack","easeBackIn","easeBackInOut","easeBackOut","easeBounce","easeBounceIn","easeBounceInOut","easeBounceOut","easeCircle","easeCircleIn","easeCircleInOut","easeCircleOut","easeCubic","easeCubicIn","easeCubicInOut","easeCubicOut","easeElastic","easeElasticIn","easeElasticInOut","easeElasticOut","easeExp","easeExpIn","easeExpInOut","easeExpOut","easeLinear","easePoly","easePolyIn","easePolyInOut","easePolyOut","easeQuad","easeQuadIn","easeQuadInOut","easeQuadOut","easeSin","easeSinIn","easeSinInOut","easeSinOut","17","d3Dsv","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","init","fetch","dsvParse","undefined","responseJson","json","parser","text$$1","DOMParser","parseFromString","xml","html","image","Image","onerror","onload","src","d3-dsv","18","d3Quadtree","d3Collection","d3Timer","jiggle","vx","vy","find","nodeById","nodeId","x$1","y$1","initialAngle","forceCenter","nodes","force","sx","sy","forceCollide","radii","strength","iterations","tree","ri","ri2","quadtree","visitAfter","prepare","visit","quad","y0","y1","rj","forceLink","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","Infinity","theta2","accumulate","x2","distanceMin","distanceMax","theta","forceRadial","radiuses","forceSimulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","timer","fx","fy","initializeNodes","angle","initializeForce","restart","d2","closest","forceX","forceY","yz","d3-collection","d3-quadtree","d3-timer","19","formatDecimal","toExponential","coefficient","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","formatRounded","formatTypes","%","toFixed","toPrecision","toUpperCase","locale","prefixes","formatLocale","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","formatPrefix","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","20","adder","Adder","reset","temp","valueOf","bv","av","epsilon","quarterPi","degrees","radians","atan","exp","acos","haversin","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","cartesianNormalizeInPlace","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","ranges","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","lambda00$2","phi00$2","z0","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","pointEqual","Intersection","points","other","entry","clipRejoin","segments","compareIntersection","startInside","clip","segment","p1","current","isSubject","longitude","polygonContains","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","q1","c0","v00","point2","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","b1","polygonInside","cleanInside","ax","ay","lambda0$2","sinPhi0$1","cosPhi0$1","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","x00","y00","x0$1","y0$1","areaSum$1","areaRingSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","areaPointFirst$1","areaPoint$1","x00$1","y00$1","x0$3","y0$3","x0$2","y0$2","boundsStream$1","bounds","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lineTo","lengthRing","x00$2","y00$2","x0$4","y0$4","lengthSum$1","lengthStream$1","lengthPointFirst$1","lengthPoint$1","PathString","_string","circle$1","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","translate","fitExtent","fitSize","fitWidth","fitHeight","_circle","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","resampleNone","transformRadians","scaleTranslate","scaleTranslateRotate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cacheStream","preclip","postclip","recenter","transformRotate","clipAngle","reflectX","reflectY","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","equirectangularRaw","conicEquidistantRaw","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","feature","deltaMax","geoCentroid","geoCircle","circle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoContains","geoDistance","geoEqualEarth","geoEqualEarthRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","sa","tx","ty","kx","ky","geoInterpolate","cy1","sy1","kx0","ky0","kx1","ky1","geoLength","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoPath","projectionStream","contextStream","measure","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","21","defaultSeparation","meanXReduce","maxYReduce","children","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","enclose","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r1","r2","x21","y21","r21","x3","y3","r3","b2","b3","d1","xa","xb","ya","yb","place","intersects","score","Node$1","previous","packEnclose","aa","sj","sk","pack","optional","required","constantZero","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","squarify","resquarify","_squarify","cluster","separation","nodeSize","previousNode","meanX","maxY","leafLeft","leafRight","packSiblings","partition","positionNode","stratify","nodeKey","nodeByKey","treeRoot","firstWalk","secondWalk","sizeNode","bottom","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingOuter","treemapBinary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","treemapResquarify","treemapSliceDice","treemapSquarify","22","d3Color","basis","v2","v3","basis$1","basisClosed","linear","hue","gamma","nogamma","exponential","rgbGamma","rgbSpline","spline","rgbBasis","rgbBasisClosed","numberArray","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","setTime","reA","reB","string","am","bm","bs","lastIndex","one","cssNode","cssRoot","cssView","svgNode","skewX","scaleX","scaleY","decompose","interpolateTransform","pxComma","pxParen","degParen","interpolateTransformCss","createElement","defaultView","getComputedStyle","getPropertyValue","removeChild","interpolateTransformSvg","createElementNS","setAttribute","consolidate","rho","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateCubehelix","interpolateCubehelixLong","interpolateDate","interpolateDiscrete","interpolateHcl","interpolateHclLong","interpolateHsl","interpolateHslLong","interpolateHue","interpolateLab","interpolateNumber","interpolateNumberArray","interpolateObject","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateRound","interpolateString","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","duration","piecewise","quantize","interpolator","samples","d3-color","23","tauEpsilon","Path","_x0","_y0","_x1","_y1","bezierCurveTo","arcTo","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","da","24","lexicographicOrder","computeUpperHullIndexes","polygonArea","polygonCentroid","inside","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","polygonLength","perimeter","25","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","Quadtree","addAll","leaf_copy","treeProto","cover","quads","retainer","removeAll","26","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","27","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp","scheme","BrBG","scheme$1","PRGn","scheme$2","PiYG","scheme$3","PuOr","scheme$4","RdBu","scheme$5","RdGy","scheme$6","RdYlBu","scheme$7","RdYlGn","scheme$8","Spectral","scheme$9","BuGn","scheme$a","BuPu","scheme$b","GnBu","scheme$c","OrRd","scheme$d","PuBuGn","scheme$e","PuBu","scheme$f","PuRd","scheme$g","RdPu","scheme$h","YlGnBu","scheme$i","YlGn","scheme$j","YlOrBr","scheme$k","YlOrRd","scheme$l","Blues","scheme$m","Greens","scheme$n","Greys","scheme$o","Purples","scheme$p","Reds","scheme$q","Oranges","warm","cool","c$1","pi_1_3","pi_2_3","ramp$1","viridis","magma","inferno","plasma","interpolateBlues","interpolateBrBG","interpolateBuGn","interpolateBuPu","interpolateCividis","interpolateCool","interpolateCubehelixDefault","interpolateGnBu","interpolateGreens","interpolateGreys","interpolateInferno","interpolateMagma","interpolateOrRd","interpolateOranges","interpolatePRGn","interpolatePiYG","interpolatePlasma","interpolatePuBu","interpolatePuBuGn","interpolatePuOr","interpolatePuRd","interpolatePurples","interpolateRainbow","ts","interpolateRdBu","interpolateRdGy","interpolateRdPu","interpolateRdYlBu","interpolateRdYlGn","interpolateReds","interpolateSinebow","interpolateSpectral","interpolateTurbo","interpolateViridis","interpolateWarm","interpolateYlGn","interpolateYlGnBu","interpolateYlOrBr","interpolateYlOrRd","schemeAccent","schemeBlues","schemeBrBG","schemeBuGn","schemeBuPu","schemeCategory10","schemeDark2","schemeGnBu","schemeGreens","schemeGreys","schemeOrRd","schemeOranges","schemePRGn","schemePaired","schemePastel1","schemePastel2","schemePiYG","schemePuBu","schemePuBuGn","schemePuOr","schemePuRd","schemePurples","schemeRdBu","schemeRdGy","schemeRdPu","schemeRdYlBu","schemeRdYlGn","schemeReds","schemeSet1","schemeSet2","schemeSet3","schemeSpectral","schemeTableau10","schemeYlGn","schemeYlGnBu","schemeYlOrBr","schemeYlOrRd","28","d3Format","d3Time","d3TimeFormat","initRange","initInterpolator","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","pointish","unit","normalize","clamper","bimap","d0","polymap","clamp","untransform","continuous","linearish","nice","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","transformSymlog","log1p","transformSymexp","expm1","symlogish","transformPow","transformSqrt","transformSquare","powish","number$1","calendar","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","durationSecond","durationMinute","durationHour","durationDay","tickInterval","every","transformer$1","k10","copy$1","sequentialPow","transformer$2","k21","divergingPow","scaleBand","scalePoint","scaleIdentity","identity$1","scaleLinear","scaleLog","scaleSymlog","symlog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","invertExtent","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","scaleSequential","sequential","scaleSequentialLog","sequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","sequentialSymlog","scaleSequentialQuantile","sequentialQuantile","scaleDiverging","diverging","scaleDivergingLog","divergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","divergingSymlog","d3-format","d3-time","d3-time-format","29","xhtml","namespaces","xlink","xmlns","namespace","space","creatorInherit","ownerDocument","uri","namespaceURI","creatorFixed","fullname","creator","none","selector","selectorAll","matcher","matches","sparse","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","mouseenter","mouseleave","Selection","parents","_groups","_parents","subnode","subgroup","bind","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","classed","before","deep","nextId","Local","sourceEvent","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","top","clientTop","clientPoint","30","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","dx0","dy0","dx1","dy1","Linear","curveLinear","defined","curve","defined0","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","curveHorizontal","curveVertical","curveRadial$1","p2","p3","draw","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","bundle","point$1","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","series","none$1","stackValue","appearance","peaks","peak","vi","vj","_t0","px","py","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","bx","by","kc","lc","curveBasis","curveBasisClosed","curveBasisOpen","curveBundle","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","linkHorizontal","linkRadial","linkVertical","pie","arcs","pa","radialArea","radialLine","stack","oz","kz","sz","sij","ki","si","stackOffsetDiverging","yn","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAppearance","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","31","localDate","H","L","setFullYear","utcDate","setUTCFullYear","newDate","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseQuarter","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","utcMonday","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","dow","utcSunday","utcThursday","timeParse","formatIso","toISOString","parseIso","isoFormat","isoParse","timeFormatDefaultLocale","timeFormatLocale","32","newInterval","floori","offseti","field","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeDays","timeFriday","timeFridays","timeHours","timeInterval","timeMilliseconds","timeMinutes","timeMondays","timeMonths","timeSaturday","timeSaturdays","timeSeconds","timeSundays","timeThursdays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeWeeks","timeYears","utcMilliseconds","utcSeconds","utcWeeks","33","taskHead","taskTail","frame","timeout","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","clearNow","Timer","_call","_time","delay","timerFlush","wake","sleep","nap","poke","clearInterval","setInterval","total","elapsed","34","d3Ease","emptyOn","emptyTween","schedule","timing","schedules","__transition","ease","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","styleInterpolate","styleTween","textInterpolate","textTween","Transition","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","removeFunction","cancel","defaultTiming","d3-ease","35","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","after","grandpa","uncle","sibling","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2","ha","hc","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","triangles","_found","voronoi","x$$1","y$$1","36","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","__zoom","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultConstrain","translateExtent","zoom","touchstarting","constrain","wheelDelta","scaleExtent","wheeled","dblclicked","__zooming","Gesture","taps","wheel","wheelidled","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","k0","translateBy","translateTo","zoomIdentity","zoomTransform","37","d3Axis","d3Brush","d3Chord","d3Contour","d3Fetch","d3Force","d3Geo","d3Hierarchy","d3Polygon","d3Random","d3Scale","d3ScaleChromatic","d3Shape","d3Voronoi","d3Zoom","enumerable","version","d3-axis","d3-brush","d3-chord","d3-contour","d3-fetch","d3-force","d3-geo","d3-hierarchy","d3-polygon","d3-random","d3-scale","d3-scale-chromatic","d3-shape","d3-voronoi","d3-zoom","38","setMatrixArrayType","ARRAY_TYPE","toRadian","degree","RANDOM","EPSILON","hypot","39","vec4","vec2","quat2","quat","mat3","mat2d","mat2","glMatrix","./common.js","./mat2.js","./mat2d.js","./mat3.js","./mat4.js","./quat.js","./quat2.js","./vec2.js","./vec3.js","./vec4.js","40","m00","m01","m10","m11","det","adjoint","multiply","rad","fromScaling","str","frob","LDU","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","sub","41","ac","ad","atx","aty","a4","a5","b4","b5","42","fromMat4","m02","m12","m20","m21","m22","a02","a12","a20","a21","a22","b01","b11","b21","fromMat2d","fromQuat","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b02","b03","b04","b05","b06","b07","b08","b09","b10","a6","a7","a8","b6","b7","b8","b12","b20","b22","43","m03","m13","m23","m30","m31","m32","m33","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bz","bw","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","near","far","rl","tb","nf","perspective","fovy","aspect","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","up","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","44","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","ln","slerp","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fromEuler","halfToRad","setAxes","sqlerp","rotationTo","sqrLen","squaredLength","lerp","et","omega","cosom","sinom","scale0","scale1","fRoot","fTrace","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","45","dq","w2","fromRotationTranslationValues","outer","getDual","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","qx","qy","qz","qw","rotateByQuatPrepend","rotateAroundAxis","axisLength","mt","sqlen","a_dot_b","setReal","getReal","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","46","divide","scaleAndAdd","squaredDistance","negate","transformMat2","transformMat2d","transformMat3","sinC","cosC","mag","cosine","sqrDist","dist","div","stride","arg","47","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformQuat","uvx","uvy","uvz","uuvx","uuvy","uuvz","mag1","mag2","48","G","J","v4","ix","iy","iz","iw","49","EventDispatcher","isInteger","nextKey","_listeners","hasEventListener","listenerArray","_lut","_canvas","MathUtils","DEG2RAD","RAD2DEG","generateUUID","euclideanModulo","mapLinear","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degToRad","radToDeg","isPowerOfTwo","ceilPowerOfTwo","floorPowerOfTwo","setQuaternionFromProperEuler","c13","s13","c1_3","s1_3","c3_1","s3_1","warn","Vector2","Matrix3","elements","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addVectors","addScalar","addScaledVector","subVectors","subScalar","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","lengthSq","manhattanLength","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","lerpVectors","fromArray","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","b23","b31","b32","b33","getInverse","throwOnDegenerate","t11","t12","t13","detInv","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","ImageUtils","getDataURL","HTMLCanvasElement","canvas","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","Quaternion","_z","_w","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","images","url","dispose","transformUv","uv","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getZ","getW","isWebGLRenderTarget","isWebGLMultisampleRenderTarget","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","sqrSin","tDir","multiplyQuaternionsFlat","_onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","isEuler","setFromAxisAngle","halfAngle","setFromRotationMatrix","s$1","s$2","s$3","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","_vector","Vector3","_quaternion","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyNormalMatrix","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","projectOnVector","denominator","projectOnPlane","planeNormal","setFromSpherical","setFromSphericalCoords","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","_v1","_m1","Matrix4","_zero","_one","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","makeBasis","extractRotation","scaleZ","makeRotationFromEuler","af","bf","ce","de","df","ce$1","cf$1","de$1","df$1","ae$1","af$1","be$1","bf$1","bc","bd","ac$1","ad$1","bc$1","bd$1","makeRotationFromQuaternion","a24","a34","a41","a42","a43","a44","b24","b34","b41","b42","b43","b44","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","invSX","invSY","invSZ","makePerspective","makeOrthographic","_matrix","_quaternion$1","Euler","DefaultOrder","_order","Layers","mask","RotationOrders","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$1","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","DefaultUp","configurable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","background","environment","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","translateOnAxis","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateParents","updateChildren","materials","shapes","serialize","library","element","isInstancedMesh","instanceMatrix","isMesh","isLine","isPoints","parameters","shape","uuids","i$1","l$1","i$2","extractFromCache","shapes$1","recursive","isScene","_points","_vector$1","_box","Box3","_v0","_v1$2","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","satForAxes","axes","extents","isBox3","setFromArray","minX","minY","minZ","maxX","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","expandByVector","expandByScalar","boundingBox","computeBoundingBox","union","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","distanceToPoint","getBoundingSphere","_box$1","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","_vector$2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","extDet","segExtent","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","_colorKeywords","_hslA","_hslB","setRGB","hue2rgb","SRGBToLinear","LinearToSRGB","Face3","materialIndex","vertexNormals","isColor","setHex","setStyle","setHSL","handleAlpha","parseFloat","components","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","normalized","NAMES","il$1","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","isMaterial","onBeforeCompile","customProgramCacheKey","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","usage","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float64BufferAttribute","Float64Array","DirectGeometry","vertices","normals","uvs","uvs2","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","arrayMax","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","vertexUvs$1","morphTarget","j$1","morphNormal","_bufferGeometryId","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","drawRange","isBufferGeometry","getIndex","setIndex","deleteAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","positions","lineDistances","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","attribute$1","attribute$2","attribute$3","lineDistancesNeedUpdate","attribute$4","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","il$2","morphAttribute$1","jl","computeFaceNormals","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","vA","vB","vC","normalizeNormals","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","indices","array2","geometry2","newAttribute","name$1","morphArray","newAttribute$1","key$1","attributeData","hasMorphAttributes","key$2","attributeArray","attributeData$1","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","updateMorphTargets","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","isSkinnedMesh","boneTransform","morphTargetDictionary","ml","groupMaterial","faceIndex","a$1","b$1","group$1","groupMaterial$1","jl$1","i$3","il$3","isMultiMaterial","fl","faceMaterial","fvA","fvB","fvC","uvs_f","_geometryId","_m1$3","_obj$1","_offset$1","Geometry","fromBufferGeometry","scope","addFace","areaWeighted","vl","f$1","fl$1","face$1","v$1","vl$1","f$2","fl$2","face$2","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","faceNormal$1","vertexNormals$1","f$3","fl$3","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","j$2","jl$2","uvsCopy","kl","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","newUvs1","newUvs2","uvs1","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","i$4","il$4","i$5","il$5","j$3","jl$3","srcVertexNormal","destVertexNormal","j$4","jl$4","i$6","il$6","i$7","il$7","i$8","il$8","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","__proto__","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy$1","ix$1","cloneUniforms","mergeUniforms","uniforms","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Camera","focus","filmGauge","filmOffset","updateProjectionMatrix","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","stencil","WebGLCubeRenderTarget","dummy","DataTexture","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","fromEquirectangularTexture","shader","tEquirect","isDataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","UniformsLib","common","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","createBuffer","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","toneMapping","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","buffer$1","type$1","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","array$1","previousAttribute","_bufferGeometry","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","MAX_SAFE_INTEGER","morphInfluencesSum","influence$1","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","physical","transparency","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","getShaderParameter","getShaderInfoLog","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","prefixVertex","prefixFragment","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","shaderName","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","cachedUniforms","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","nClipPlanes","nClipIntersection","isMeshStandardMaterial","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","shaderobject","getShaderObject","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","onSceneDispose","cameras","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","normalBias","mapSize","isSpotLight","uniforms$1","penumbra","shadow$1","shadowUniforms$1","isRectAreaLight","uniforms$2","isPointLight","uniforms$3","shadow$2","shadowUniforms$2","isHemisphereLight","uniforms$4","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","depthMaterial","depthMaterial$1","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","pars$1","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","100","101","102","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","mipmapImage","mipmap$2","setTextureCubeDynamic","wrappingToGL","1000","1001","1002","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","samples$1","glInternalFormat$1","samples$2","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","WebXRController","_targetRay","_grip","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","disconnect","setFramebuffer","animation","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","inputSource$1","controller$1","getController","getTargetRaySpace","getControllerGrip","getGripSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","sortObjects","toneMappingExposure","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","rangeMin","rangeMax","message","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","projectObject","isGroup","isLOD","isImmediateRenderObject","geometry$1","material$1","renderObjects","isArrayCamera","camera2","renderObjectImmediate","materialProperties","lightsStateVersion","programCacheKey","programChange","numSupportedMorphTargets","numSupportedMorphNormals","needsLights","materialNeedsLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","ltc_1","LTC_1","ltc_2","LTC_2","opaqueObjects","transparentObjects","_webglFramebuffer","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","WebGL1Renderer","FogExp2","Fog","InterleavedBuffer","inputPose","gripPose","targetRay","grip","getPose","targetRaySpace","gripSpace","isInterleavedBuffer","arrayBuffers","_uuid","ib","_geometry","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","basePosition","skinIndex","skinWeight","_v1$4","_v2$2","LOD","_currentLevel","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","addLevel","getCurrentLevel","getObjectForDistance","calculateInverses","normalizeSkinWeights","boneIndex","boneInverses","_offsetMatrix","_identityMatrix","Skeleton","Bone","bone","bone$1","isBone","getBoneByName","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","linecap","linejoin","getMatrixAt","raycastTimes","instanceId","setMatrixAt","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","lineDistances$1","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distance$1","nbVertices","distance$2","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge1","edge2","vertex$1","ol","edge1$1","edge2$1","key$3","e$1","position$1","l$2","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","EPS","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","applyRadius","uvA","uvB","uvC","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","TorusBufferGeometry","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","invSize","hasHoles","outerLen","outerNode","linkedList","prev","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","middleInside","q2","o1","o2","o3","o4","onSegment","num","an","bp","ShapeUtils","isClockWise","pts","triangulateShape","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","ahole","h$1","hl$1","ahole$1","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","h$2","hl$2","ahole$2","k$1","bs$1","vert","h$3","hl$3","ahole$3","vert$1","vert$2","vert$3","t$1","z$1","bs$2","vert$4","h$4","hl$4","ahole$4","vert$5","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","face$3","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","thetaSegments","phiSegments","RingBufferGeometry","radiusStep","thetaSegmentLevel","segment$1","LatheGeometry","LatheBufferGeometry","inverseSegments","base$1","ShapeGeometry","ShapeBufferGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","shapeHole$1","l$3","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","x$2","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","referenceValue","interpolant","createInterpolant","evaluate","resultBuffer","numTimes","valueStart","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","parseKeyframeTrack","trackType","typeName","getTrackTypeForValueTypeName","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","giveUpAt$1","beforeStart_","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","readOffset$1","writeOffset$1","TypedKeyframeTrack","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","morphTargetNames","morphTargetName","m$1","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setPath","setResourcePath","setRequestHeader","loading","FileLoader","AnimationLoader","CompressedTextureLoader","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","initCatmullRom","initNonuniformCatmullRom","dt0","dt1","dt2","calc","cached","request","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","responseType","Blob","header","XMLHttpRequest","open","callbacks","callback$1","withCredentials","overrideMimeType","send","setResponseType","setWithCredentials","setMimeType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","texData","onImageLoad","onImageError","substr","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","pt2","getTangentAt","MAX_VALUE","theta$1","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","LightProbe","MaterialLoader","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","scaleW","scaleH","isDirectionalLightShadow","isSphericalHarmonics3","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","TYPED_ARRAYS","typedArray","bufferAttribute","typedArray$1","bufferAttribute$1","drawcalls","offsets","ObjectLoader","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","geometryShapes","bufferGeometryLoader","details","shape$1","loadImage","currentUrl","path$1","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","ImageBitmapLoader","createImageBitmap","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","_cachedOutline","familyName","FontLoader","isImageBitmapLoader","setOptions","res","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","toChange","sIdx","sLen","sIdx$1","sLen$1","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","createPaths","AudioContext","webkitAudioContext","AudioLoader","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","Clock","autoStart","oldTime","elapsedTime","running","xmin","xmax","eyeSepHalf","eyeSepOnProjection","ymax","getElapsedTime","getDelta","newTime","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","Audio","getInput","autoplay","detune","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","filters","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_reservedRe","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_initMemoryManager","_accuIndex","Uniform","InstancedInterleavedBuffer","Raycaster","PointCloud","ascSort","intersectObject","Spherical","Cylindrical","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","lastIndex$1","lastObject$1","bindingsForPath$1","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","makeSafe","setFromCartesianCoords","_vector$7","Box2","_startP","_startEnd","Line3","ImmediateRenderObject","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_vector$8","SpotLightHelper","cone","coneLength","coneWidth","_vector$9","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","isSkeletonHelper","_vector$a","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","color$1","_v1$5","_v2$3","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$b","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_lineGeometry","_coneGeometry","_axis","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","setColor","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","ENCODINGS","3000","3001","3002","3004","3005","3006","3007","_flatCamera","ref","_lodPlanes","_sizeLods","_sigmas","lod","sizeLod","texelSize","positionSize","uvSize","faceIndexSize","_createPlanes","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","weights","poleAxis","_pingPongRenderTarget","_blurMaterial","latitudinal","dTheta","mipInt","inputEncoding","_equirectShader","_cubemapShader","_compileMaterial","_isLDR","_createRenderTarget","cubeUVRenderTarget","_setViewport","_getEquirectShader","_getCubemapShader","ClosedSplineCurve3","SplineCurve3","Spline","fromScene","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","cubemap","compileCubemapShader","compileEquirectangularShader","outputTarget","_textureToCubeUV","tmpMesh","cubeCamera","upSign","forwardSign","maxComponent","fExp","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","outputSize","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","Handlers","setTexturePath","isIntersectionBox","isIntersectionSphere","setFromMatrix","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","applyMatrix","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","revision","ACESFilmicToneMapping","AddEquation","AddOperation","AdditiveAnimationBlendMode","AdditiveBlending","AlphaFormat","AlwaysDepth","AlwaysStencilFunc","AxisHelper","BackSide","BasicDepthPacking","BasicShadowMap","BinaryTextureLoader","BoundingBoxHelper","ByteType","CanvasRenderer","CineonToneMapping","CubeGeometry","CullFaceBack","CullFaceFront","CullFaceFrontBack","CullFaceNone","CustomBlending","CustomToneMapping","DecrementStencilOp","DecrementWrapStencilOp","DepthFormat","DepthStencilFormat","DoubleSide","DstAlphaFactor","DstColorFactor","DynamicBufferAttribute","DynamicCopyUsage","DynamicDrawUsage","DynamicReadUsage","EdgesHelper","EqualDepth","EqualStencilFunc","Face4","FlatShading","Float32Attribute","Float64Attribute","FloatType","FrontFaceDirectionCCW","FrontFaceDirectionCW","FrontSide","GammaEncoding","GreaterDepth","GreaterEqualDepth","GreaterEqualStencilFunc","GreaterStencilFunc","HalfFloatType","IncrementStencilOp","IncrementWrapStencilOp","Int16Attribute","Int32Attribute","Int8Attribute","IntType","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","InvertStencilOp","JSONLoader","KeepStencilOp","LensFlare","LessDepth","LessEqualDepth","LessEqualStencilFunc","LessStencilFunc","LinePieces","LineStrip","LinearEncoding","LinearMipMapLinearFilter","LinearMipMapNearestFilter","LinearToneMapping","LogLuvEncoding","LoopOnce","LoopPingPong","LoopRepeat","LuminanceAlphaFormat","LuminanceFormat","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","MaxEquation","MeshFaceMaterial","MinEquation","MixOperation","MultiMaterial","MultiplyBlending","MultiplyOperation","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverDepth","NeverStencilFunc","NoBlending","NoColors","NoToneMapping","NormalAnimationBlendMode","NormalBlending","NotEqualDepth","NotEqualStencilFunc","ObjectSpaceNormalMap","OneFactor","OneMinusDstAlphaFactor","OneMinusDstColorFactor","OneMinusSrcAlphaFactor","OneMinusSrcColorFactor","PCFShadowMap","PCFSoftShadowMap","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","PointCloudMaterial","REVISION","RGBADepthPacking","RGBAFormat","RGBAIntegerFormat","RGBA_ASTC_10x10_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_BPTC_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGBDEncoding","RGBEEncoding","RGBEFormat","RGBFormat","RGBIntegerFormat","RGBM16Encoding","RGBM7Encoding","RGB_ETC1_Format","RGB_ETC2_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGB_S3TC_DXT1_Format","RGFormat","RGIntegerFormat","RedFormat","RedIntegerFormat","ReinhardToneMapping","ReplaceStencilOp","ReverseSubtractEquation","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","ShortType","SmoothShading","SrcAlphaFactor","SrcAlphaSaturateFactor","SrcColorFactor","StaticCopyUsage","StaticDrawUsage","StaticReadUsage","StreamCopyUsage","StreamDrawUsage","StreamReadUsage","SubtractEquation","SubtractiveBlending","TOUCH","DOLLY_PAN","DOLLY_ROTATE","TangentSpaceNormalMap","TriangleFanDrawMode","TriangleStripDrawMode","TrianglesDrawMode","Uint16Attribute","Uint32Attribute","Uint8Attribute","Uint8ClampedAttribute","UnsignedByteType","UnsignedInt248Type","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedShortType","VSMShadowMap","Vertex","VertexColors","WebGLRenderTargetCube","WireframeHelper","WrapAroundEnding","XHRLoader","ZeroCurvatureEnding","ZeroFactor","ZeroSlopeEnding","ZeroStencilOp","sRGBEncoding"],"mappings":"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,EAAA,CACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAxlB,KAAA,IACAylB,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAroB,MAAA,MACAsoB,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAprB,OAAA,SACAqrB,UAAA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","file":"app2.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"\nimport {event, select} from 'd3';\nimport {drawCube} from './somed3';\n\nconst render = (cube) => {\n\n    let forward = (color) => {\n        cube.rotate(color);\n    };\n\n    let reverse = (color) => {\n        cube.rotateReverse(color);\n    };\n\n    let rotateFn = forward;\n\n    window.addEventListener('keydown', (e) => {\n        if (e.key === \"Shift\") {\n            rotateFn = reverse;\n        }\n    });\n\n    window.addEventListener('keyup', (e) => {\n        if (e.key === \"Shift\") {\n            rotateFn = forward;\n        }\n    });\n\n    document.querySelectorAll(\".invert\").forEach(d => {\n\n        d.addEventListener(\"touchstart\", (ev) => {\n            rotateFn = reverse;\n        }, false);\n\n        d.addEventListener(\"touchend\", (ev) => {\n            rotateFn = forward;\n        }, false);\n\n        d.addEventListener(\"touchcancel\", (ev) => {\n            rotateFn = forward;\n        }, false);\n\n    });\n    /*\n    el.addEventListener(\"touchmove\", (ev) => {\n        ev.preventDefault();\n    }, false);\n    */\n\n\n    let renderCube = () => {\n        /*\n        let scramble = parser.SequenceParser(\"B L2 B' D' U' L' D' L2 B D B F' L2 R U' B2 F' D R2 B F D2 L R' B' L' F2 D F D'\");\n        scramble(cube);\n        */\n\n        [\n            \"white\", \"red\", \"green\",\n            \"blue\", \"yellow\", \"orange\",\n        ].forEach(color => {\n\n            let faceColors = cube.getFaceColors(color);\n            const face = document.querySelector(`.faces .${color}`);\n            const svg = drawCube(face.clientWidth, face.clientHeight, faceColors);\n            console.log(svg);\n            face.append(svg);\n\n        });\n\n    };\n\n    renderCube();\n\n    let update = () => {\n        [\n            \"white\", \"red\", \"green\",\n            \"blue\", \"yellow\", \"orange\",\n        ].forEach(color => {\n\n            let faceColors = cube.getFaceColors(color);\n            const face = document.querySelector(`.faces .${color} > svg`);\n            face.update(faceColors);\n\n        });\n    };\n\n    let clickMap = {\n        \"white\": \".up\",\n        \"red\": \".right\",\n        \"green\": \".front\",\n        \"blue\": \".back\",\n        \"yellow\": \".down\",\n        \"orange\": \".left\",\n    };\n\n    Object.keys(clickMap).forEach(k => {\n        let dir = clickMap[k];\n        select(`.faces .${k}`)\n            .on(\"touchstart\", (d, i, g) => {\n                event.preventDefault();\n                rotateFn(k);\n                update();\n            })\n            .on(\"click\", (d, i, g) => {\n                rotateFn(k);\n                update();\n            });\n    });\n};\n\nexport {\n    render\n};","\nimport * as d3 from 'd3';\n\nfunction buildData(inData) {\n    let data2 = [];\n    let iter = inData.values();\n    for (let y = 0; y < 3; y++) {\n        for (let x = 0; x < 3; x++) {\n            let d = [];\n            d.push(x);\n            d.push(y);\n            d.push(iter.next().value);\n            data2.push(d);\n        }\n    }\n\n    return data2;\n}\n\nfunction drawCube(width, height, inData) {\n\n    let dim = d3.min([width, height]) * 0.9;\n\n    const svg = d3.create(\"svg\")\n        .attr(\"viewBox\", [0, 0, dim, dim])\n        .attr(\"height\", dim);\n\n    let cdim = (dim/3.0);\n\n\n    let pieceGroup = svg.append(\"g\")\n        .selectAll(\"g\")\n        .data(buildData(inData))\n        .join(\"g\")\n        .call(g => {\n\n            g.append(\"path\")\n                .attr(\"d\", d => {\n                    let p = d3.path();\n                    //p.rect(d[0] * dim / 3.0, d[1] * dim / 3.0, dim / 3.0, dim / 3.0);\n                    p.rect(d[0] * cdim, d[1] * cdim, cdim, cdim);\n                    return p;\n                })\n                .attr(\"fill\", d => d[2]);\n\n            g.append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"x1\", d => d[0] * cdim)\n                .attr(\"x2\", d => (d[0] + 1) * cdim)\n                .attr(\"y1\", d => d[1] * cdim)\n                .attr(\"y2\", d => (d[1]) * cdim);\n\n            g.append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"x1\", d => d[0] * cdim)\n                .attr(\"x2\", d => (d[0]) * cdim)\n                .attr(\"y1\", d => d[1] * cdim)\n                .attr(\"y2\", d => (d[1] + 1) * cdim);\n\n        });\n\n    return Object.assign(svg.node(), {\n        update: (data) => {\n            pieceGroup.data(buildData(data))\n            .select(\"path\")\n            .attr(\"fill\", d => d[2]);\n        }\n    });\n}\n\nexport {drawCube};","import * as THREE from 'three';\nimport {\n    vec3\n} from \"gl-matrix\";\n\nlet render3d = (cube) => {\n\n    const divCube = document.querySelector(\"div.cube\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, divCube.clientWidth / divCube.clientHeight, 0.1, 1000);\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(divCube.clientWidth, divCube.clientHeight);\n\n    divCube.appendChild(renderer.domElement);\n\n    var geometry = new THREE.BoxGeometry(0.98, 0.98, 0.98);\n    var material = new THREE.MeshBasicMaterial({\n        //color: 0x00ff00\n        vertexColors: THREE.FaceColors\n    });\n\n    let group = new THREE.Group();\n\n\n    let fn = (c) => {\n\n        let g = geometry.clone();\n        console.log(c.colorFaces);\n        Object.keys(c.colorFaces).forEach(k => {\n            let cf = c.colorFaces[k];\n\n            g.faces.forEach(f => {\n                let dot = vec3.dot(vec3.fromValues(\n                    f.normal.x,\n                    f.normal.y,\n                    f.normal.z), cf.vector);\n\n                if (dot === 1) {\n                    f.color.setColorName(k);\n                } else if (dot === -1) {\n                    f.color.setColorName(\"black\");\n                }\n\n            });\n        });\n\n        let m = new THREE.Mesh(g, material);\n        m.position.set(\n            c.position2()[0],\n            c.position2()[1],\n            c.position2()[2]);\n        group.add(m);\n    };\n\n    let pieces = {};\n    let top = cube.getFace(\"white\");\n    let bottom = cube.getFace(\"yellow\");\n    let left = cube.getFace(\"orange\");\n    let right = cube.getFace(\"red\");\n    let front = cube.getFace(\"green\");\n    let back = cube.getFace(\"blue\");\n\n    [top, bottom, left, right, front, back].forEach(s => {\n        s.forEach(p => {\n            pieces[p.key] = p;\n        });\n    });\n\n    Object.keys(pieces).forEach(k => {\n        fn(pieces[k]);\n    });\n\n\n    //top is cube.getFace(\"white\") 9 pieces \n    //left is cube.getFace(\"orange\") 3 pieces \n    //right is cube.getFace(\"red\") 3 pieces\n    //bottom is cube.getFace(\"yellow\") 9 pieces \n    //front is cube.getFace(\"green\") 1 piece\n    //back is cube.getFace(\"blue\") 1 piece\n\n    /*\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++) {\n                let g = geometry.clone();\n\n                g.faces.forEach(f => {\n                    f.color.setRGB(Math.random(),\n                        Math.random(), Math.random());\n                });\n\n                let cube = new THREE.Mesh(g, material);\n                cube.position.set(i - 1, j - 1, k - 1);\n                group.add(cube);\n            }\n        }\n    }\n    */\n\n    scene.add(group);\n\n    camera.position.z = 5;\n\n    var animate = function () {\n        requestAnimationFrame(animate);\n\n        group.rotation.x += 0.01;\n        group.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n    };\n\n    animate();\n};\n\nexport {\n    render3d\n};","/* eslint no-console:0 consistent-return:0 */\n\"use strict\";\n//const d3 = require(\"d3\");\n//const glm = require(\"gl-matrix\");\n\nimport {vec3, mat4} from \"gl-matrix\";\nimport {dsvFormat} from \"d3\";\n\nconst WHITE=0;\nconst RED=1;\nconst GREEN=2;\nconst BLUE=3;\nconst ORANGE=4;\nconst YELLOW=5;\n\nlet colorMap = {\n    w: {\n        value: \"white\",\n        key: \"w\",\n        code: WHITE,\n        direction: vec3.fromValues(0,0,1),\n        adjacent: [\"b\", \"g\", \"o\", \"r\"],\n    },\n    r: {\n        value: \"red\",\n        key: \"r\",\n        code: RED,\n        direction: vec3.fromValues(1,0,0),\n        adjacent: [\"w\", \"y\", \"g\", \"b\"],\n    },\n    g: {\n        value: \"green\",\n        key: \"g\",\n        code: GREEN,\n        direction: vec3.fromValues(0,-1,0),\n        adjacent: [\"w\", \"y\", \"o\", \"r\"],\n    },\n    b: {\n        value: \"blue\",\n        key: \"b\",\n        code: BLUE,\n        direction: vec3.fromValues(0,1,0),\n        adjacent: [\"w\", \"y\", \"r\", \"o\"],\n    },\n    o: {\n        value: \"orange\",\n        key: \"o\",\n        code: ORANGE,\n        direction: vec3.fromValues(-1,0,0),\n        adjacent: [\"w\", \"y\", \"b\", \"g\"],\n    },\n    y: {\n        value: \"yellow\",\n        key: \"y\",\n        code: YELLOW,\n        direction: vec3.fromValues(0,0,-1),\n        adjacent: [\"g\", \"b\", \"o\", \"r\"],\n    },\n    '#': {\n        value: \"#\",\n        key: \"#\",\n        direction: vec3.fromValues(0,0,0)\n    }\n};\n\nconst COLORS = new Array(6);\nCOLORS[WHITE] = colorMap.w; \nCOLORS[GREEN] = colorMap.g; \nCOLORS[RED] = colorMap.r; \nCOLORS[BLUE] = colorMap.b; \nCOLORS[ORANGE] = colorMap.o; \nCOLORS[YELLOW] = colorMap.y; \n\nlet FACES = {\n    white: colorMap.w,\n    red: colorMap.r,\n    green: colorMap.g,\n    blue: colorMap.b,\n    orange: colorMap.o,\n    yellow: colorMap.y\n};\n\nfunction ColorFace(cube, color, vector, transform) {\n    Object.assign(this, {\n        color: color,\n        vector: vec3.clone(vector),\n        parentTransform: transform,\n        cube: cube\n    });\n}\n\nColorFace.prototype.position = function() {\n    return vec3.transformMat4(vec3.create(), this.vector, this.parentTransform);\n};\n\nColorFace.prototype.toString = function() {\n    return `${this.color}: ${this.position()}`; \n};\n\nColorFace.prototype.adjacentCenter = function() {\n\n    let pos = this.position();\n    let max;\n    let ret;\n\n    Object.keys(FACES).forEach(k => {\n        let f = FACES[k];\n        let p = this.cube.get(f.key);\n        let dot = vec3.dot(p.get(f.value), pos);\n\n        if (!max || max < dot) {\n            max = dot;\n            ret = p; \n        }\n    });\n\n    return ret;\n};\n\nfunction Piece(cube, s) {\n\n    let i = 0;\n    let colorFaces = {};\n    let colors = [];\n\n    let position = vec3.create();\n    s.split(\",\").map(c => {\n        if (c !== '#') {\n            colors.push(c);\n            i++;\n        }\n        vec3.add(position, position, colorMap[c].direction);\n    });\n\n    let transform = mat4.fromTranslation(mat4.create(), position);\n    s.split(\",\").map(c => {\n\n        let color = colorMap[c].value;\n        colorFaces[color] = new ColorFace(cube, color, colorMap[c].direction, transform);\n    });\n\n    let key = colors.join(\"\");\n\n    Object.assign(this, {\n        colorFaces: colorFaces,\n        colors: colors,\n        vector: vec3.fromValues(0,0,0),\n        position: position, //to be calculated on the fly from transform\n        transform: transform,\n        key: key,\n        cube: cube\n    });\n}\n\nPiece.prototype.rotate = function (m) {\n    mat4.mul(this.transform, m, this.transform);\n};\n\nPiece.prototype.toString = function() {\n\n    return `\nColors: ${this.colors}\nPosition: ${this.position2()}\nKey: ${this.key}\nColor Faces: ${this.colorFaces}\n`;\n\n};\n\nPiece.prototype.position2 = function() {\n    return vec3.transformMat4(vec3.create(), this.vector, this.transform);\n};\n\nPiece.prototype.get = function(color) {\n    return this.colorFaces[color].position();\n};\n\nPiece.prototype.getColors = function() {\n    return this.colorFaces; \n};\n\nPiece.prototype.getFaceColor = function(color) {\n\n    let colorValue = colorMap[color].value;\n    let ret;\n    Object.keys(this.colorFaces).forEach(k => {\n        let cf = this.colorFaces[k]; \n\n        if (cf.color !== \"#\" && cf.adjacentCenter().key === color) {\n            console.log(cf);\n            ret = cf.color;\n        }\n    });\n\n    return ret;\n};\n\nfunction Cube(csv) {\n\n    let parser = dsvFormat(\"|\");\n    let data = parser.parse(csv);\n\n    this.pieces = new Map();\n\n    data.forEach(r => {\n        let v = new Piece(this, r.data);\n        this.pieces.set(v.key, v);\n    });\n\n    this.faceRotations = {};\n\n    Object.keys(FACES).forEach(f => {\n\n        let dir = FACES[f].direction;\n        let cw = mat4.fromRotation(mat4.create(), -Math.PI/2.0, dir);\n\n        let tr1 = mat4.fromTranslation(mat4.create(), vec3.scale(vec3.create(), dir, -1));  \n        let tr2 = mat4.fromTranslation(mat4.create(), dir); \n\n        let rota = mat4.mul(mat4.create(), \n            cw, tr1\n        );\n\n        mat4.mul(rota, tr2, rota);\n\n        this.faceRotations[f] = rota;\n    });\n}\n\nCube.prototype.toString = function() {\n\n    let ret = \"\";\n\n    for (const p of this.pieces.keys()) {\n       ret += `${this.pieces.get(p)}\n`;\n    }\n\n    return ret;\n};\n\nCube.prototype.rotate = function(face) {\n\n    console.log(`Rotate: ${face}`);\n    for (const k of this.pieces.keys()) {\n\n        let p = this.pieces.get(k); \n        let rota = this.faceRotations[face];\n        let dir = FACES[face].direction; \n        if (vec3.dot(p.position2(), dir) === 1) {\n            console.log(p.toString());\n            p.rotate(rota);\n            console.log(p.toString());\n        }\n    }\n\n};\n\nCube.prototype.rotateReverse = function(face) {\n\n    console.log(`Rotate: ${face}`);\n    for (const k of this.pieces.keys()) {\n\n        let p = this.pieces.get(k); \n        let rota = mat4.invert(mat4.create(), this.faceRotations[face]);\n        let dir = FACES[face].direction; \n        if (vec3.dot(p.position2(), dir) === 1) {\n            console.log(p.toString());\n            p.rotate(rota);\n            console.log(p.toString());\n        }\n    }\n\n};\n\nCube.prototype.get = function(key) {\n    return this.pieces.get(key);\n};\n\nCube.prototype.getByPosition = function(key) {\n\n    let vec = vec3.create();\n    key.split(\"\").forEach(c => {\n        vec3.add(vec, vec, colorMap[c].direction);\n    });\n\n    for (const k of this.pieces.keys()) {\n        let p = this.pieces.get(k);\n        if (vec3.equals(p.position2(), vec)) {\n            return p;\n        }\n    }\n\n    return undefined;\n};\n\nCube.prototype.getFace = function(color) {\n\n    let dir = FACES[color].direction;\n\n    let ret = [];\n    for (const k of this.pieces.keys()) {\n        let p = this.pieces.get(k);\n        if (vec3.dot(p.position2(), dir) === 1) {\n            ret.push(p);\n        }\n    }\n\n    return ret;\n};\n\nCube.prototype.getFacePiecePositions = function(faceColor)\n{\n    let a1 = [faceColor];\n    let a2 = [\n        colorMap[faceColor].adjacent[0], \n        \"\",\n        colorMap[faceColor].adjacent[1], \n    ];\n    let a3 = [\n        colorMap[faceColor].adjacent[2], \n        \"\",\n        colorMap[faceColor].adjacent[3], \n    ];\n\n    let ret = [];\n    for(const c1 of a1) {\n        for(const c2 of a2) {\n            for (const c3 of a3) {\n                ret.push(`${c1}${c3}${c2}`);\n            }\n        }\n    } \n    return ret;\n};\n\nCube.prototype.getFaceColors = function(face) {\n\n    if (!(face in colorMap)) {\n        face = FACES[face].key;\n    }\n\n    return this.getFacePiecePositions(face)\n        .map(p => this.getByPosition(p))\n        .map(pos => pos.getFaceColor(face));\n\n};\n\nexport {Cube};\n","import {Cube} from \"./cube\";\nimport {render} from \"./2d/render\";\nimport {text} from 'd3';\nimport {render3d} from \"./3d/render3d\";\n\nconst onload = () => {\n\treturn new Promise(function (resolve, reject) {\n\t\twindow.addEventListener('load', resolve);\n\t});\n};\n\nonload().then(() => {\n\n\t// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n\tlet vh = window.innerHeight * 0.01;\n\t// Then we set the value in the --vh custom property to the root of the document\n\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n\t// We listen to the resize event\n\twindow.addEventListener('resize', () => {\n\t\t// We execute the same script as before\n\t\tlet vh = window.innerHeight * 0.01;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t});\n\n\ttext(\"default3.csv\").then((d) => {\n\t\tconsole.log(Cube);\n\t\tlet cube = new Cube(d);\n\t\trender(cube);\n\t\trender3d(cube);\n\t});\n\n\n});","// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-axis/ v1.0.12 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nfunction identity(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-brush/ v1.1.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function(target) {\n    return d3Selection.touch(target, d3Selection.event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = d3Dispatch.dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return (!clean && that.__brush.emitter) || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      else this.emit(\"brush\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !d3Selection.event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (keys && d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        pointer = d3Selection.event.touches ? toucher(d3Selection.event.changedTouches[0].identifier) : d3Selection.mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushSelection = brushSelection;\nexports.brushX = brushX;\nexports.brushY = brushY;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-chord/ v1.0.6 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-path'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Path) { 'use strict';\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = pi * 2;\nvar max = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = d3Array.range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(d3Array.range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice = Array.prototype.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = d3Path.path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexports.chord = chord;\nexports.ribbon = ribbon;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.4.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.cubehelix = cubehelix;\nexports.gray = gray;\nexports.hcl = hcl;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.lch = lch;\nexports.rgb = rgb;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-contour/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold = d3Array.thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\n      tz = d3Array.tickStep(start, stop, tz);\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = d3Array.max(values0);\n      tz = d3Array.tickStep(0, stop, tz);\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nexports.contours = contours;\nexports.contourDensity = density;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-dispatch/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-drag/ v1.2.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction nodrag(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-dsv/ v1.2.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear()) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatBody = csv.formatBody;\nvar csvFormatRows = csv.formatRows;\nvar csvFormatRow = csv.formatRow;\nvar csvFormatValue = csv.formatValue;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatBody = tsv.formatBody;\nvar tsvFormatRows = tsv.formatRows;\nvar tsvFormatRow = tsv.formatRow;\nvar tsvFormatValue = tsv.formatValue;\n\nfunction autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nvar fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();\n\nexports.autoType = autoType;\nexports.csvFormat = csvFormat;\nexports.csvFormatBody = csvFormatBody;\nexports.csvFormatRow = csvFormatRow;\nexports.csvFormatRows = csvFormatRows;\nexports.csvFormatValue = csvFormatValue;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.dsvFormat = dsv;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatBody = tsvFormatBody;\nexports.tsvFormatRow = tsvFormatRow;\nexports.tsvFormatRows = tsvFormatRows;\nexports.tsvFormatValue = tsvFormatValue;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-ease/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackInOut = backInOut;\nexports.easeBackOut = backOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBounceOut = bounceOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleInOut = circleInOut;\nexports.easeCircleOut = circleOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicInOut = cubicInOut;\nexports.easeCubicOut = cubicOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticInOut = elasticInOut;\nexports.easeElasticOut = elasticOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpInOut = expInOut;\nexports.easeExpOut = expOut;\nexports.easeLinear = linear;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyInOut = polyInOut;\nexports.easePolyOut = polyOut;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadInOut = quadInOut;\nexports.easeQuadOut = quadOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinInOut = sinInOut;\nexports.easeSinOut = sinOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv;\nexports.tsv = tsv;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-force/ v1.2.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-quadtree'), require('d3-collection'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-collection', 'd3-dispatch', 'd3-timer'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Quadtree,d3Collection,d3Dispatch,d3Timer) { 'use strict';\n\nfunction center(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = d3Collection.map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = d3Collection.map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-format/ v1.4.4 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\nexports.FormatSpecifier = FormatSpecifier;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-geo/ v1.12.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, (function (exports, d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nfunction polygonContains(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y]);\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$1;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-hierarchy/ v1.1.9 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice = Array.prototype.slice;\n\nfunction shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$1() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packEnclose = enclose;\nexports.packSiblings = siblings;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapResquarify = resquarify;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-interpolate/ v1.4.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction numberArray(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\nfunction array(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateHue = hue$1;\nexports.interpolateLab = lab;\nexports.interpolateNumber = number;\nexports.interpolateNumberArray = numberArray;\nexports.interpolateObject = object;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-path/ v1.0.9 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-polygon/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction area(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonContains = contains;\nexports.polygonHull = hull;\nexports.polygonLength = length;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-quadtree/ v1.0.7 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-random/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction defaultSource() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n\nvar exponential = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-scale-chromatic/ v1.5.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-interpolate'), require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-interpolate', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Interpolate, d3Color) { 'use strict';\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nvar Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\nfunction ramp(scheme) {\n  return d3Interpolate.interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$a = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$a);\n\nvar scheme$b = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$b);\n\nvar scheme$c = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$c);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$d);\n\nvar scheme$e = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$e);\n\nvar scheme$f = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$f);\n\nvar scheme$g = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$g);\n\nvar scheme$h = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$h);\n\nvar scheme$i = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$i);\n\nvar scheme$j = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$j);\n\nvar scheme$k = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$k);\n\nvar scheme$l = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$l);\n\nvar scheme$m = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$m);\n\nvar scheme$n = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$n);\n\nvar scheme$o = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$o);\n\nvar scheme$p = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$p);\n\nvar scheme$q = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$q);\n\nfunction cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n\nvar cubehelix = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar c = d3Color.cubehelix();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n\nvar c$1 = d3Color.rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c$1.r = 255 * (x = Math.sin(t)) * x;\n  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c$1 + \"\";\n}\n\nfunction turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nexports.interpolateBlues = Blues;\nexports.interpolateBrBG = BrBG;\nexports.interpolateBuGn = BuGn;\nexports.interpolateBuPu = BuPu;\nexports.interpolateCividis = cividis;\nexports.interpolateCool = cool;\nexports.interpolateCubehelixDefault = cubehelix;\nexports.interpolateGnBu = GnBu;\nexports.interpolateGreens = Greens;\nexports.interpolateGreys = Greys;\nexports.interpolateInferno = inferno;\nexports.interpolateMagma = magma;\nexports.interpolateOrRd = OrRd;\nexports.interpolateOranges = Oranges;\nexports.interpolatePRGn = PRGn;\nexports.interpolatePiYG = PiYG;\nexports.interpolatePlasma = plasma;\nexports.interpolatePuBu = PuBu;\nexports.interpolatePuBuGn = PuBuGn;\nexports.interpolatePuOr = PuOr;\nexports.interpolatePuRd = PuRd;\nexports.interpolatePurples = Purples;\nexports.interpolateRainbow = rainbow;\nexports.interpolateRdBu = RdBu;\nexports.interpolateRdGy = RdGy;\nexports.interpolateRdPu = RdPu;\nexports.interpolateRdYlBu = RdYlBu;\nexports.interpolateRdYlGn = RdYlGn;\nexports.interpolateReds = Reds;\nexports.interpolateSinebow = sinebow;\nexports.interpolateSpectral = Spectral;\nexports.interpolateTurbo = turbo;\nexports.interpolateViridis = viridis;\nexports.interpolateWarm = warm;\nexports.interpolateYlGn = YlGn;\nexports.interpolateYlGnBu = YlGnBu;\nexports.interpolateYlOrBr = YlOrBr;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeAccent = Accent;\nexports.schemeBlues = scheme$l;\nexports.schemeBrBG = scheme;\nexports.schemeBuGn = scheme$9;\nexports.schemeBuPu = scheme$a;\nexports.schemeCategory10 = category10;\nexports.schemeDark2 = Dark2;\nexports.schemeGnBu = scheme$b;\nexports.schemeGreens = scheme$m;\nexports.schemeGreys = scheme$n;\nexports.schemeOrRd = scheme$c;\nexports.schemeOranges = scheme$q;\nexports.schemePRGn = scheme$1;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemePiYG = scheme$2;\nexports.schemePuBu = scheme$e;\nexports.schemePuBuGn = scheme$d;\nexports.schemePuOr = scheme$3;\nexports.schemePuRd = scheme$f;\nexports.schemePurples = scheme$o;\nexports.schemeRdBu = scheme$4;\nexports.schemeRdGy = scheme$5;\nexports.schemeRdPu = scheme$g;\nexports.schemeRdYlBu = scheme$6;\nexports.schemeRdYlGn = scheme$7;\nexports.schemeReds = scheme$p;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.schemeSpectral = scheme$8;\nexports.schemeTableau10 = Tableau10;\nexports.schemeYlGn = scheme$i;\nexports.schemeYlGnBu = scheme$h;\nexports.schemeYlOrBr = scheme$j;\nexports.schemeYlOrRd = scheme$k;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-scale/ v2.2.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n\nvar array = Array.prototype;\n\nvar map = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal() {\n  var index = d3Collection.map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3Interpolate.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = d3Array.tickStep(start, stop, count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity$1(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity$1(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$1() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$1()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((d3Array.bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer$2() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer$2()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer$2()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity$1;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleSymlog = symlog;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.tickFormat = tickFormat;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-selection/ v1.4.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nfunction matcher(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_join(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\nfunction selection_merge(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nexports.clientPoint = point;\nexports.create = create;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-shape/ v1.3.7 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$1 = x,\n      y$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$1 = x,\n      y$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$1.apply(this, (argv[0] = s, argv)), +y$1.apply(this, argv), +x$1.apply(this, (argv[0] = t, argv)), +y$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction appearance(series) {\n  var peaks = series.map(peak);\n  return none$1(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.areaRadial = areaRadial;\nexports.curveBasis = basis;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBundle = bundle;\nexports.curveCardinal = cardinal;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveLinear = curveLinear;\nexports.curveLinearClosed = linearClosed;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.line = line;\nexports.lineRadial = lineRadial$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkRadial = linkRadial;\nexports.linkVertical = linkVertical;\nexports.pie = pie;\nexports.pointRadial = pointRadial;\nexports.radialArea = areaRadial;\nexports.radialLine = lineRadial$1;\nexports.stack = stack;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAppearance = appearance;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.symbol = symbol;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.symbols = symbols;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-time-format/ v2.2.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-time/ v1.1.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-timer/ v1.0.10 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.interval = interval$1;\nexports.now = now;\nexports.timeout = timeout$1;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-transition/ v1.3.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Selection, d3Dispatch, d3Timer, d3Interpolate, d3Color, d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        string1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_textTween(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nfunction transition_end() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-voronoi/ v1.1.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x(d) {\n  return d[0];\n}\n\nfunction y(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x,\n      y$$1 = y,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon) * epsilon, Math.round(y$$1(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nexports.voronoi = voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-zoom/ v1.8.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -d3Selection.event.deltaY * (d3Selection.event.deltaMode === 1 ? 0.05 : d3Selection.event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = d3Interpolate.interpolateZoom,\n      listeners = d3Dispatch.dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function(selection, k, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = d3Selection.mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      d3Transition.interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = d3Selection.select(d3Selection.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = d3Selection.mouse(this),\n        x0 = d3Selection.event.clientX,\n        y0 = d3Selection.event.clientY;\n\n    d3Drag.dragDisable(d3Selection.event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    d3Transition.interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = d3Selection.event.clientX - x0, dy = d3Selection.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = d3Selection.mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      d3Drag.dragEnable(d3Selection.event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = d3Selection.mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (d3Selection.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) d3Selection.select(this).transition().duration(duration).call(schedule, t1, p0);\n    else d3Selection.select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, d3Selection.event.changedTouches.length === n),\n        started, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      d3Transition.interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = d3Selection.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = d3Selection.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        var p = d3Selection.select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.zoom = zoom;\nexports.zoomIdentity = identity;\nexports.zoomTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar d3Array = require('d3-array');\nvar d3Axis = require('d3-axis');\nvar d3Brush = require('d3-brush');\nvar d3Chord = require('d3-chord');\nvar d3Collection = require('d3-collection');\nvar d3Color = require('d3-color');\nvar d3Contour = require('d3-contour');\nvar d3Dispatch = require('d3-dispatch');\nvar d3Drag = require('d3-drag');\nvar d3Dsv = require('d3-dsv');\nvar d3Ease = require('d3-ease');\nvar d3Fetch = require('d3-fetch');\nvar d3Force = require('d3-force');\nvar d3Format = require('d3-format');\nvar d3Geo = require('d3-geo');\nvar d3Hierarchy = require('d3-hierarchy');\nvar d3Interpolate = require('d3-interpolate');\nvar d3Path = require('d3-path');\nvar d3Polygon = require('d3-polygon');\nvar d3Quadtree = require('d3-quadtree');\nvar d3Random = require('d3-random');\nvar d3Scale = require('d3-scale');\nvar d3ScaleChromatic = require('d3-scale-chromatic');\nvar d3Selection = require('d3-selection');\nvar d3Shape = require('d3-shape');\nvar d3Time = require('d3-time');\nvar d3TimeFormat = require('d3-time-format');\nvar d3Timer = require('d3-timer');\nvar d3Transition = require('d3-transition');\nvar d3Voronoi = require('d3-voronoi');\nvar d3Zoom = require('d3-zoom');\n\nvar version = \"5.16.0\";\n\nObject.keys(d3Array).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Array[k];\n\t\t}\n\t});\n});\nObject.keys(d3Axis).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Axis[k];\n\t\t}\n\t});\n});\nObject.keys(d3Brush).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Brush[k];\n\t\t}\n\t});\n});\nObject.keys(d3Chord).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Chord[k];\n\t\t}\n\t});\n});\nObject.keys(d3Collection).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Collection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Color).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Color[k];\n\t\t}\n\t});\n});\nObject.keys(d3Contour).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Contour[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dispatch).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dispatch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Drag).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Drag[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dsv).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dsv[k];\n\t\t}\n\t});\n});\nObject.keys(d3Ease).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Ease[k];\n\t\t}\n\t});\n});\nObject.keys(d3Fetch).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Fetch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Force).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Force[k];\n\t\t}\n\t});\n});\nObject.keys(d3Format).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Format[k];\n\t\t}\n\t});\n});\nObject.keys(d3Geo).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Geo[k];\n\t\t}\n\t});\n});\nObject.keys(d3Hierarchy).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Hierarchy[k];\n\t\t}\n\t});\n});\nObject.keys(d3Interpolate).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Interpolate[k];\n\t\t}\n\t});\n});\nObject.keys(d3Path).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Path[k];\n\t\t}\n\t});\n});\nObject.keys(d3Polygon).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Polygon[k];\n\t\t}\n\t});\n});\nObject.keys(d3Quadtree).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Quadtree[k];\n\t\t}\n\t});\n});\nObject.keys(d3Random).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Random[k];\n\t\t}\n\t});\n});\nObject.keys(d3Scale).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Scale[k];\n\t\t}\n\t});\n});\nObject.keys(d3ScaleChromatic).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3ScaleChromatic[k];\n\t\t}\n\t});\n});\nObject.keys(d3Selection).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Selection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Shape).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Shape[k];\n\t\t}\n\t});\n});\nObject.keys(d3Time).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Time[k];\n\t\t}\n\t});\n});\nObject.keys(d3TimeFormat).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3TimeFormat[k];\n\t\t}\n\t});\n});\nObject.keys(d3Timer).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Timer[k];\n\t\t}\n\t});\n});\nObject.keys(d3Transition).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Transition[k];\n\t\t}\n\t});\n});\nObject.keys(d3Voronoi).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Voronoi[k];\n\t\t}\n\t});\n});\nObject.keys(d3Zoom).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Zoom[k];\n\t\t}\n\t});\n});\nexports.version = version;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( 'name' in Function.prototype === false ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t}\n\n\tvar REVISION = '118';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\tvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar VSMShadowMap = 3;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar CineonToneMapping = 3;\n\tvar ACESFilmicToneMapping = 4;\n\tvar CustomToneMapping = 5;\n\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipmapNearestFilter = 1004;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipmapLinearFilter = 1005;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipmapNearestFilter = 1007;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipmapLinearFilter = 1008;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RedIntegerFormat = 1029;\n\tvar RGFormat = 1030;\n\tvar RGIntegerFormat = 1031;\n\tvar RGBIntegerFormat = 1032;\n\tvar RGBAIntegerFormat = 1033;\n\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGB_ETC2_Format = 37492;\n\tvar RGBA_ETC2_EAC_Format = 37496;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar RGBA_BPTC_Format = 36492;\n\tvar SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tvar SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tvar SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tvar SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tvar SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tvar SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tvar SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tvar SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tvar SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tvar SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tvar SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tvar SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tvar SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tvar SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar NormalAnimationBlendMode = 2500;\n\tvar AdditiveAnimationBlendMode = 2501;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\n\tvar ZeroStencilOp = 0;\n\tvar KeepStencilOp = 7680;\n\tvar ReplaceStencilOp = 7681;\n\tvar IncrementStencilOp = 7682;\n\tvar DecrementStencilOp = 7683;\n\tvar IncrementWrapStencilOp = 34055;\n\tvar DecrementWrapStencilOp = 34056;\n\tvar InvertStencilOp = 5386;\n\n\tvar NeverStencilFunc = 512;\n\tvar LessStencilFunc = 513;\n\tvar EqualStencilFunc = 514;\n\tvar LessEqualStencilFunc = 515;\n\tvar GreaterStencilFunc = 516;\n\tvar NotEqualStencilFunc = 517;\n\tvar GreaterEqualStencilFunc = 518;\n\tvar AlwaysStencilFunc = 519;\n\n\tvar StaticDrawUsage = 35044;\n\tvar DynamicDrawUsage = 35048;\n\tvar StreamDrawUsage = 35040;\n\tvar StaticReadUsage = 35045;\n\tvar DynamicReadUsage = 35049;\n\tvar StreamReadUsage = 35041;\n\tvar StaticCopyUsage = 35046;\n\tvar DynamicCopyUsage = 35050;\n\tvar StreamCopyUsage = 35042;\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { this._listeners = {}; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return false; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author thezwap\n\t */\n\n\tvar _lut = [];\n\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t}\n\n\tvar MathUtils = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t},\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * MathUtils.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tceilPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tfloorPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t\t// angles are in radians\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c2 = cos( b / 2 );\n\t\t\tvar s2 = sin( b / 2 );\n\n\t\t\tvar c13 = cos( ( a + c ) / 2 );\n\t\t\tvar s13 = sin( ( a + c ) / 2 );\n\n\t\t\tvar c1_3 = cos( ( a - c ) / 2 );\n\t\t\tvar s1_3 = sin( ( a - c ) / 2 );\n\n\t\t\tvar c3_1 = cos( ( c - a ) / 2 );\n\t\t\tvar s3_1 = sin( ( c - a ) / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYX':\n\t\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZY':\n\t\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXZ':\n\t\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZX':\n\t\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXY':\n\t\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYZ':\n\t\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tcross: function ( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp;\n\t\t\tvar m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tvar c = Math.cos( rotation );\n\t\t\tvar s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t},\n\n\t\tscale: function ( sx, sy ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotate: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta );\n\t\t\tvar s = Math.sin( theta );\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\t\tte[ 0 ] = c * a11 + s * a21;\n\t\t\tte[ 3 ] = c * a12 + s * a22;\n\t\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( tx, ty ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar _canvas;\n\n\tvar ImageUtils = {\n\n\t\tgetDataURL: function ( image ) {\n\n\t\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tif ( _canvas === undefined ) { _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); }\n\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tvar output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY,\n\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// process single image\n\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) { return uv; }\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( w === void 0 ) w = 1;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tObject.defineProperties( Vector4.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.z = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.w = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z; // variables for result\n\t\t\tvar epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) { s = 1; }\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: WebGLRenderTarget,\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\t\tconstructor: WebGLMultisampleRenderTarget,\n\n\t\tisWebGLMultisampleRenderTarget: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\t\tthis.samples = source.samples;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( w === void 0 ) w = 1;\n\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tvar x1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t},\n\n\t\tmultiplyQuaternionsFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\t\tvar x0 = src0[ srcOffset0 ];\n\t\t\tvar y0 = src0[ srcOffset0 + 1 ];\n\t\t\tvar z0 = src0[ srcOffset0 + 2 ];\n\t\t\tvar w0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tvar x1 = src1[ srcOffset1 ];\n\t\t\tvar y1 = src1[ srcOffset1 + 1 ];\n\t\t\tvar z1 = src1[ srcOffset1 + 2 ];\n\t\t\tvar w1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\t\treturn dst;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tisQuaternion: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\tvar s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\tvar s$1 = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s$1;\n\t\t\t\tthis._x = 0.25 * s$1;\n\t\t\t\tthis._y = ( m12 + m21 ) / s$1;\n\t\t\t\tthis._z = ( m13 + m31 ) / s$1;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\tvar s$2 = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s$2;\n\t\t\t\tthis._x = ( m12 + m21 ) / s$2;\n\t\t\t\tthis._y = 0.25 * s$2;\n\t\t\t\tthis._z = ( m23 + m32 ) / s$2;\n\n\t\t\t} else {\n\n\t\t\t\tvar s$3 = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s$3;\n\t\t\t\tthis._x = ( m13 + m31 ) / s$3;\n\t\t\t\tthis._y = ( m23 + m32 ) / s$3;\n\t\t\t\tthis._z = 0.25 * s$3;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tangleTo: function ( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t},\n\n\t\trotateTowards: function ( q, step ) {\n\n\t\t\tvar angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) { return this; }\n\n\t\t\tvar t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tinverse: function () {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) { return this; }\n\t\t\tif ( t === 1 ) { return this.copy( qb ); }\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\tthis.normalize();\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\t\tthis._x = attribute.getX( index );\n\t\t\tthis._y = attribute.getY( index );\n\t\t\tthis._z = attribute.getZ( index );\n\t\t\tthis._w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector = new Vector3();\n\tvar _quaternion = new Quaternion();\n\n\tfunction Vector3( x, y, z ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t\t},\n\n\t\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyNormalMatrix: function ( m ) {\n\n\t\t\treturn this.applyMatrix3( m ).normalize();\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t},\n\n\t\tunproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( v ) {\n\n\t\t\tvar denominator = v.lengthSq();\n\n\t\t\tif ( denominator === 0 ) { return this.set( 0, 0, 0 ); }\n\n\t\t\tvar scalar = v.dot( this ) / denominator;\n\n\t\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( _vector );\n\n\t\t},\n\n\t\treflect: function ( normal ) {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t},\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\t\tif ( denominator === 0 ) { return Math.PI / 2; }\n\n\t\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t},\n\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t},\n\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tsetFromMatrix3Column: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar _v1 = new Vector3();\n\tvar _m1 = new Matrix4();\n\tvar _zero = new Vector3( 0, 0, 0 );\n\tvar _one = new Vector3( 1, 1, 1 );\n\tvar _x = new Vector3();\n\tvar _y = new Vector3();\n\tvar _z = new Vector3();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function ( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce$1 = c * e, cf$1 = c * f, de$1 = d * e, df$1 = d * f;\n\n\t\t\t\tte[ 0 ] = ce$1 - df$1 * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de$1 + cf$1 * b;\n\n\t\t\t\tte[ 1 ] = cf$1 + de$1 * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df$1 - ce$1 * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae$1 = a * e, af$1 = a * f, be$1 = b * e, bf$1 = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be$1 * d - af$1;\n\t\t\t\tte[ 8 ] = ae$1 * d + bf$1;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf$1 * d + ae$1;\n\t\t\t\tte[ 9 ] = af$1 * d - be$1;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac$1 = a * c, ad$1 = a * d, bc$1 = b * c, bd$1 = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac$1 * f + bd$1;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad$1 * f - bc$1;\n\n\t\t\t\tte[ 2 ] = bc$1 * f - ad$1;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd$1 * f + ac$1;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\treturn this.compose( _zero, q, _one );\n\n\t\t},\n\n\t\tlookAt: function ( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\t_z.subVectors( eye, target );\n\n\t\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t_z.z = 1;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t_z.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_z.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\t\t\t\t_x.crossVectors( up, _z );\n\n\t\t\t}\n\n\t\t\t_x.normalize();\n\t\t\t_y.crossVectors( _z, _x );\n\n\t\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( x, y, z ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tte[ 12 ] = x.x;\n\t\t\t\tte[ 13 ] = x.y;\n\t\t\t\tte[ 14 ] = x.z;\n\n\t\t\t} else {\n\n\t\t\t\tte[ 12 ] = x;\n\t\t\t\tte[ 13 ] = y;\n\t\t\t\tte[ 14 ] = z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t\t}\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = position.x;\n\t\t\tte[ 13 ] = position.y;\n\t\t\tte[ 14 ] = position.z;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) { sx = - sx; }\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\t_m1.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t_m1.elements[ 0 ] *= invSX;\n\t\t\t_m1.elements[ 1 ] *= invSX;\n\t\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t\t_m1.elements[ 4 ] *= invSY;\n\t\t\t_m1.elements[ 5 ] *= invSY;\n\t\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _matrix = new Matrix4();\n\tvar _quaternion$1 = new Quaternion();\n\n\tfunction Euler( x, y, z, order ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( order === void 0 ) order = Euler.DefaultOrder;\n\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = MathUtils.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\n\t\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\n\t\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\n\t\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\n\t\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\n\t\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\n\t\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t\t},\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function ( newOrder ) {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\t_quaternion$1.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t\t},\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) { this._order = array[ 3 ]; }\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\tenableAll: function () {\n\n\t\t\tthis.mask = 0xffffffff | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\tdisableAll: function () {\n\n\t\t\tthis.mask = 0;\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\tvar _object3DId = 0;\n\n\tvar _v1$1 = new Vector3();\n\tvar _q1 = new Quaternion();\n\tvar _m1$1 = new Matrix4();\n\tvar _target = new Vector3();\n\n\tvar _position = new Vector3();\n\tvar _scale = new Vector3();\n\tvar _quaternion$2 = new Quaternion();\n\n\tvar _xAxis = new Vector3( 1, 0, 0 );\n\tvar _yAxis = new Vector3( 0, 1, 0 );\n\tvar _zAxis = new Vector3( 0, 0, 1 );\n\n\tvar _addedEvent = { type: 'added' };\n\tvar _removedEvent = { type: 'removed' };\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Object3D,\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tthis.matrix.premultiply( matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t\t},\n\n\t\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslateX: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t\t},\n\n\t\ttranslateY: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t\t},\n\n\t\ttranslateZ: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t\t},\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t\t},\n\n\t\tlookAt: function ( x, y, z ) {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t\t}\n\n\t\t},\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push( object );\n\n\t\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tattach: function ( object ) {\n\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix4( _m1$1 );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) { return this; }\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldScale: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) { return; }\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { object.name = this.name; }\n\t\t\tif ( this.castShadow === true ) { object.castShadow = true; }\n\t\t\tif ( this.receiveShadow === true ) { object.receiveShadow = true; }\n\t\t\tif ( this.visible === false ) { object.visible = false; }\n\t\t\tif ( this.frustumCulled === false ) { object.frustumCulled = false; }\n\t\t\tif ( this.renderOrder !== 0 ) { object.renderOrder = this.renderOrder; }\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { object.userData = this.userData; }\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) { object.matrixAutoUpdate = false; }\n\n\t\t\t// object specific properties\n\n\t\t\tif ( this.isInstancedMesh ) {\n\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i$1 = 0, l$1 = this.material.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i$1 ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i$2 = 0; i$2 < this.children.length; i$2 ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i$2 ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\t\t\t\tvar shapes$1 = extractFromCache( meta.shapes );\n\n\t\t\t\tif ( geometries.length > 0 ) { output.geometries = geometries; }\n\t\t\t\tif ( materials.length > 0 ) { output.materials = materials; }\n\t\t\t\tif ( textures.length > 0 ) { output.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { output.images = images; }\n\t\t\t\tif ( shapes$1.length > 0 ) { output.shapes = shapes$1; }\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) { recursive = true; }\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tisScene: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) { this.background = source.background.clone(); }\n\t\t\tif ( source.environment !== null ) { this.environment = source.environment.clone(); }\n\t\t\tif ( source.fog !== null ) { this.fog = source.fog.clone(); }\n\n\t\t\tif ( source.overrideMaterial !== null ) { this.overrideMaterial = source.overrideMaterial.clone(); }\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) { data.object.background = this.background.toJSON( meta ); }\n\t\t\tif ( this.environment !== null ) { data.object.environment = this.environment.toJSON( meta ); }\n\t\t\tif ( this.fog !== null ) { data.object.fog = this.fog.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar _points = [\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3()\n\t];\n\n\tvar _vector$1 = new Vector3();\n\n\tvar _box = new Box3();\n\n\t// triangle centered vertices\n\n\tvar _v0 = new Vector3();\n\tvar _v1$2 = new Vector3();\n\tvar _v2 = new Vector3();\n\n\t// triangle edge vectors\n\n\tvar _f0 = new Vector3();\n\tvar _f1 = new Vector3();\n\tvar _f2 = new Vector3();\n\n\tvar _center = new Vector3();\n\tvar _extents = new Vector3();\n\tvar _triangleNormal = new Vector3();\n\tvar _testAxis = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function ( object ) {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box );\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, _vector$1 );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t},\n\n\t\tintersectsTriangle: function ( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( _center );\n\t\t\t_extents.subVectors( this.max, _center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\t_v0.subVectors( triangle.a, _center );\n\t\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\n\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tgetBoundingSphere: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) { this.makeEmpty(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) { return this; }\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( _points );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\tfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\t\tfor ( var i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t_testAxis.fromArray( axes, i );\n\t\t\t// project the aabb onto the seperating axis\n\t\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\tvar p0 = v0.dot( _testAxis );\n\t\t\tvar p1 = v1.dot( _testAxis );\n\t\t\tvar p2 = v2.dot( _testAxis );\n\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tvar _box$1 = new Box3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\treturn ( this.radius < 0 );\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.center.set( 0, 0, 0 );\n\t\t\tthis.radius = - 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\t\ttarget = new Box3();\n\n\t\t\t}\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\tvar _vector$2 = new Vector3();\n\tvar _segCenter = new Vector3();\n\tvar _segDir = new Vector3();\n\tvar _diff = new Vector3();\n\n\tvar _edge1 = new Vector3();\n\tvar _edge2 = new Vector3();\n\tvar _normal = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, _vector$2 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tvar directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function ( point ) {\n\n\t\t\tvar directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\t_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn _vector$2.distanceToSquared( point );\n\n\t\t},\n\n\t\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( _segDir );\n\t\t\tvar b0 = _diff.dot( this.direction );\n\t\t\tvar b1 = - _diff.dot( _segDir );\n\t\t\tvar c = _diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t},\n\n\t\tintersectSphere: function ( sphere, target ) {\n\n\t\t\t_vector$2.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = _vector$2.dot( this.direction );\n\t\t\tvar d2 = _vector$2.dot( _vector$2 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) { return null; }\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) { return null; }\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) { return this.at( t1, target ); }\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, target ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, target ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) { return null; }\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) { tmin = tymin; }\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) { tmax = tymax; }\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) { return null; }\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) { tmin = tzmin; }\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) { tmax = tzmax; }\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) { return null; }\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn this.intersectBox( box, _vector$2 ) !== null;\n\n\t\t},\n\n\t\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t_edge1.subVectors( b, a );\n\t\t\t_edge2.subVectors( c, a );\n\t\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( _normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) { return null; }\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t_diff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector1 = new Vector3();\n\tvar _vector2 = new Vector3();\n\tvar _normalMatrix = new Matrix3();\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tisPlane: true,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function ( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( _vector1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t},\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v0$1 = new Vector3();\n\tvar _v1$3 = new Vector3();\n\tvar _v2$1 = new Vector3();\n\tvar _v3 = new Vector3();\n\n\tvar _vab = new Vector3();\n\tvar _vac = new Vector3();\n\tvar _vbc = new Vector3();\n\tvar _vap = new Vector3();\n\tvar _vbp = new Vector3();\n\tvar _vcp = new Vector3();\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tgetNormal: function ( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\t_v0$1.subVectors( a, b );\n\t\t\ttarget.cross( _v0$1 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t},\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t\t_v0$1.subVectors( c, a );\n\t\t\t_v1$3.subVectors( b, a );\n\t\t\t_v2$1.subVectors( point, a );\n\n\t\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t\t},\n\n\t\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t\t_v0$1.subVectors( c, b );\n\t\t\t_v1$3.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetArea: function () {\n\n\t\t\t_v0$1.subVectors( this.c, this.b );\n\t\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t\t},\n\n\t\tgetMidpoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tgetNormal: function ( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetPlane: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\t\ttarget = new Plane();\n\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetBarycoord: function ( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tisFrontFacing: function ( direction ) {\n\n\t\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors( b, a );\n\t\t\t_vac.subVectors( c, a );\n\t\t\t_vap.subVectors( p, a );\n\t\t\tvar d1 = _vab.dot( _vap );\n\t\t\tvar d2 = _vac.dot( _vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\t_vbp.subVectors( p, b );\n\t\t\tvar d3 = _vab.dot( _vbp );\n\t\t\tvar d4 = _vac.dot( _vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t\t}\n\n\t\t\t_vcp.subVectors( p, c );\n\t\t\tvar d5 = _vab.dot( _vcp );\n\t\t\tvar d6 = _vac.dot( _vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t_vbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t\t},\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tvar _hslA = { h: 0, s: 0, l: 0 };\n\tvar _hslB = { h: 0, s: 0, l: 0 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tfunction hue2rgb( p, q, t ) {\n\n\t\tif ( t < 0 ) { t += 1; }\n\t\tif ( t > 1 ) { t -= 1; }\n\t\tif ( t < 1 / 6 ) { return p + ( q - p ) * 6 * t; }\n\t\tif ( t < 1 / 2 ) { return q; }\n\t\tif ( t < 2 / 3 ) { return p + ( q - p ) * 6 * ( 2 / 3 - t ); }\n\t\treturn p;\n\n\t}\n\n\tfunction SRGBToLinear( c ) {\n\n\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t}\n\n\tfunction LinearToSRGB( c ) {\n\n\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function ( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) { return; }\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\treturn this.setColorName( style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetColorName: function ( style ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = _colorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopySRGBToLinear: function ( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToSRGB: function ( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertSRGBToLinear: function () {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToSRGB: function () {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( target ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tthis.getHSL( _hslA );\n\n\t\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpHSL: function ( color, alpha ) {\n\n\t\t\tthis.getHSL( _hslA );\n\t\t\tcolor.getHSL( _hslB );\n\n\t\t\tvar h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\t\tvar s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\t\tvar l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\t\tthis.r = attribute.getX( index );\n\t\t\tthis.g = attribute.getY( index );\n\t\t\tthis.b = attribute.getZ( index );\n\n\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t// assuming Uint8Array\n\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\tColor.NAMES = _colorKeywords;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0, il$1 = source.vertexColors.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tthis.vertexColors[ i$1 ] = source.vertexColors[ i$1 ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\t\tcustomProgramCacheKey: function () {\n\n\t\t\treturn this.onBeforeCompile.toString();\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) { return; }\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.color && this.color.isColor ) { data.color = this.color.getHex(); }\n\n\t\t\tif ( this.roughness !== undefined ) { data.roughness = this.roughness; }\n\t\t\tif ( this.metalness !== undefined ) { data.metalness = this.metalness; }\n\n\t\t\tif ( this.sheen && this.sheen.isColor ) { data.sheen = this.sheen.getHex(); }\n\t\t\tif ( this.emissive && this.emissive.isColor ) { data.emissive = this.emissive.getHex(); }\n\t\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) { data.emissiveIntensity = this.emissiveIntensity; }\n\n\t\t\tif ( this.specular && this.specular.isColor ) { data.specular = this.specular.getHex(); }\n\t\t\tif ( this.shininess !== undefined ) { data.shininess = this.shininess; }\n\t\t\tif ( this.clearcoat !== undefined ) { data.clearcoat = this.clearcoat; }\n\t\t\tif ( this.clearcoatRoughness !== undefined ) { data.clearcoatRoughness = this.clearcoatRoughness; }\n\n\t\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.map && this.map.isTexture ) { data.map = this.map.toJSON( meta ).uuid; }\n\t\t\tif ( this.matcap && this.matcap.isTexture ) { data.matcap = this.matcap.toJSON( meta ).uuid; }\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) { data.alphaMap = this.alphaMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) { data.lightMap = this.lightMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) { data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) { data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) { data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) { data.specularMap = this.specularMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\t\tif ( this.combine !== undefined ) { data.combine = this.combine; }\n\t\t\t\tif ( this.envMapIntensity !== undefined ) { data.envMapIntensity = this.envMapIntensity; }\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) { data.size = this.size; }\n\t\t\tif ( this.sizeAttenuation !== undefined ) { data.sizeAttenuation = this.sizeAttenuation; }\n\n\t\t\tif ( this.blending !== NormalBlending ) { data.blending = this.blending; }\n\t\t\tif ( this.flatShading === true ) { data.flatShading = this.flatShading; }\n\t\t\tif ( this.side !== FrontSide ) { data.side = this.side; }\n\t\t\tif ( this.vertexColors ) { data.vertexColors = true; }\n\n\t\t\tif ( this.opacity < 1 ) { data.opacity = this.opacity; }\n\t\t\tif ( this.transparent === true ) { data.transparent = this.transparent; }\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation && this.rotation !== 0 ) { data.rotation = this.rotation; }\n\n\t\t\tif ( this.polygonOffset === true ) { data.polygonOffset = true; }\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) { data.polygonOffsetFactor = this.polygonOffsetFactor; }\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) { data.polygonOffsetUnits = this.polygonOffsetUnits; }\n\n\t\t\tif ( this.linewidth && this.linewidth !== 1 ) { data.linewidth = this.linewidth; }\n\t\t\tif ( this.dashSize !== undefined ) { data.dashSize = this.dashSize; }\n\t\t\tif ( this.gapSize !== undefined ) { data.gapSize = this.gapSize; }\n\t\t\tif ( this.scale !== undefined ) { data.scale = this.scale; }\n\n\t\t\tif ( this.dithering === true ) { data.dithering = true; }\n\n\t\t\tif ( this.alphaTest > 0 ) { data.alphaTest = this.alphaTest; }\n\t\t\tif ( this.premultipliedAlpha === true ) { data.premultipliedAlpha = this.premultipliedAlpha; }\n\n\t\t\tif ( this.wireframe === true ) { data.wireframe = this.wireframe; }\n\t\t\tif ( this.wireframeLinewidth > 1 ) { data.wireframeLinewidth = this.wireframeLinewidth; }\n\t\t\tif ( this.wireframeLinecap !== 'round' ) { data.wireframeLinecap = this.wireframeLinecap; }\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) { data.wireframeLinejoin = this.wireframeLinejoin; }\n\n\t\t\tif ( this.morphTargets === true ) { data.morphTargets = true; }\n\t\t\tif ( this.morphNormals === true ) { data.morphNormals = true; }\n\t\t\tif ( this.skinning === true ) { data.skinning = true; }\n\n\t\t\tif ( this.visible === false ) { data.visible = false; }\n\n\t\t\tif ( this.toneMapped === false ) { data.toneMapped = false; }\n\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { data.userData = this.userData; }\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) { data.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { data.images = images; }\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\t\tvar srcPlanes = source.clippingPlanes;\n\t\t\tvar dstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.toneMapped = source.toneMapped;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _vector$3 = new Vector3();\n\tvar _vector2$1 = new Vector2();\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tif ( this.itemSize === 2 ) {\n\n\t\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = this.count; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\t_vector$3.fromBufferAttribute( this, i$1 );\n\t\t\t\t\t_vector$3.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXYZ( i$1, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyNormalMatrix: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.applyNormalMatrix( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.transformDirection( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar groups = [];\n\n\t\t\tvar group, i;\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < morphNormalsLength; i$1 ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i$1 ] = {\n\t\t\t\t\t\tname: morphNormals[ i$1 ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t\t}\n\n\t\t\tfor ( var i$2 = 0; i$2 < faces.length; i$2 ++ ) {\n\n\t\t\t\tvar face = faces[ i$2 ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i$2 ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i$2 );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs$1 = faceVertexUvs[ 1 ][ i$2 ];\n\n\t\t\t\t\tif ( vertexUvs$1 !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs$1[ 0 ], vertexUvs$1[ 1 ], vertexUvs$1[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i$2 );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j$1 = 0; j$1 < morphNormalsLength; j$1 ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j$1 ].vertexNormals[ i$2 ];\n\n\t\t\t\t\tmorphTargetsNormal[ j$1 ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) { return - Infinity; }\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) { max = array[ i ]; }\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n\tvar _m1$2 = new Matrix4();\n\tvar _obj = new Object3D();\n\tvar _offset = new Vector3();\n\tvar _box$2 = new Box3();\n\tvar _boxMorphTargets = new Box3();\n\tvar _vector$4 = new Vector3();\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: BufferGeometry,\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tsetAttribute: function ( name, attribute ) {\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeleteAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar tangent = this.attributes.tangent;\n\n\t\t\tif ( tangent !== undefined ) {\n\n\t\t\t\ttangent.transformDirection( matrix );\n\n\t\t\t\ttangent.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$2.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$2.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$2.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$2.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj.lookAt( vector );\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tvar position = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tvar attribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tvar attribute$1 = this.attributes.normal;\n\n\t\t\t\tif ( attribute$1 !== undefined ) {\n\n\t\t\t\t\tattribute$1.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute$1.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tvar attribute$2 = this.attributes.color;\n\n\t\t\t\tif ( attribute$2 !== undefined ) {\n\n\t\t\t\t\tattribute$2.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute$2.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tvar attribute$3 = this.attributes.uv;\n\n\t\t\t\tif ( attribute$3 !== undefined ) {\n\n\t\t\t\t\tattribute$3.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute$3.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tvar attribute$4 = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute$4 !== undefined ) {\n\n\t\t\t\t\tattribute$4.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute$4.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_box$2.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = position.count; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\t_vector$4.fromBufferAttribute( position, i$1 );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = morphAttributesPosition.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute$1 = morphAttributesPosition[ i$2 ];\n\t\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute$1.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute$1, j );\n\n\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar positionAttribute = this.getAttribute( 'position' );\n\n\t\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\t\tvar normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tfor ( var i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tfor ( var i$1 = 0, il$1 = index.count; i$1 < il$1; i$1 += 3 ) {\n\n\t\t\t\t\t\tvar vA = index.getX( i$1 + 0 );\n\t\t\t\t\t\tvar vB = index.getX( i$1 + 1 );\n\t\t\t\t\t\tvar vC = index.getX( i$1 + 2 );\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\t\tnA.add( cb );\n\t\t\t\t\t\tnB.add( cb );\n\t\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = positionAttribute.count; i$2 < il$2; i$2 += 3 ) {\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i$2 + 0 );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i$2 + 1 );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i$2 + 2 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) {\n\n\t\t\t\toffset = 0;\n\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) { continue; }\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( normals, i );\n\n\t\t\t\t_vector$4.normalize();\n\n\t\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\t\t\t\tvar normalized = attribute.normalized;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\t// attributes\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = this.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar morphArray = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name$1 ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute$1 = morphAttribute[ i ];\n\n\t\t\t\t\tvar newAttribute$1 = convertBufferAttribute( attribute$1, indices );\n\n\t\t\t\t\tmorphArray.push( newAttribute$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[ name$1 ] = morphArray;\n\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor ( var i$1 = 0, l = groups.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tvar group = groups[ i$1 ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) { data.userData = this.userData; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key$1 in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key$1 ];\n\n\t\t\t\tvar attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) { attributeData.name = attribute.name; }\n\n\t\t\t\tdata.data.attributes[ key$1 ] = attributeData;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = {};\n\t\t\tvar hasMorphAttributes = false;\n\n\t\t\tfor ( var key$2 in this.morphAttributes ) {\n\n\t\t\t\tvar attributeArray = this.morphAttributes[ key$2 ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute$1 = attributeArray[ i ];\n\n\t\t\t\t\tvar attributeData$1 = attribute$1.toJSON( data.data );\n\n\t\t\t\t\tif ( attribute$1.name !== '' ) { attributeData$1.name = attribute$1.name; }\n\n\t\t\t\t\tarray.push( attributeData$1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\t\tmorphAttributes[ key$2 ] = array;\n\n\t\t\t\t\thasMorphAttributes = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphAttributes ) {\n\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t const parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t const values = [];\n\n\t\t\t for ( const key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// used for storing cloned, shared data\n\n\t\t\tvar data = {};\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name$1 ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name$1 ] = array;\n\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i$1 = 0, l$1 = groups.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tvar group = groups[ i$1 ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tvar _inverseMatrix = new Matrix4();\n\tvar _ray = new Ray();\n\tvar _sphere = new Sphere();\n\n\tvar _vA = new Vector3();\n\tvar _vB = new Vector3();\n\tvar _vC = new Vector3();\n\n\tvar _tempA = new Vector3();\n\tvar _tempB = new Vector3();\n\tvar _tempC = new Vector3();\n\n\tvar _morphA = new Vector3();\n\tvar _morphB = new Vector3();\n\tvar _morphC = new Vector3();\n\n\tvar _uvA = new Vector2();\n\tvar _uvB = new Vector2();\n\tvar _uvC = new Vector2();\n\n\tvar _intersectionPoint = new Vector3();\n\tvar _intersectionPointWorld = new Vector3();\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) { return; }\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere.copy( geometry.boundingSphere );\n\t\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) { return; }\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tvar start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tvar end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( var j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\tvar a = index.getX( j );\n\t\t\t\t\t\t\t\tvar b = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tvar c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar start$1 = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tvar end$1 = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( var i$1 = start$1, il$1 = end$1; i$1 < il$1; i$1 += 3 ) {\n\n\t\t\t\t\t\t\tvar a$1 = index.getX( i$1 );\n\t\t\t\t\t\t\tvar b$1 = index.getX( i$1 + 1 );\n\t\t\t\t\t\t\tvar c$1 = index.getX( i$1 + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$1, b$1, c$1 );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i$1 / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i$2 = 0, il$2 = groups.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\t\tvar group$1 = groups[ i$2 ];\n\t\t\t\t\t\t\tvar groupMaterial$1 = material[ group$1.materialIndex ];\n\n\t\t\t\t\t\t\tvar start$2 = Math.max( group$1.start, drawRange.start );\n\t\t\t\t\t\t\tvar end$2 = Math.min( ( group$1.start + group$1.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( var j$1 = start$2, jl$1 = end$2; j$1 < jl$1; j$1 += 3 ) {\n\n\t\t\t\t\t\t\t\tvar a$2 = j$1;\n\t\t\t\t\t\t\t\tvar b$2 = j$1 + 1;\n\t\t\t\t\t\t\t\tvar c$2 = j$1 + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial$1, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$2, b$2, c$2 );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j$1 / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group$1.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar start$3 = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tvar end$3 = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( var i$3 = start$3, il$3 = end$3; i$3 < il$3; i$3 += 3 ) {\n\n\t\t\t\t\t\t\tvar a$3 = i$3;\n\t\t\t\t\t\t\tvar b$3 = i$3 + 1;\n\t\t\t\t\t\t\tvar c$3 = i$3 + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$3, b$3, c$3 );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i$3 / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) { uvs = faceVertexUvs; }\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) { continue; }\n\n\t\t\t\t\tvar fvA = vertices[ face.a ];\n\t\t\t\t\tvar fvB = vertices[ face.b ];\n\t\t\t\t\tvar fvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\tvar intersect;\n\n\t\tif ( material.side === BackSide ) {\n\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t} else {\n\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t}\n\n\t\tif ( intersect === null ) { return null; }\n\n\t\t_intersectionPointWorld.copy( point );\n\t\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return null; }\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\n\t}\n\n\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t\t_vA.fromBufferAttribute( position, a );\n\t\t_vB.fromBufferAttribute( position, b );\n\t\t_vC.fromBufferAttribute( position, c );\n\n\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) { continue; }\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.boneTransform( a, _vA );\n\t\t\tobject.boneTransform( b, _vB );\n\t\t\tobject.boneTransform( c, _vC );\n\n\t\t}\n\n\t\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\t\tif ( intersection ) {\n\n\t\t\tif ( uv ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( uv2 ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tvar face = new Face3( a, b, c );\n\t\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\t\tintersection.face = face;\n\n\t\t}\n\n\t\treturn intersection;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _geometryId = 0; // Geometry uses even numbers as Id\n\tvar _m1$3 = new Matrix4();\n\tvar _obj$1 = new Object3D();\n\tvar _offset$1 = new Vector3();\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Geometry,\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.faces.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$3.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$3.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$3.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$3.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj$1.lookAt( vector );\n\n\t\t\t_obj$1.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj$1.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar index = geometry.index !== null ? geometry.index : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( attributes.position === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar position = attributes.position;\n\t\t\tvar normal = attributes.normal;\n\t\t\tvar color = attributes.color;\n\t\t\tvar uv = attributes.uv;\n\t\t\tvar uv2 = attributes.uv2;\n\n\t\t\tif ( uv2 !== undefined ) { this.faceVertexUvs[ 1 ] = []; }\n\n\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\tscope.vertices.push( new Vector3().fromBufferAttribute( position, i ) );\n\n\t\t\t\tif ( color !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color().fromBufferAttribute( color, i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexColors = ( color === undefined ) ? [] : [\n\t\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\t\tscope.colors[ c ].clone()\n\t\t\t\t];\n\n\t\t\t\tvar vertexNormals = ( normal === undefined ) ? [] : [\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, a ),\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, b ),\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, c )\n\t\t\t\t];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uv !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, a ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, b ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, c )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uv2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, a ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, b ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, c )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < groups.length; i$1 ++ ) {\n\n\t\t\t\t\tvar group = groups[ i$1 ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( index.getX( j ), index.getX( j + 1 ), index.getX( j + 2 ), group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < index.count; i$2 += 3 ) {\n\n\t\t\t\t\t\taddFace( index.getX( i$2 ), index.getX( i$2 + 1 ), index.getX( i$2 + 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$3 = 0; i$3 < position.count; i$3 += 3 ) {\n\n\t\t\t\t\t\taddFace( i$3, i$3 + 1, i$3 + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) { areaWeighted = true; }\n\n\t\t\tvar vertices = new Array( this.vertices.length );\n\n\t\t\tfor ( var v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( var f$1 = 0, fl$1 = this.faces.length; f$1 < fl$1; f$1 ++ ) {\n\n\t\t\t\t\tvar face$1 = this.faces[ f$1 ];\n\n\t\t\t\t\tvertices[ face$1.a ].add( face$1.normal );\n\t\t\t\t\tvertices[ face$1.b ].add( face$1.normal );\n\t\t\t\t\tvertices[ face$1.c ].add( face$1.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var v$1 = 0, vl$1 = this.vertices.length; v$1 < vl$1; v$1 ++ ) {\n\n\t\t\t\tvertices[ v$1 ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var f$2 = 0, fl$2 = this.faces.length; f$2 < fl$2; f$2 ++ ) {\n\n\t\t\t\tvar face$2 = this.faces[ f$2 ];\n\n\t\t\t\tvar vertexNormals = face$2.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face$2.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face$2.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face$2.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face$2.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face$2.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face$2.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) { face.__originalVertexNormals = []; }\n\n\t\t\t\tfor ( var i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.morphTargets.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i$1 ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i$1 ] = {};\n\t\t\t\t\tthis.morphNormals[ i$1 ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i$1 ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i$1 ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i$1 ].vertexNormals;\n\n\t\t\t\t\tfor ( var f$1 = 0, fl$1 = this.faces.length; f$1 < fl$1; f$1 ++ ) {\n\n\t\t\t\t\t\tvar faceNormal = new Vector3();\n\t\t\t\t\t\tvar vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i$1 ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i$1 ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tfor ( var f$2 = 0, fl$2 = this.faces.length; f$2 < fl$2; f$2 ++ ) {\n\n\t\t\t\t\tvar face$1 = this.faces[ f$2 ];\n\n\t\t\t\t\tvar faceNormal$1 = morphNormals.faceNormals[ f$2 ];\n\t\t\t\t\tvar vertexNormals$1 = morphNormals.vertexNormals[ f$2 ];\n\n\t\t\t\t\tfaceNormal$1.copy( face$1.normal );\n\n\t\t\t\t\tvertexNormals$1.a.copy( face$1.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals$1.b.copy( face$1.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals$1.c.copy( face$1.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( var f$3 = 0, fl$3 = this.faces.length; f$3 < fl$3; f$3 ++ ) {\n\n\t\t\t\tvar face$2 = this.faces[ f$3 ];\n\n\t\t\t\tface$2.normal = face$2.__originalFaceNormal;\n\t\t\t\tface$2.vertexNormals = face$2.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) { materialIndexOffset = 0; }\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) { vertexCopy.applyMatrix4( matrix ); }\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i$1 = 0, il$1 = colors2.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i$1 ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( var i$2 = 0, il$2 = faces2.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\tvar face = faces2[ i$2 ], faceCopy = (void 0), normal = (void 0), color = (void 0),\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j$1 = 0, jl$1 = faceVertexColors.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j$1 ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( var i$3 = 0, il$3 = geometry.faceVertexUvs.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i$3 ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i$3 ] === undefined ) { this.faceVertexUvs[ i$3 ] = []; }\n\n\t\t\t\tfor ( var j$2 = 0, jl$2 = faceVertexUvs2.length; j$2 < jl$2; j$2 ++ ) {\n\n\t\t\t\t\tvar uvs2 = faceVertexUvs2[ j$2 ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( mesh.matrixAutoUpdate ) { mesh.updateMatrix(); }\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar v = this.vertices[ i ];\n\t\t\t\tvar key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.faces.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i$1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i$2 = faceIndicesToRemove.length - 1; i$2 >= 0; i$2 -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i$2 ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( var j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.vertices = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) { newUvs1 = []; }\n\t\t\tif ( uvs2 && uvs2.length === length ) { newUvs2 = []; }\n\n\t\t\tfor ( var i$1 = 0; i$1 < length; i$1 ++ ) {\n\n\t\t\t\tvar id = faces[ i$1 ]._id;\n\n\t\t\t\tif ( newUvs1 ) { newUvs1.push( uvs1[ id ] ); }\n\t\t\t\tif ( newUvs2 ) { newUvs2.push( uvs2[ id ] ); }\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) { this.faceVertexUvs[ 0 ] = newUvs1; }\n\t\t\tif ( newUvs2 ) { this.faceVertexUvs[ 1 ] = newUvs2; }\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i$1 = 0; i$1 < this.faces.length; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i$1 ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i$1 ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) { data.data.colors = colors; }\n\t\t\tif ( uvs.length > 0 ) { data.data.uvs = [ uvs ]; } // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t const parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t const values = [];\n\n\t\t\t for ( const key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( var i$1 = 0, il$1 = colors.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i$1 ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i$2 = 0, il$2 = faces.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i$2 ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( var i$3 = 0, il$3 = source.faceVertexUvs.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i$3 ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i$3 ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( var i$4 = 0, il$4 = morphTargets.length; i$4 < il$4; i$4 ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i$4 ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i$4 ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( var j$1 = 0, jl$1 = morphTargets[ i$4 ].vertices.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i$4 ].vertices[ j$1 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i$4 ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( var j$2 = 0, jl$2 = morphTargets[ i$4 ].normals.length; j$2 < jl$2; j$2 ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i$4 ].normals[ j$2 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( var i$5 = 0, il$5 = morphNormals.length; i$5 < il$5; i$5 ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i$5 ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( var j$3 = 0, jl$3 = morphNormals[ i$5 ].vertexNormals.length; j$3 < jl$3; j$3 ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i$5 ].vertexNormals[ j$3 ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i$5 ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( var j$4 = 0, jl$4 = morphNormals[ i$5 ].faceNormals.length; j$4 < jl$4; j$4 ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i$5 ].faceNormals[ j$4 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( var i$6 = 0, il$6 = skinWeights.length; i$6 < il$6; i$6 ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i$6 ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( var i$7 = 0, il$7 = skinIndices.length; i$7 < il$7; i$7 ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i$7 ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( var i$8 = 0, il$8 = lineDistances.length; i$8 < il$8; i$8 ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i$8 ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tvar BoxGeometry = /*@__PURE__*/(function (Geometry) {\n\t\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tGeometry.call(this);\n\n\t\t\tthis.type = 'BoxGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\t\tthis.mergeVertices();\n\n\t\t}\n\n\t\tif ( Geometry ) BoxGeometry.__proto__ = Geometry;\n\t\tBoxGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n\t\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t\treturn BoxGeometry;\n\t}(Geometry));\n\n\t// BoxBufferGeometry\n\n\tvar BoxBufferGeometry = /*@__PURE__*/(function (BufferGeometry) {\n\t\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tBufferGeometry.call(this);\n\n\t\t\tthis.type = 'BoxBufferGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tvar scope = this;\n\n\t\t\twidth = width || 1;\n\t\t\theight = height || 1;\n\t\t\tdepth = depth || 1;\n\n\t\t\t// segments\n\n\t\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t\t// buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tvar numberOfVertices = 0;\n\t\t\tvar groupStart = 0;\n\n\t\t\t// build each side of the box geometry\n\n\t\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\t\tvar segmentWidth = width / gridX;\n\t\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\t\tvar widthHalf = width / 2;\n\t\t\t\tvar heightHalf = height / 2;\n\t\t\t\tvar depthHalf = depth / 2;\n\n\t\t\t\tvar gridX1 = gridX + 1;\n\t\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\t\tvar vertexCounter = 0;\n\t\t\t\tvar groupCount = 0;\n\n\t\t\t\tvar vector = new Vector3();\n\n\t\t\t\t// generate vertices, normals and uvs\n\n\t\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// uvs\n\n\t\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t\t// counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// indices\n\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\t\tfor ( var iy$1 = 0; iy$1 < gridY; iy$1 ++ ) {\n\n\t\t\t\t\tfor ( var ix$1 = 0; ix$1 < gridX; ix$1 ++ ) {\n\n\t\t\t\t\t\tvar a = numberOfVertices + ix$1 + gridX1 * iy$1;\n\t\t\t\t\t\tvar b = numberOfVertices + ix$1 + gridX1 * ( iy$1 + 1 );\n\t\t\t\t\t\tvar c = numberOfVertices + ( ix$1 + 1 ) + gridX1 * ( iy$1 + 1 );\n\t\t\t\t\t\tvar d = numberOfVertices + ( ix$1 + 1 ) + gridX1 * iy$1;\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t\t// increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t\t// update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( BufferGeometry ) BoxBufferGeometry.__proto__ = BufferGeometry;\n\t\tBoxBufferGeometry.prototype = Object.create( BufferGeometry && BufferGeometry.prototype );\n\t\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t\treturn BoxBufferGeometry;\n\t}(BufferGeometry));\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tfunction cloneUniforms( src ) {\n\n\t\tvar dst = {};\n\n\t\tfor ( var u in src ) {\n\n\t\t\tdst[ u ] = {};\n\n\t\t\tfor ( var p in src[ u ] ) {\n\n\t\t\t\tvar property = src[ u ][ p ];\n\n\t\t\t\tif ( property && ( property.isColor ||\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction mergeUniforms( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t}\n\n\t// Legacy\n\n\tvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = {};\n\n\t\tfor ( var name in this.uniforms ) {\n\n\t\t\tvar uniform = this.uniforms[ name ];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) { data.defines = this.defines; }\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tvar extensions = {};\n\n\t\tfor ( var key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) { extensions[ key ] = true; }\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) { data.extensions = extensions; }\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   const w = 1920;\n\t\t *   const h = 1080;\n\t\t *   const fullWidth = w * 3;\n\t\t *   const fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) { left += near * skew / this.getFilmWidth(); }\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar fov = 90, aspect = 1;\n\n\tfunction CubeCamera( near, far, renderTarget ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) { this.updateMatrixWorld(); }\n\n\t\t\tvar currentXrEnabled = renderer.xr.enabled;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.xr.enabled = false;\n\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\t\trenderer.render( scene, cameraPX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\t\trenderer.render( scene, cameraNX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\t\trenderer.render( scene, cameraPY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\t\trenderer.render( scene, cameraNY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\t\trenderer.render( scene, cameraPZ );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\t\trenderer.render( scene, cameraNZ );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction WebGLCubeRenderTarget( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tWebGLRenderTarget.call( this, size, size, options );\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tWebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = texture.format;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tvar scene = new Scene();\n\n\t\tvar shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"#include <common>\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\t\"\tvec2 sampleUV = equirectUv( direction );\",\n\n\t\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\t\t};\n\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\t\tscene.add( mesh );\n\n\t\tvar camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, scene );\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _sphere$1 = new Sphere();\n\tvar _vector$5 = new Vector3();\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromProjectionMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSprite: function ( sprite ) {\n\n\t\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tuv2Transform: { value: new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 },\n\t\t\tmaxMipLevel: { value: 0 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tlightProbe: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {}\n\t\t\t} },\n\n\t\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {}\n\t\t\t} },\n\n\t\t\tspotLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {}\n\t\t\t} },\n\n\t\t\tpointLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAnimation() {\n\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\t\tvar requestId = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) { return; }\n\t\t\t\tif ( animationLoop === null ) { return; }\n\n\t\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.usage;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = 5126;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = 5126;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = 5122;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = 5125;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = 5124;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = 5120;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = 5121;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var iy$1 = 0; iy$1 < gridY; iy$1 ++ ) {\n\n\t\t\tfor ( var ix$1 = 0; ix$1 < gridX; ix$1 ++ ) {\n\n\t\t\t\tvar a = ix$1 + gridX1 * iy$1;\n\t\t\t\tvar b = ix$1 + gridX1 * ( iy$1 + 1 );\n\t\t\t\tvar c = ( ix$1 + 1 ) + gridX1 * ( iy$1 + 1 );\n\t\t\t\tvar d = ( ix$1 + 1 ) + gridX1 * iy$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_maxMipLevel 8.0\\n#define cubeUV_minMipLevel 4.0\\n#define cubeUV_maxTileSize 256.0\\n#define cubeUV_minTileSize 16.0\\nfloat getFace(vec3 direction) {\\n    vec3 absDirection = abs(direction);\\n    float face = -1.0;\\n    if (absDirection.x > absDirection.z) {\\n      if (absDirection.x > absDirection.y)\\n        face = direction.x > 0.0 ? 0.0 : 3.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    } else {\\n      if (absDirection.z > absDirection.y)\\n        face = direction.z > 0.0 ? 2.0 : 5.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    }\\n    return face;\\n}\\nvec2 getUV(vec3 direction, float face) {\\n    vec2 uv;\\n    if (face == 0.0) {\\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\\n    return 0.5 * (uv + 1.0);\\n}\\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\\n  float face = getFace(direction);\\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\\n  mipInt = max(mipInt, cubeUV_minMipLevel);\\n  float faceSize = exp2(mipInt);\\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\\n  vec2 f = fract(uv);\\n  uv += 0.5 - f;\\n  if (face > 2.0) {\\n    uv.y += faceSize;\\n    face -= 3.0;\\n  }\\n  uv.x += face * faceSize;\\n  if(mipInt < cubeUV_maxMipLevel){\\n    uv.y += 2.0 * cubeUV_maxTileSize;\\n  }\\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\\n  uv *= texelSize;\\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x += texelSize;\\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.y += texelSize;\\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x -= texelSize;\\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  vec3 tm = mix(tl, tr, f.x);\\n  vec3 bm = mix(bl, br, f.x);\\n  return mix(tm, bm, f.y);\\n}\\n#define r0 1.0\\n#define v0 0.339\\n#define m0 -2.0\\n#define r1 0.8\\n#define v1 0.276\\n#define m1 -1.0\\n#define r4 0.4\\n#define v4 0.046\\n#define m4 2.0\\n#define r5 0.305\\n#define v5 0.016\\n#define m5 3.0\\n#define r6 0.21\\n#define v6 0.0038\\n#define m6 4.0\\nfloat roughnessToMip(float roughness) {\\n  float mip = 0.0;\\n  if (roughness >= r1) {\\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\\n  } else if (roughness >= r4) {\\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\\n  } else if (roughness >= r5) {\\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\\n  } else if (roughness >= r6) {\\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\\n  } else {\\n    mip = -2.0 * log2(1.16 * roughness);  }\\n  return mip;\\n}\\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\\n  float mipF = fract(mip);\\n  float mipInt = floor(mip);\\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\\n  if (mipF == 0.0) {\\n    return vec4(color0, 1.0);\\n  } else {\\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\\n    return vec4(mix(color0, color1, mipF), 1.0);\\n  }\\n}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec2 sampleUV = equirectUv( reflectVec );\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV = equirectUv( reflectVec );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3\\tdiffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 1.0 },\n\t\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\ttoon: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\t\tt2D: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t} ] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearcoat: { value: 0 },\n\t\t\t\tclearcoatMap: { value: null },\n\t\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t\tclearcoatNormalMap: { value: null },\n\t\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\t\ttransparency: { value: 0 },\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\n\t\tvar currentBackground = null;\n\t\tvar currentBackgroundVersion = 0;\n\t\tvar currentTonemapping = null;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.isScene === true ? scene.background : null;\n\n\t\t\t// Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\t\t\tvar xr = renderer.xr;\n\t\t\tvar session = xr.getSession && xr.getSession();\n\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\t\tbackground = null;\n\n\t\t\t}\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = background.isWebGLCubeRenderTarget ? background.texture : background;\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = texture;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== texture.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = texture.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tbackground.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Takahiro / https://github.com/takahirox\n\t */\n\n\tfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\t\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\n\t\tvar extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\t\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\t\tvar bindingStates = {};\n\n\t\tvar defaultState = createBindingState( null );\n\t\tvar currentState = defaultState;\n\n\t\tfunction setup( object, material, program, geometry, index ) {\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( vaoAvailable ) {\n\n\t\t\t\tvar state = getBindingState( geometry, program, material );\n\n\t\t\t\tif ( currentState !== state ) {\n\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\t\tif ( updateBuffers ) { saveCache( geometry ); }\n\n\t\t\t} else {\n\n\t\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\t\tupdateBuffers = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, 34963 );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.createVertexArray(); }\n\n\t\t\treturn extension.createVertexArrayOES();\n\n\t\t}\n\n\t\tfunction bindVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.bindVertexArray( vao ); }\n\n\t\t\treturn extension.bindVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction deleteVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.deleteVertexArray( vao ); }\n\n\t\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction getBindingState( geometry, program, material ) {\n\n\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\t\tif ( programMap === undefined ) {\n\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t\t}\n\n\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\tif ( stateMap === undefined ) {\n\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t\t}\n\n\t\t\tvar state = stateMap[ wireframe ];\n\n\t\t\tif ( state === undefined ) {\n\n\t\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\t\tstateMap[ wireframe ] = state;\n\n\t\t\t}\n\n\t\t\treturn state;\n\n\t\t}\n\n\t\tfunction createBindingState( vao ) {\n\n\t\t\tvar newAttributes = [];\n\t\t\tvar enabledAttributes = [];\n\t\t\tvar attributeDivisors = [];\n\n\t\t\tfor ( var i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\t\t\t\tenabledAttributes[ i ] = 0;\n\t\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction needsUpdate( geometry ) {\n\n\t\t\tvar cachedAttributes = currentState.attributes;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) { return true; }\n\n\t\t\tfor ( var key in geometryAttributes ) {\n\n\t\t\t\tvar cachedAttribute = cachedAttributes[ key ];\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) { return true; }\n\n\t\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) { return true; }\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction saveCache( geometry ) {\n\n\t\t\tvar cache = {};\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ key ] = data;\n\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\n\t\t\tfor ( var i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\t\tvar attributeDivisors = currentState.attributeDivisors;\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor ( var i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\t\tgl.vertexAttribIPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t} else {\n\n\t\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) { return; }\n\n\t\t\t}\n\n\t\t\tinitAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\t\tvar attribute$1 = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute$1 === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer$1 = attribute$1.buffer;\n\t\t\t\t\t\tvar type$1 = attribute$1.type;\n\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer$1 );\n\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type$1, false, 64, 0 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type$1, false, 64, 16 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type$1, false, 64, 32 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type$1, false, 64, 48 );\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\treset();\n\n\t\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\t\tif ( bindingStates[ geometry.id ] === undefined ) { return; }\n\n\t\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometry.id ];\n\n\t\t}\n\n\t\tfunction releaseStatesOfProgram( program ) {\n\n\t\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\t\tif ( programMap[ program.id ] === undefined ) { continue; }\n\n\t\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ program.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\tresetDefaultState();\n\n\t\t\tif ( currentState === defaultState ) { return; }\n\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\t// for backward-compatilibity\n\n\t\tfunction resetDefaultState() {\n\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) { return maxAnisotropy; }\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\t/* eslint-disable no-undef */\n\t\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t\t/* eslint-enable no-undef */\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tvar maxTextures = gl.getParameter( 34930 );\n\t\tvar maxVertexTextures = gl.getParameter( 35660 );\n\t\tvar maxTextureSize = gl.getParameter( 3379 );\n\t\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\t\tvar maxAttributes = gl.getParameter( 34921 );\n\t\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\t\tvar maxVaryings = gl.getParameter( 36348 );\n\t\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\t\tmaxSamples: maxSamples\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this;\n\n\t\tvar globalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false;\n\n\t\tvar plane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\t\tvar dstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\t\tvar geometries = new WeakMap();\n\t\tvar wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tgeometries.delete( geometry );\n\n\t\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry ) { return buffergeometry; }\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries.set( geometry, buffergeometry );\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name$1 ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateWireframeAttribute( geometry ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryPosition = geometry.attributes.position;\n\t\t\tvar version = 0;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array$1 = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = ( array$1.length / 3 ) - 1; i$1 < l$1; i$1 += 3 ) {\n\n\t\t\t\t\tvar a$1 = i$1 + 0;\n\t\t\t\t\tvar b$1 = i$1 + 1;\n\t\t\t\t\tvar c$1 = i$1 + 2;\n\n\t\t\t\t\tindices.push( a$1, b$1, b$1, c$1, c$1, a$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t\tattribute.version = version;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t\t//\n\n\t\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( previousAttribute ) { attributes.remove( previousAttribute ); }\n\n\t\t\t//\n\n\t\t\twireframeAttributes.set( geometry, attribute );\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( currentAttribute ) {\n\n\t\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get( geometry );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\tinstanceCount = instanceCount || 1;\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 4:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction numericalSort( a, b ) {\n\n\t\treturn a[ 0 ] - b[ 0 ];\n\n\t}\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar workInfluences = [];\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t\t}\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tvar length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i$1 = 0; i$1 < length; i$1 ++ ) {\n\n\t\t\t\tvar influence = influences[ i$1 ];\n\n\t\t\t\tinfluence[ 0 ] = i$1;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i$1 ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( var i$2 = 0; i$2 < 8; i$2 ++ ) {\n\n\t\t\t\tif ( i$2 < length && influences[ i$2 ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i$2 ][ 0 ] = influences[ i$2 ][ 0 ];\n\t\t\t\t\tworkInfluences[ i$2 ][ 1 ] = influences[ i$2 ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i$2 ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i$2 ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\tvar morphInfluencesSum = 0;\n\n\t\t\tfor ( var i$3 = 0; i$3 < 8; i$3 ++ ) {\n\n\t\t\t\tvar influence$1 = workInfluences[ i$3 ];\n\t\t\t\tvar index = influence$1[ 0 ];\n\t\t\t\tvar value = influence$1[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i$3 ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i$3, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i$3 ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i$3, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i$3 ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i$3 ) !== undefined ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i$3 ) !== undefined ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i$3 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\t\tvar updateMap = new WeakMap();\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateMap = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction DataTexture2DArray( data, width, height, depth ) {\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture2DArray.prototype = Object.create( Texture.prototype );\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\t/**\n\t * @author Artur Trzesiok\n\t */\n\n\tfunction DataTexture3D( data, width, height, depth ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\n\t}\n\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture2dArray = new DataTexture2DArray();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\tvar mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) { return array; }\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) { return false; }\n\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) { return false; }\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( textures, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValueV1f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValueM2( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM3( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM4( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT2DArray1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValueV1i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\tfunction setValueV2i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV3i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV4i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// uint\n\n\tfunction setValueV1ui( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1ui( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\tfunction setValueV1fArray( gl, v ) {\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\tfunction setValueV1iArray( gl, v ) {\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV2iArray( gl, v ) {\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3iArray( gl, v ) {\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4iArray( gl, v ) {\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t}\n\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 2 );\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV3fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 3 );\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV4fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM3Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 9 );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM4Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 16 );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\t\tthis.cache = new Float32Array( data.length );\n\n\t\t}\n\n\t\tcopyArray( cache, data );\n\n\t};\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\t\tvar id = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) { id = id | 0; } // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map;\n\t\t\t\tvar next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) { u.setValue( gl, value, textures ); }\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) { this.setValue( gl, name, v ); }\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) { r.push( u ); }\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE', '( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\n\t\t}\n\n\t}\n\n\tfunction getShaderErrors( gl, shader, type ) {\n\n\t\tvar status = gl.getShaderParameter( shader, 35713 );\n\t\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\t\tif ( status && log === '' ) { return ''; }\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tvar source = gl.getShaderSource( shader );\n\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\t\ttoneMappingName = 'Linear';\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( parameters ) {\n\n\t\tvar chunks = [\n\t\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) { continue; }\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35721 );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\t// Resolve Includes\n\n\tvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes( string ) {\n\n\t\treturn string.replace( includePattern, includeReplacer );\n\n\t}\n\n\tfunction includeReplacer( match, include ) {\n\n\t\tvar string = ShaderChunk[ include ];\n\n\t\tif ( string === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn resolveIncludes( string );\n\n\t}\n\n\t// Unroll Loops\n\n\tvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tvar unrollLoopPattern = /#pragma unroll_loop_start[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}[\\s]+?#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops( string ) {\n\n\t\treturn string\n\t\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n\t}\n\n\tfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\t\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\t\treturn loopReplacer( match, start, end, snippet );\n\n\t}\n\n\tfunction loopReplacer( match, start, end, snippet ) {\n\n\t\tvar string = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tstring += snippet\n\t\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t\t}\n\n\t\treturn string;\n\n\t}\n\n\t//\n\n\tfunction generatePrecision( parameters ) {\n\n\t\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\t\tif ( parameters.precision === \"highp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t\t}\n\n\t\treturn precisionstring;\n\n\t}\n\n\tfunction generateShadowMapTypeDefine( parameters ) {\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapTypeDefine( parameters ) {\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapModeDefine( parameters ) {\n\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapModeDefine;\n\n\t}\n\n\tfunction generateEnvMapBlendingDefine( parameters ) {\n\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\n\t}\n\n\tfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t\tvar gl = renderer.getContext();\n\n\t\tvar defines = parameters.defines;\n\n\t\tvar vertexShader = parameters.vertexShader;\n\t\tvar fragmentShader = parameters.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\t\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\t\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\t\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( parameters.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = resolveIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = resolveIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {\n\n\t\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\t\tif ( parameters.isShaderMaterial &&\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t\t}\n\n\t\t\t// GLSL 3.0 conversion\n\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t//\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount ++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities, bindingStates ) {\n\n\t\tvar programs = [];\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\t\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tvar vertexTextures = capabilities.vertexTextures;\n\n\t\tvar precision = capabilities.precision;\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\",\n\t\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatMap\", \"clearcoatRoughnessMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\t\"sheen\"\n\t\t];\n\n\t\tfunction getShaderObject( material, shaderID ) {\n\n\t\t\tvar shaderobject;\n\n\t\t\tif ( shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ shaderID ];\n\n\t\t\t\tshaderobject = {\n\t\t\t\t\tname: material.name || material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tshaderobject = {\n\t\t\t\t\tname: material.name || material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn shaderobject;\n\n\t\t}\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tfunction getParameters( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\t\tvar envMap = material.envMap || environment;\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar shaderobject = getShaderObject( material, shaderID );\n\t\t\tmaterial.onBeforeCompile( shaderobject, renderer );\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tisWebGL2: isWebGL2,\n\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: shaderobject.name,\n\n\t\t\t\tuniforms: shaderobject.uniforms,\n\t\t\t\tvertexShader: shaderobject.vertexShader,\n\t\t\t\tfragmentShader: shaderobject.fragmentShader,\n\t\t\t\tdefines: material.defines,\n\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial,\n\t\t\t\tisShaderMaterial: material.isShaderMaterial,\n\n\t\t\t\tprecision: precision,\n\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\t\tmatcap: !! material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\t\tenvMap: !! envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tsheen: !! material.sheen,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,\n\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t}\n\n\t\tfunction getProgramCacheKey( parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( parameters.fragmentShader );\n\t\t\t\tarray.push( parameters.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in parameters.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parameters.isRawShaderMaterial === undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t\t}\n\n\t\t\t\tarray.push( renderer.outputEncoding );\n\t\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t\t}\n\n\t\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\t\treturn array.join();\n\n\t\t}\n\n\t\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction releaseProgram( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tvar map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tvar defaultProgram = { id: - 1 };\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\trenderItemsIndex ++;\n\n\t\t\treturn renderItem;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t}\n\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t\t}\n\n\t\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\t\tif ( opaque.length > 1 ) { opaque.sort( customOpaqueSort || painterSortStable ); }\n\t\t\tif ( transparent.length > 1 ) { transparent.sort( customTransparentSort || reversePainterSortStable ); }\n\n\t\t}\n\n\t\tfunction finish() {\n\n\t\t\t// Clear references from inactive renderItems in the list\n\n\t\t\tfor ( var i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\t\tvar renderItem = renderItems[ i ];\n\n\t\t\t\tif ( renderItem.id === null ) { break; }\n\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\tlists.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar cameras = lists.get( scene );\n\t\t\tvar list;\n\n\t\t\tif ( cameras === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set( scene, new WeakMap() );\n\t\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tlist = cameras.get( camera );\n\t\t\t\tif ( list === undefined ) {\n\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tcameras.set( camera, list );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction ShadowUniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n\n\tvar nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\t\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar shadowCache = ShadowUniformsCache();\n\n\t\tvar state = {\n\n\t\t\tversion: 0,\n\n\t\t\thash: {\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\n\t\t\t\tnumDirectionalShadows: - 1,\n\t\t\t\tnumPointShadows: - 1,\n\t\t\t\tnumSpotShadows: - 1\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\n\t\t};\n\n\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe.push( new Vector3() ); }\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe[ i ].set( 0, 0, 0 ); }\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar numDirectionalShadows = 0;\n\t\t\tvar numPointShadows = 0;\n\t\t\tvar numSpotShadows = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t\tfor ( var i$1 = 0, l = lights.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tvar light = lights[ i$1 ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms$1 = cache.get( light );\n\n\t\t\t\t\tuniforms$1.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$1.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms$1.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms$1.distance = distance;\n\n\t\t\t\t\tuniforms$1.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms$1.direction.sub( vector3 );\n\t\t\t\t\tuniforms$1.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms$1.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms$1.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms$1.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow$1 = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms$1 = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms$1.shadowBias = shadow$1.bias;\n\t\t\t\t\t\tshadowUniforms$1.shadowNormalBias = shadow$1.normalBias;\n\t\t\t\t\t\tshadowUniforms$1.shadowRadius = shadow$1.radius;\n\t\t\t\t\t\tshadowUniforms$1.shadowMapSize = shadow$1.mapSize;\n\n\t\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms$1;\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms$1;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms$2 = cache.get( light );\n\n\t\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\t\tuniforms$2.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms$2.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$2.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms$2.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms$2.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms$2.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms$2.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms$2;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms$3 = cache.get( light );\n\n\t\t\t\t\tuniforms$3.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$3.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms$3.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms$3.distance = light.distance;\n\t\t\t\t\tuniforms$3.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow$2 = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms$2 = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms$2.shadowBias = shadow$2.bias;\n\t\t\t\t\t\tshadowUniforms$2.shadowNormalBias = shadow$2.normalBias;\n\t\t\t\t\t\tshadowUniforms$2.shadowRadius = shadow$2.radius;\n\t\t\t\t\t\tshadowUniforms$2.shadowMapSize = shadow$2.mapSize;\n\t\t\t\t\t\tshadowUniforms$2.shadowCameraNear = shadow$2.camera.near;\n\t\t\t\t\t\tshadowUniforms$2.shadowCameraFar = shadow$2.camera.far;\n\n\t\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms$2;\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[ pointLength ] = uniforms$3;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms$4 = cache.get( light );\n\n\t\t\t\t\tuniforms$4.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$4.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms$4.direction.normalize();\n\n\t\t\t\t\tuniforms$4.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms$4.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms$4;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tvar hash = state.hash;\n\n\t\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\t\thash.pointLength !== pointLength ||\n\t\t\t\thash.spotLength !== spotLength ||\n\t\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\t\thash.hemiLength !== hemiLength ||\n\t\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\t\tstate.version = nextVersion ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLRenderState() {\n\n\t\tvar lights = new WebGLLights();\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( camera ) {\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates() {\n\n\t\tvar renderStates = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\trenderStates.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar renderState;\n\n\t\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum();\n\n\t\tvar _shadowMapSize = new Vector2(),\n\t\t\t_viewportSize = new Vector2(),\n\n\t\t\t_viewport = new Vector4(),\n\n\t\t\t_depthMaterials = [],\n\t\t\t_distanceMaterials = [],\n\n\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\t\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: { value: null },\n\t\t\t\tresolution: { value: new Vector2() },\n\t\t\t\tradius: { value: 4.0 }\n\t\t\t},\n\n\t\t\tvertexShader: vsm_vert,\n\n\t\t\tfragmentShader: vsm_frag\n\n\t\t} );\n\n\t\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\t\tvar fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute(\n\t\t\t\"position\",\n\t\t\tnew BufferAttribute(\n\t\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) { return; }\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) { return; }\n\n\t\t\tif ( lights.length === 0 ) { return; }\n\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.setBlending( NoBlending );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) { continue; }\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars$1 = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars$1 );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t\t_viewport.set(\n\t\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t\t);\n\n\t\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t\t}\n\n\t\t\t\t// do blur pass for VSM\n\n\t\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t\t};\n\n\t\tfunction VSMPass( shadow, camera ) {\n\n\t\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t\t// vertical pass\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t\t// horizonal pass\n\n\t\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t\t}\n\n\t\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _depthMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_depthMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _distanceMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\t\tvar result = null;\n\n\t\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( light.isPointLight === true ) {\n\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( customMaterial === undefined ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = false;\n\n\t\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif ( type === VSMShadowMap ) {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t\t} else {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial$1 = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial$1, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar enabledCapabilities = {};\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( 35661 );\n\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter( 7938 );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, 10241, 9728 );\n\t\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\t\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( 2929 );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( 2884 );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvar equationToGL = {};\n\t\tequationToGL[ AddEquation ] = 32774;\n\t\tequationToGL[ SubtractEquation ] = 32778;\n\t\tequationToGL[ ReverseSubtractEquation ] = 32779;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\tequationToGL[ MinEquation ] = 32775;\n\t\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar factorToGL = {};\n\t\tfactorToGL[ ZeroFactor ] = 0;\n\t\tfactorToGL[ OneFactor ] = 1;\n\t\tfactorToGL[ SrcColorFactor ] = 768;\n\t\tfactorToGL[ SrcAlphaFactor ] = 770;\n\t\tfactorToGL[ SrcAlphaSaturateFactor ] = 776;\n\t\tfactorToGL[ DstColorFactor ] = 774;\n\t\tfactorToGL[ DstAlphaFactor ] = 772;\n\t\tfactorToGL[ OneMinusSrcColorFactor ] = 769;\n\t\tfactorToGL[ OneMinusSrcAlphaFactor ] = 771;\n\t\tfactorToGL[ OneMinusDstColorFactor ] = 775;\n\t\tfactorToGL[ OneMinusDstAlphaFactor ] = 773;\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\t\tdisable( 3042 );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\t\tenable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( 2884 )\n\t\t\t\t: enable( 2884 );\n\n\t\t\tvar flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) { flipSided = ! flipSided; }\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tvar stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest( stencilWrite );\n\t\t\tif ( stencilWrite ) {\n\n\t\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t\t}\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( 2884 );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 2884 );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) { gl.lineWidth( width ); }\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( 32823 );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 32823 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( 3089 );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 3089 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) { webglSlot = 33984 + maxTextures - 1; }\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unbindTexture() {\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar maxTextures = capabilities.maxTextures;\n\t\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\t\tvar maxTextureSize = capabilities.maxTextureSize;\n\t\tvar maxSamples = capabilities.maxSamples;\n\n\t\tvar _videoTextures = new WeakMap();\n\t\tvar _canvas;\n\n\t\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\t\tvar useOffscreenCanvas = false;\n\n\t\ttry {\n\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t\t} catch ( err ) {\n\n\t\t\t// Ignore any errors\n\n\t\t}\n\n\t\tfunction createCanvas( width, height ) {\n\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\t\treturn useOffscreenCanvas ?\n\t\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t}\n\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\t\tvar scale = 1;\n\n\t\t\t// handle case if texture exceeds max size\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t}\n\n\t\t\t// only perform resize if necessary\n\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t\t// only perform resize for certain image types\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\t\tvar floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\t\tif ( _canvas === undefined ) { _canvas = createCanvas( width, height ); }\n\n\t\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\t\treturn canvas;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( isWebGL2 ) { return false; }\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\t}\n\n\t\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\t\tif ( isWebGL2 === false ) { return glFormat; }\n\n\t\t\tif ( internalFormatName !== null ) {\n\n\t\t\t\tif ( _gl[ internalFormatName ] !== undefined ) { return _gl[ internalFormatName ]; }\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t\t}\n\n\t\t\tvar internalFormat = glFormat;\n\n\t\t\tif ( glFormat === 6403 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 33326; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 33325; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 33321; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6407 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34837; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34843; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32849; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6408 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34836; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34842; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32856; }\n\n\t\t\t}\n\n\t\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\t\treturn 9728;\n\n\t\t\t}\n\n\t\t\treturn 9729;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\t_videoTextures.delete( texture );\n\n\t\t\t}\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) { return; }\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) { return; }\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] ); }\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) { _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer ); }\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tvar textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\n\t\t\ttextureUnits = 0;\n\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\n\t\t\tvar textureUnit = textureUnits;\n\n\t\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) { updateVideoTexture( texture ); }\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture2DArray( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tif ( texture.image.length !== 6 ) { return; }\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tvar mipmaps;\n\n\t\t\t\tif ( isCompressed ) {\n\n\t\t\t\t\tfor ( var i$1 = 0; i$1 < 6; i$1 ++ ) {\n\n\t\t\t\t\t\tmipmaps = cubeImage[ i$1 ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i$1, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$1, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < 6; i$2 ++ ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, 0, glInternalFormat, cubeImage[ i$2 ].width, cubeImage[ i$2 ].height, 0, glFormat, glType, cubeImage[ i$2 ].data );\n\n\t\t\t\t\t\t\tfor ( var j$1 = 0; j$1 < mipmaps.length; j$1 ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap$1 = mipmaps[ j$1 ];\n\t\t\t\t\t\t\t\tvar mipmapImage = mipmap$1.image[ i$2 ].image;\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, j$1 + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, 0, glInternalFormat, glFormat, glType, cubeImage[ i$2 ] );\n\n\t\t\t\t\t\t\tfor ( var j$2 = 0; j$2 < mipmaps.length; j$2 ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap$2 = mipmaps[ j$2 ];\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, j$2 + 1, glInternalFormat, glFormat, glType, mipmap$2.image[ i$2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tvar wrappingToGL = {};\n\t\twrappingToGL[ RepeatWrapping ] = 10497;\n\t\twrappingToGL[ ClampToEdgeWrapping ] = 33071;\n\t\twrappingToGL[ MirroredRepeatWrapping ] = 33648;\n\n\t\tvar filterToGL = {};\n\t\tfilterToGL[ NearestFilter ] = 9728;\n\t\tfilterToGL[ NearestMipmapNearestFilter ] = 9984;\n\t\tfilterToGL[ NearestMipmapLinearFilter ] = 9986;\n\t\tfilterToGL[ LinearFilter ] = 9729;\n\t\tfilterToGL[ LinearMipmapNearestFilter ] = 9985;\n\t\tfilterToGL[ LinearMipmapLinearFilter ] = 9987;\n\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\t\tif ( supportsMips ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) { return; }\n\t\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) { return; }\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initTexture( textureProperties, texture ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tvar textureType = 3553;\n\n\t\t\tif ( texture.isDataTexture2DArray ) { textureType = 35866; }\n\t\t\tif ( texture.isDataTexture3D ) { textureType = 32879; }\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format );\n\n\t\t\tvar glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tvar mipmap;\n\t\t\tvar mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = mipmaps.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i$1 ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i$1, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, i$1, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = mipmaps.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i$2 ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i$2, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\tvar glInternalFormat = 33189;\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples$1 = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples$1, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\tvar glInternalFormat$1 = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples$2 = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples$2, glInternalFormat$1, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat$1, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\t\tif ( isCube ) { throw new Error( 'Depth Texture with cube render targets is not supported' ); }\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) { throw new Error( 'target.depthTexture not supported in Cube render targets' ); }\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t\t}\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < 6; i$1 ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i$1 ], renderTarget, 36064, 34069 + i$1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 34067, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 3553, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar mask = 16384;\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) { mask |= 256; }\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) { mask |= 1024; }\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t\t_videoTextures.set( texture, frame );\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// backwards compatibility\n\n\t\tvar warnedTexture2D = false;\n\t\tvar warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTexture2D = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( texture, slot );\n\n\t\t}\n\n\t\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTextureCube = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\tsetTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === UnsignedByteType ) { return 5121; }\n\t\t\tif ( p === UnsignedShort4444Type ) { return 32819; }\n\t\t\tif ( p === UnsignedShort5551Type ) { return 32820; }\n\t\t\tif ( p === UnsignedShort565Type ) { return 33635; }\n\n\t\t\tif ( p === ByteType ) { return 5120; }\n\t\t\tif ( p === ShortType ) { return 5122; }\n\t\t\tif ( p === UnsignedShortType ) { return 5123; }\n\t\t\tif ( p === IntType ) { return 5124; }\n\t\t\tif ( p === UnsignedIntType ) { return 5125; }\n\t\t\tif ( p === FloatType ) { return 5126; }\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 5131; }\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) { return 6406; }\n\t\t\tif ( p === RGBFormat ) { return 6407; }\n\t\t\tif ( p === RGBAFormat ) { return 6408; }\n\t\t\tif ( p === LuminanceFormat ) { return 6409; }\n\t\t\tif ( p === LuminanceAlphaFormat ) { return 6410; }\n\t\t\tif ( p === DepthFormat ) { return 6402; }\n\t\t\tif ( p === DepthStencilFormat ) { return 34041; }\n\t\t\tif ( p === RedFormat ) { return 6403; }\n\n\t\t\t// WebGL2 formats.\n\n\t\t\tif ( p === RedIntegerFormat ) { return 36244; }\n\t\t\tif ( p === RGFormat ) { return 33319; }\n\t\t\tif ( p === RGIntegerFormat ) { return 33320; }\n\t\t\tif ( p === RGBIntegerFormat ) { return 36248; }\n\t\t\tif ( p === RGBAIntegerFormat ) { return 36249; }\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGB_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_ETC2_Format ) { return extension.COMPRESSED_RGB8_ETC2; }\n\t\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) { return extension.COMPRESSED_RGBA8_ETC2_EAC; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 34042; }\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group,\n\n\t\tisGroup: true\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebXRController() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\n\t}\n\n\tObject.assign( WebXRController.prototype, {\n\n\t\tconstructor: WebXRController,\n\n\t\tgetTargetRaySpace: function () {\n\n\t\t\tif ( this._targetRay === null ) {\n\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\n\t\t},\n\n\t\tgetGripSpace: function () {\n\n\t\t\tif ( this._grip === null ) {\n\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this._grip;\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function ( inputSource ) {\n\n\t\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\t\tvar inputPose = null;\n\t\t\tvar gripPose = null;\n\n\t\t\tvar targetRay = this._targetRay;\n\t\t\tvar grip = this._grip;\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t\t}\n\n\t\t\tif ( grip !== null ) {\n\n\t\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebXRManager( renderer, gl ) {\n\n\t\tvar scope = this;\n\n\t\tvar session = null;\n\n\t\tvar framebufferScaleFactor = 1.0;\n\n\t\tvar referenceSpace = null;\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tvar pose = null;\n\n\t\tvar controllers = [];\n\t\tvar inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tvar cameras = [ cameraL, cameraR ];\n\n\t\tvar cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tvar _currentDepthNear = null;\n\t\tvar _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tvar controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tvar controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tvar controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t//\n\n\t\t\trenderer.setFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tfunction onRequestReferenceSpace( value ) {\n\n\t\t\treferenceSpace = value;\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.isPresenting = true;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t\tvar attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tgl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tvar layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tvar baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t\t//\n\n\t\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction updateInputSources( event ) {\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( var i$1 = 0; i$1 < event.removed.length; i$1 ++ ) {\n\n\t\t\t\tvar inputSource = event.removed[ i$1 ];\n\t\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( var i$2 = 0; i$2 < event.added.length; i$2 ++ ) {\n\n\t\t\t\tvar inputSource$1 = event.added[ i$2 ];\n\t\t\t\tvar controller$1 = inputSourcesMap.get( inputSource$1 );\n\n\t\t\t\tif ( controller$1 ) {\n\n\t\t\t\t\tcontroller$1.dispatchEvent( { type: 'connected', data: inputSource$1 } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar cameraLPos = new Vector3();\n\t\tvar cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * @author jsantell / https://www.jsantell.com/\n\t\t *\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tvar left = near * leftFov;\n\t\t\tvar right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tvar near2 = near + zOffset;\n\t\t\tvar far2 = far + zOffset;\n\t\t\tvar left2 = left - xOffset;\n\t\t\tvar right2 = right + ( ipd - xOffset );\n\t\t\tvar top2 = topFov * far / far2 * near2;\n\t\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i$1 = 0, l = children.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tchildren[ i$1 ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tvar views = pose.views;\n\t\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tvar cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tvar view = views[ i ];\n\t\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tvar camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\tfor ( var i$1 = 0; i$1 < controllers.length; i$1 ++ ) {\n\n\t\t\t\tvar controller = controllers[ i$1 ];\n\t\t\t\tvar inputSource = inputSources[ i$1 ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time, frame ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n\tObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLMaterials( properties ) {\n\n\t\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshMaterialUniforms( uniforms, material, environment, pixelRatio, height ) {\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material, environment );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( uniforms, material, environment );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tuniforms.color.value.copy( material.color );\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsCommon( uniforms, material, environment ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tvar envMap = material.envMap || environment;\n\n\t\t\tif ( envMap ) {\n\n\t\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( envMap ).__maxMipLevel;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\t\t\tvar uv2ScaleMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t\t} else if ( material.lightMap ) {\n\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material, environment ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap || environment ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material, environment ) {\n\n\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif ( material.sheen ) { uniforms.sheen.value.copy( material.sheen ); }\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniforms.transparency.value = material.transparency;\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null;\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.outputEncoding = LinearEncoding;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this;\n\n\t\tvar _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tvar _framebuffer = null;\n\n\t\tvar _currentActiveCubeFace = 0;\n\t\tvar _currentActiveMipmapLevel = 0;\n\t\tvar _currentRenderTarget = null;\n\t\tvar _currentFramebuffer = null;\n\t\tvar _currentMaterialId = - 1;\n\n\t\tvar _currentCamera = null;\n\t\tvar _currentArrayCamera = null;\n\n\t\tvar _currentViewport = new Vector4();\n\t\tvar _currentScissor = new Vector4();\n\t\tvar _currentScissorTest = null;\n\n\t\t//\n\n\t\tvar _width = _canvas.width;\n\t\tvar _height = _canvas.height;\n\n\t\tvar _pixelRatio = 1;\n\t\tvar _opaqueSort = null;\n\t\tvar _transparentSort = null;\n\n\t\tvar _viewport = new Vector4( 0, 0, _width, _height );\n\t\tvar _scissor = new Vector4( 0, 0, _width, _height );\n\t\tvar _scissorTest = false;\n\n\t\t// frustum\n\n\t\tvar _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tvar _clipping = new WebGLClipping();\n\t\tvar _clippingEnabled = false;\n\t\tvar _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tvar _projScreenMatrix = new Matrix4();\n\n\t\tvar _vector3 = new Vector3();\n\n\t\tvar _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl = _context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( var i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tvar contextName = contextNames[ i ];\n\t\t\t\tvar context = _canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) { return context; }\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t};\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tvar contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, attributes, geometries, objects;\n\t\tvar programCache, materials, renderLists, renderStates;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tvar utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, bindingStates );\n\t\t\tmaterials = new WebGLMaterials( properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates();\n\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tvar xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.loseContext(); }\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.restoreContext(); }\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) { return; }\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\t\ttarget = new Vector4();\n\n\t\t\t}\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn background.getClearColor();\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) { bits |= 16384; }\n\t\t\tif ( depth === undefined || depth ) { bits |= 256; }\n\t\t\tif ( stencil === undefined || stencil ) { bits |= 1024; }\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\t\tbindingStates.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) { buffers.position = _gl.createBuffer(); }\n\t\t\tif ( object.hasNormals && ! buffers.normal ) { buffers.normal = _gl.createBuffer(); }\n\t\t\tif ( object.hasUvs && ! buffers.uv ) { buffers.uv = _gl.createBuffer(); }\n\t\t\tif ( object.hasColors && ! buffers.color ) { buffers.color = _gl.createBuffer(); }\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) { scene = _emptyScene; } // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tif ( index === null ) {\n\n\t\t\t\tif ( position === undefined || position.count === 0 ) { return; }\n\n\t\t\t} else if ( index.count === 0 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t}\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) { return; }\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) { lineWidth = 1; } // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( 0 );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tvar instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tvar compiled = new WeakMap();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tvar material2 = material[ i ];\n\n\t\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( xr.isPresenting ) { return; }\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof window !== 'undefined' ) { animation.setContext( window ); }\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tvar renderTarget, forceClear;\n\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t\t}\n\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\t\tforceClear = arguments[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) { return; }\n\n\t\t\t// reset caching for this frame\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) { scene.updateMatrixWorld(); }\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) { camera.updateMatrixWorld(); }\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tcamera = xr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) { scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget ); }\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled === true ) { _clipping.beginShadows(); }\n\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tif ( _clippingEnabled === true ) { _clipping.endShadows(); }\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) { this.info.reset(); }\n\n\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( opaqueObjects.length > 0 ) { renderObjects( opaqueObjects, scene, camera ); }\n\t\t\tif ( transparentObjects.length > 0 ) { renderObjects( transparentObjects, scene, camera ); }\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) { scene.onAfterRender( _this, scene, camera ); }\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\t// _gl.finish();\n\n\t\t\tcurrentRenderList = null;\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) { object.update( camera ); }\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry$1 = objects.update( object );\n\t\t\t\t\t\tvar material$1 = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material$1 ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry$1.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material$1[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry$1, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material$1.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry$1, material$1, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i$1 = 0, l$1 = children.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tprojectObject( children[ i$1 ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tvar overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tbindingStates.reset();\n\n\t\t\t\trenderObjectImmediate( object, program );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t}\n\n\t\tfunction initMaterial( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) { scene = _emptyScene; } // scene could be a Mesh, Line, Points, ...\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tvar lightsStateVersion = lights.state.version;\n\n\t\t\tvar parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\t\tvar programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\t\tprogramChange = false;\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < _this.maxMorphNormals; i$1 ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i$1 ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) { scene = _emptyScene; } // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tvar encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\n\t\t\tvar materialProperties = properties.get( material );\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, environment, _pixelRatio, _height );\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) { m_uniforms.ltc_1.value = UniformsLib.LTC_1; }\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) { m_uniforms.ltc_2.value = UniformsLib.LTC_2; }\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\t//\n\t\tthis.setFramebuffer = function ( value ) {\n\n\t\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) { _gl.bindFramebuffer( 36160, value ); }\n\n\t\t\t_framebuffer = value;\n\n\t\t};\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar _webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = _webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = _webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar levelScale = Math.pow( 2, - level );\n\t\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\t\tvar glFormat = utils.convert( texture.format );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) { _gl.generateMipmap( 3553 ); }\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGL1Renderer( parameters ) {\n\n\t\tWebGLRenderer.call( this, parameters );\n\n\t}\n\n\tWebGL1Renderer.prototype = Object.assign( Object.create( WebGLRenderer.prototype ), {\n\n\t\tconstructor: WebGL1Renderer,\n\n\t\tisWebGL1Renderer: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tObject.assign( FogExp2.prototype, {\n\n\t\tisFogExp2: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new FogExp2( this.color, this.density );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tObject.assign( Fog.prototype, {\n\n\t\tisFog: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new Fog( this.color, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t\t}\n\n\t\t\tvar array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\t\tvar ib = new InterleavedBuffer( array, this.stride );\n\t\t\tib.setUsage( this.usage );\n\n\t\t\treturn ib;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\t// generate UUID for array buffer if necessary\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tvar _vector$6 = new Vector3();\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$6.x = this.getX( i );\n\t\t\t\t_vector$6.y = this.getY( i );\n\t\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( var j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( var j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\t// save as true interlaved attribtue\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _geometry;\n\n\tvar _intersectPoint = new Vector3();\n\tvar _worldScale = new Vector3();\n\tvar _mvPosition = new Vector3();\n\n\tvar _alignedPosition = new Vector2();\n\tvar _rotatedPosition = new Vector2();\n\tvar _viewWorldMatrix = new Matrix4();\n\n\tvar _vA$1 = new Vector3();\n\tvar _vB$1 = new Vector3();\n\tvar _vC$1 = new Vector3();\n\n\tvar _uvA$1 = new Vector2();\n\tvar _uvB$1 = new Vector2();\n\tvar _uvC$1 = new Vector2();\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tvar float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t\t_uvA$1.set( 0, 0 );\n\t\t\t_uvB$1.set( 1, 0 );\n\t\t\t_uvC$1.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.center !== undefined ) { this.center.copy( source.center ); }\n\n\t\t\tthis.material = source.material;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t// to check if rotation is not zero\n\t\tif ( sin !== undefined ) {\n\n\t\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t\t} else {\n\n\t\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t\t}\n\n\n\t\tvertexPosition.copy( mvPosition );\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y;\n\n\t\t// transform to world space\n\t\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v1$4 = new Vector3();\n\tvar _v2$2 = new Vector3();\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tisLOD: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) { distance = 0; }\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tvar l;\n\n\t\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCurrentLevel: function () {\n\n\t\t\treturn this._currentLevel;\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn levels[ i - 1 ].object;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.autoUpdate === false ) { data.object.autoUpdate = false; }\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tMesh.prototype.copy.call( this, source );\n\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\t\tthis.skeleton = source.skeleton;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar vector = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\t\tvector.x = skinWeight.getX( i );\n\t\t\t\tvector.y = skinWeight.getY( i );\n\t\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tboneTransform: ( function () {\n\n\t\t\tvar basePosition = new Vector3();\n\n\t\t\tvar skinIndex = new Vector4();\n\t\t\tvar skinWeight = new Vector4();\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function ( index, target ) {\n\n\t\t\t\tvar skeleton = this.skeleton;\n\t\t\t\tvar geometry = this.geometry;\n\n\t\t\t\tskinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t\t\tskinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t\t\tbasePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\t\t\ttarget.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\tvar weight = skinWeight.getComponent( i );\n\n\t\t\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\t\t\tvar boneIndex = skinIndex.getComponent( i );\n\n\t\t\t\t\t\tmatrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\t\t\ttarget.addScaledVector( vector.copy( basePosition ).applyMatrix4( matrix ), weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t\t\t};\n\n\t\t}() )\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tvar _offsetMatrix = new Matrix4();\n\tvar _identityMatrix = new Matrix4();\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\tthis.frame = - 1;\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.bones.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar bone$1 = this.bones[ i$1 ];\n\n\t\t\t\tif ( bone$1 ) {\n\n\t\t\t\t\tif ( bone$1.parent && bone$1.parent.isBone ) {\n\n\t\t\t\t\t\tbone$1.matrix.getInverse( bone$1.parent.matrixWorld );\n\t\t\t\t\t\tbone$1.matrix.multiply( bone$1.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone$1.matrix.copy( bone$1.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone$1.matrix.decompose( bone$1.position, bone$1.quaternion, bone$1.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t},\n\n\t\tgetBoneByName: function ( name ) {\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tdispose: function ( ) {\n\n\t\t\tif ( this.boneTexture ) {\n\n\t\t\t\tthis.boneTexture.dispose();\n\n\t\t\t\tthis.boneTexture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _instanceLocalMatrix = new Matrix4();\n\tvar _instanceWorldMatrix = new Matrix4();\n\n\tvar _instanceIntersects = [];\n\n\tvar _mesh = new Mesh();\n\n\tfunction InstancedMesh( geometry, material, count ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: InstancedMesh,\n\n\t\tisInstancedMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tMesh.prototype.copy.call( this, source );\n\n\t\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\t\t\tthis.count = source.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar raycastTimes = this.count;\n\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\n\t\t\tif ( _mesh.material === undefined ) { return; }\n\n\t\t\tfor ( var instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t\t// calculate the world matrix for each instance\n\n\t\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t\t// the mesh represents this single instance\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t\t// process the result of raycast\n\n\t\t\t\tfor ( var i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar intersect = _instanceIntersects[ i ];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start = new Vector3();\n\tvar _end = new Vector3();\n\tvar _inverseMatrix$1 = new Matrix4();\n\tvar _ray$1 = new Ray();\n\tvar _sphere$2 = new Sphere();\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances$1 = geometry.lineDistances;\n\n\t\t\t\tlineDistances$1[ 0 ] = 0;\n\n\t\t\t\tfor ( var i$1 = 1, l$1 = vertices.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\tlineDistances$1[ i$1 ] = lineDistances$1[ i$1 - 1 ];\n\t\t\t\t\tlineDistances$1[ i$1 ] += vertices[ i$1 - 1 ].distanceTo( vertices[ i$1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Line.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t\t_sphere$2.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localThresholdSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$1 = 0, l$1 = positions.length / 3 - 1; i$1 < l$1; i$1 += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i$1 );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i$1 + 3 );\n\n\t\t\t\t\t\tvar distSq$1 = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq$1 > localThresholdSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance$1 = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance$1 < raycaster.near || distance$1 > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance$1,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i$1,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i$2 = 0; i$2 < nbVertices - 1; i$2 += step ) {\n\n\t\t\t\t\tvar distSq$2 = _ray$1.distanceSqToSegment( vertices[ i$2 ], vertices[ i$2 + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq$2 > localThresholdSq ) { continue; }\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance$2 = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance$2 < raycaster.near || distance$2 > raycaster.far ) { continue; }\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance$2,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i$2,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start$1 = new Vector3();\n\tvar _end$1 = new Vector3();\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances$1 = geometry.lineDistances;\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = vertices.length; i$1 < l$1; i$1 += 2 ) {\n\n\t\t\t\t\t_start$1.copy( vertices[ i$1 ] );\n\t\t\t\t\t_end$1.copy( vertices[ i$1 + 1 ] );\n\n\t\t\t\t\tlineDistances$1[ i$1 ] = ( i$1 === 0 ) ? 0 : lineDistances$1[ i$1 - 1 ];\n\t\t\t\t\tlineDistances$1[ i$1 + 1 ] = lineDistances$1[ i$1 ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _inverseMatrix$2 = new Matrix4();\n\tvar _ray$2 = new Ray();\n\tvar _sphere$3 = new Sphere();\n\tvar _position$1 = new Vector3();\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t\t_sphere$3.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$1 = 0, l = positions.length / 3; i$1 < l; i$1 ++ ) {\n\n\t\t\t\t\t\t_position$1.fromArray( positions, i$1 * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, i$1, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i$2 = 0, l$1 = vertices.length; i$2 < l$1; i$2 ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i$2 ], i$2, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\t\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\t\tconstructor: VideoTexture,\n\n\t\tisVideoTexture: true,\n\n\t\tupdate: function () {\n\n\t\t\tvar video = this.image;\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) { type = UnsignedShortType; }\n\t\tif ( type === undefined && format === DepthStencilFormat ) { type = UnsignedInt248Type; }\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar edge = [ 0, 0 ], edges = {};\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tvar edge1 = face[ keys[ j ] ];\n\t\t\t\t\tvar edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tvar key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( var key$1 in edges ) {\n\n\t\t\t\tvar e = edges[ key$1 ];\n\n\t\t\t\tvar vertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar vertex$1 = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar indices = geometry.index;\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i$1 = start, l$1 = ( start + count ); i$1 < l$1; i$1 += 3 ) {\n\n\t\t\t\t\t\tfor ( var j$1 = 0; j$1 < 3; j$1 ++ ) {\n\n\t\t\t\t\t\t\tvar edge1$1 = indices.getX( i$1 + j$1 );\n\t\t\t\t\t\t\tvar edge2$1 = indices.getX( i$1 + ( j$1 + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1$1, edge2$1 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1$1, edge2$1 );\n\n\t\t\t\t\t\t\tvar key$2 = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key$2 ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key$2 ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( var key$3 in edges ) {\n\n\t\t\t\t\tvar e$1 = edges[ key$3 ];\n\n\t\t\t\t\tvertex$1.fromBufferAttribute( position, e$1.index1 );\n\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\tvertex$1.fromBufferAttribute( position, e$1.index2 );\n\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar position$1 = geometry.attributes.position;\n\n\t\t\t\tfor ( var i$2 = 0, l$2 = ( position$1.count / 3 ); i$2 < l$2; i$2 ++ ) {\n\n\t\t\t\t\tfor ( var j$2 = 0; j$2 < 3; j$2 ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tvar index1 = 3 * i$2 + j$2;\n\t\t\t\t\t\tvertex$1.fromBufferAttribute( position$1, index1 );\n\t\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\t\tvar index2 = 3 * i$2 + ( ( j$2 + 1 ) % 3 );\n\t\t\t\t\t\tvertex$1.fromBufferAttribute( position$1, index2 );\n\t\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( var i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( var j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var i$1 = 0; i$1 < stacks; i$1 ++ ) {\n\n\t\t\tfor ( var j$1 = 0; j$1 < slices; j$1 ++ ) {\n\n\t\t\t\tvar a = i$1 * sliceCount + j$1;\n\t\t\t\tvar b = i$1 * sliceCount + j$1 + 1;\n\t\t\t\tvar c = ( i$1 + 1 ) * sliceCount + j$1 + 1;\n\t\t\t\tvar d = ( i$1 + 1 ) * sliceCount + j$1;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( var i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( var i$1 = 0; i$1 < cols; i$1 ++ ) {\n\n\t\t\t\tfor ( var j$1 = 0; j$1 < 2 * ( cols - i$1 ) - 1; j$1 ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j$1 / 2 );\n\n\t\t\t\t\tif ( j$1 % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) { uvBuffer[ i + 0 ] += 1; }\n\t\t\t\t\tif ( x1 < 0.2 ) { uvBuffer[ i + 2 ] += 1; }\n\t\t\t\t\tif ( x2 < 0.2 ) { uvBuffer[ i + 4 ] += 1; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) { console.warn( 'THREE.TubeGeometry: taper has been removed.' ); }\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar P = new Vector3();\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( var i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin = Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( var j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( var i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\tTubeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) { console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' ); }\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( var j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var j$1 = 1; j$1 <= tubularSegments; j$1 ++ ) {\n\n\t\t\tfor ( var i$1 = 1; i$1 <= radialSegments; i$1 ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j$1 - 1 ) + ( i$1 - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j$1 + ( i$1 - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j$1 + i$1;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j$1 - 1 ) + i$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var j$1 = 1; j$1 <= radialSegments; j$1 ++ ) {\n\n\t\t\tfor ( var i$1 = 1; i$1 <= tubularSegments; i$1 ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j$1 + i$1 - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j$1 - 1 ) + i$1 - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j$1 - 1 ) + i$1;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j$1 + i$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\n\tvar Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\t\tdim = dim || 2;\n\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\t\ttriangles = [];\n\n\t\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) { return triangles; }\n\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\t\tif ( y > maxY ) { maxY = y; }\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tvar i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) { return start; }\n\t\tif ( ! end ) { end = start; }\n\n\t\tvar p = start,\n\t\t\tagain;\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) { break; }\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) { return; }\n\n\t\t// interlink polygon nodes in z-order\n\t\tif ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\n\n\t\tvar stop = ear,\n\t\t\tprev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim );\n\t\t\t\ttriangles.push( ear.i / dim );\n\t\t\t\ttriangles.push( next.i / dim );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\tfunction isEar( ear ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tvar p = ear.next.next;\n\n\t\twhile ( p !== ear.prev ) {\n\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t\t// z-order range for the current triangle bbox;\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t\tvar p = ear.prevZ,\n\t\t\tn = ear.nextZ;\n\n\t\t// look for points inside the triangle in both directions\n\t\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\t// look for remaining points in decreasing z-order\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\t// look for remaining points in increasing z-order\n\t\twhile ( n && n.z <= maxZ ) {\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tvar a = p.prev,\n\t\t\t\tb = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim );\n\t\t\t\ttriangles.push( p.i / dim );\n\t\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t\t// remove two nodes involved\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn filterPoints( p );\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tvar a = start;\n\t\tdo {\n\n\t\t\tvar b = a.next.next;\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tvar queue = [],\n\t\t\ti, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) { list.steiner = true; }\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\teliminateHole( queue[ i ], outerNode );\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\touterNode = findHoleBridge( hole, outerNode );\n\t\tif ( outerNode ) {\n\n\t\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\t\t// filter collinear points around the cuts\n\t\t\tfilterPoints( outerNode, outerNode.next );\n\t\t\tfilterPoints( b, b.next );\n\n\t\t}\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tvar p = outerNode,\n\t\t\thx = hole.x,\n\t\t\thy = hole.y,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\t\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\t\tif ( hy === p.y ) { return p; }\n\t\t\t\t\t\tif ( hy === p.next.y ) { return p.next; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) { return null; }\n\n\t\tif ( hx === qx ) { return m; } // hole touches outer segment; pick leftmost endpoint\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y,\n\t\t\ttanMin = Infinity,\n\t\t\ttan;\n\n\t\tp = m;\n\n\t\tdo {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== stop );\n\n\t\treturn m;\n\n\t}\n\n\t// whether sector in vertex m contains sector in vertex p in the same coordinates\n\tfunction sectorContainsSector( m, p ) {\n\n\t\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tif ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\tfunction sortLinked( list ) {\n\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t\tinSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) { break; }\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) { tail.nextZ = e; }\n\t\t\t\t\telse { list = e; }\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * ( x - minX ) * invSize;\n\t\ty = 32767 * ( y - minY ) * invSize;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\tfunction getLeftmost( start ) {\n\n\t\tvar p = start,\n\t\t\tleftmost = start;\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) { leftmost = p; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n\t}\n\n\t// signed area of a triangle\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tvar o1 = sign( area( p1, q1, p2 ) );\n\t\tvar o2 = sign( area( p1, q1, q2 ) );\n\t\tvar o3 = sign( area( p2, q2, p1 ) );\n\t\tvar o4 = sign( area( p2, q2, q1 ) );\n\n\t\tif ( o1 !== o2 && o3 !== o4 ) { return true; } // general case\n\n\t\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) { return true; } // p1, q1 and p2 are collinear and p2 lies on p1q1\n\t\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) { return true; } // p1, q1 and q2 are collinear and q2 lies on p1q1\n\t\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) { return true; } // p2, q2 and p1 are collinear and p1 lies on p2q2\n\t\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) { return true; } // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\n\t}\n\n\t// for collinear points p, q, r, check if point q lies on segment pr\n\tfunction onSegment( p, q, r ) {\n\n\t\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n\t}\n\n\tfunction sign( num ) {\n\n\t\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tvar p = a;\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\tintersects( p, p.next, a, b ) ) { return true; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\tfunction middleInside( a, b ) {\n\n\t\tvar p = a,\n\t\t\tinside = false,\n\t\t\tpx = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t\t{ inside = ! inside; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\tfunction splitPolygon( a, b ) {\n\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tvar p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\n\t\tif ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertex index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertex nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = null;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tvar sum = 0;\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tvar holeIndices = []; // array of hole indices\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tvar holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( var i$1 = 0; i$1 < triangles.length; i$1 += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i$1, i$1 + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t};\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tvar l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float>, // how far from shape outline does bevel start\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tvar scope = this;\n\n\t\tvar verticesArray = [];\n\t\tvar uvArray = [];\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar placeholder = [];\n\n\t\t\t// options\n\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tvar extrudePath = options.extrudePath;\n\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tvar ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( var h$1 = 0, hl$1 = holes.length; h$1 < hl$1; h$1 ++ ) {\n\n\t\t\t\tvar ahole$1 = holes[ h$1 ];\n\n\t\t\t\tvertices = vertices.concat( ahole$1 );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) { console.error( \"THREE.ExtrudeGeometry: vec does not exist\" ); }\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tvar vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tvar contourMovements = [];\n\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) { j = 0; }\n\t\t\t\tif ( k === il ) { k = 0; }\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tvar holesMovements = [];\n\t\t\tvar oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( var h$2 = 0, hl$2 = holes.length; h$2 < hl$2; h$2 ++ ) {\n\n\t\t\t\tvar ahole$2 = holes[ h$2 ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = ahole$2.length, j$1 = il$1 - 1, k$1 = i$1 + 1; i$1 < il$1; i$1 ++, j$1 ++, k$1 ++ ) {\n\n\t\t\t\t\tif ( j$1 === il$1 ) { j$1 = 0; }\n\t\t\t\t\tif ( k$1 === il$1 ) { k$1 = 0; }\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i$1 ] = getBevelVec( ahole$2[ i$1 ], ahole$2[ j$1 ], ahole$2[ k$1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( var b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tvar t = b / bevelSegments;\n\t\t\t\tvar z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tvar bs$1 = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( var i$2 = 0, il$2 = contour.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\tvar vert = scalePt2( contour[ i$2 ], contourMovements[ i$2 ], bs$1 );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( var h$3 = 0, hl$3 = holes.length; h$3 < hl$3; h$3 ++ ) {\n\n\t\t\t\t\tvar ahole$3 = holes[ h$3 ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h$3 ];\n\n\t\t\t\t\tfor ( var i$3 = 0, il$3 = ahole$3.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\t\t\tvar vert$1 = scalePt2( ahole$3[ i$3 ], oneHoleMovements[ i$3 ], bs$1 );\n\n\t\t\t\t\t\tv( vert$1.x, vert$1.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( var i$4 = 0; i$4 < vlen; i$4 ++ ) {\n\n\t\t\t\tvar vert$2 = bevelEnabled ? scalePt2( vertices[ i$4 ], verticesMovements[ i$4 ], bs ) : vertices[ i$4 ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert$2.x, vert$2.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert$2.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert$2.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( var s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( var i$5 = 0; i$5 < vlen; i$5 ++ ) {\n\n\t\t\t\t\tvar vert$3 = bevelEnabled ? scalePt2( vertices[ i$5 ], verticesMovements[ i$5 ], bs ) : vertices[ i$5 ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert$3.x, vert$3.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert$3.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert$3.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( var b$1 = bevelSegments - 1; b$1 >= 0; b$1 -- ) {\n\n\t\t\t\tvar t$1 = b$1 / bevelSegments;\n\t\t\t\tvar z$1 = bevelThickness * Math.cos( t$1 * Math.PI / 2 );\n\t\t\t\tvar bs$2 = bevelSize * Math.sin( t$1 * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( var i$6 = 0, il$4 = contour.length; i$6 < il$4; i$6 ++ ) {\n\n\t\t\t\t\tvar vert$4 = scalePt2( contour[ i$6 ], contourMovements[ i$6 ], bs$2 );\n\t\t\t\t\tv( vert$4.x, vert$4.y, depth + z$1 );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( var h$4 = 0, hl$4 = holes.length; h$4 < hl$4; h$4 ++ ) {\n\n\t\t\t\t\tvar ahole$4 = holes[ h$4 ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h$4 ];\n\n\t\t\t\t\tfor ( var i$7 = 0, il$5 = ahole$4.length; i$7 < il$5; i$7 ++ ) {\n\n\t\t\t\t\t\tvar vert$5 = scalePt2( ahole$4[ i$7 ], oneHoleMovements[ i$7 ], bs$2 );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert$5.x, vert$5.y, depth + z$1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert$5.x, vert$5.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z$1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( var i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( var i$1 = 0; i$1 < flen; i$1 ++ ) {\n\n\t\t\t\t\t\tvar face$1 = faces[ i$1 ];\n\t\t\t\t\t\tf3( face$1[ 0 ] + offset, face$1[ 1 ] + offset, face$1[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < flen; i$2 ++ ) {\n\n\t\t\t\t\t\tvar face$2 = faces[ i$2 ];\n\t\t\t\t\t\tf3( face$2[ 2 ], face$2[ 1 ], face$2[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( var i$3 = 0; i$3 < flen; i$3 ++ ) {\n\n\t\t\t\t\t\tvar face$3 = faces[ i$3 ];\n\t\t\t\t\t\tf3( face$3[ 0 ] + vlen * steps, face$3[ 1 ] + vlen * steps, face$3[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tvar ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tvar i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tvar j = i;\n\t\t\t\t\tvar k = i - 1;\n\t\t\t\t\tif ( k < 0 ) { k = contour.length - 1; }\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( var s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t//\n\n\tvar WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\tfunction toJSON( shapes, options, data ) {\n\n\t\t//\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( options.extrudePath !== undefined ) { data.options.extrudePath = options.extrudePath.toJSON(); }\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) { parameters.bevelThickness = 10; }\n\t\tif ( parameters.bevelSize === undefined ) { parameters.bevelSize = 8; }\n\t\tif ( parameters.bevelEnabled === undefined ) { parameters.bevelEnabled = false; }\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tvar uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( var ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var iy$1 = 0; iy$1 < heightSegments; iy$1 ++ ) {\n\n\t\t\tfor ( var ix$1 = 0; ix$1 < widthSegments; ix$1 ++ ) {\n\n\t\t\t\tvar a = grid[ iy$1 ][ ix$1 + 1 ];\n\t\t\t\tvar b = grid[ iy$1 ][ ix$1 ];\n\t\t\t\tvar c = grid[ iy$1 + 1 ][ ix$1 ];\n\t\t\t\tvar d = grid[ iy$1 + 1 ][ ix$1 + 1 ];\n\n\t\t\t\tif ( iy$1 !== 0 || thetaStart > 0 ) { indices.push( a, b, d ); }\n\t\t\t\tif ( iy$1 !== heightSegments - 1 || thetaEnd < Math.PI ) { indices.push( b, c, d ); }\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 0.5;\n\t\touterRadius = outerRadius || 1;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( var i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tvar segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var j$1 = 0; j$1 < phiSegments; j$1 ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j$1 * ( thetaSegments + 1 );\n\n\t\t\tfor ( var i$1 = 0; i$1 < thetaSegments; i$1 ++ ) {\n\n\t\t\t\tvar segment$1 = i$1 + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment$1;\n\t\t\t\tvar b = segment$1 + thetaSegments + 1;\n\t\t\t\tvar c = segment$1 + thetaSegments + 2;\n\t\t\t\tvar d = segment$1 + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( var i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( var j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var i$1 = 0; i$1 < segments; i$1 ++ ) {\n\n\t\t\tfor ( var j$1 = 0; j$1 < ( points.length - 1 ); j$1 ++ ) {\n\n\t\t\t\tvar base = j$1 + i$1 * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tvar base$1 = segments * points.length * 3;\n\n\t\t\tfor ( var i$2 = 0, j$2 = 0; i$2 < points.length; i$2 ++, j$2 += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j$2 + 0 ];\n\t\t\t\tn1.y = normals[ j$2 + 1 ];\n\t\t\t\tn1.z = normals[ j$2 + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base$1 + j$2 + 0 ];\n\t\t\t\tn2.y = normals[ base$1 + j$2 + 1 ];\n\t\t\t\tn2.z = normals[ base$1 + j$2 + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j$2 + 0 ] = normals[ base$1 + j$2 + 0 ] = n.x;\n\t\t\t\tnormals[ j$2 + 1 ] = normals[ base$1 + j$2 + 1 ] = n.y;\n\t\t\t\tnormals[ j$2 + 2 ] = normals[ base$1 + j$2 + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\tShapeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tvar shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( var i$1 = 0, l$1 = shapeHoles.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tvar shapeHole$1 = shapeHoles[ i$1 ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole$1 );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( var i$2 = 0, l$2 = shapeVertices.length; i$2 < l$2; i$2 ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i$2 ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( var i$3 = 0, l$3 = faces.length; i$3 < l$3; i$3 ++ ) {\n\n\t\t\t\tvar face = faces[ i$3 ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\tShapeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t//\n\n\tfunction toJSON$1( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {};\n\t\tvar edge1, edge2, key;\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\t\theight = height || 1;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) { generateCap( true ); }\n\t\t\tif ( radiusBottom > 0 ) { generateCap( false ); }\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( var x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( var x$1 = 0; x$1 < radialSegments; x$1 ++ ) {\n\n\t\t\t\tfor ( var y$1 = 0; y$1 < heightSegments; y$1 ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y$1 ][ x$1 ];\n\t\t\t\t\tvar b = indexArray[ y$1 + 1 ][ x$1 ];\n\t\t\t\t\tvar c = indexArray[ y$1 + 1 ][ x$1 + 1 ];\n\t\t\t\t\tvar d = indexArray[ y$1 ][ x$1 + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( var x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( var x$1 = 0; x$1 <= radialSegments; x$1 ++ ) {\n\n\t\t\t\tvar u = x$1 / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( var x$2 = 0; x$2 < radialSegments; x$2 ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x$2;\n\t\t\t\tvar i = centerIndexEnd + x$2;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( var s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var i$1 = 1; i$1 <= segments; i$1 ++ ) {\n\n\t\t\tindices.push( i$1, i$1 + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  clearcoat: <float>,\n\t *  clearcoatMap: new THREE.Texture( <Image> ),\n\t *  clearcoatRoughness: <float>,\n\t *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *  clearcoatNormalScale: <Vector2>,\n\t *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *  reflectivity: <float>,\n\t *\n\t *  sheen: <Color>,\n\t *\n\t *  transparency: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transparency = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transparency = source.transparency;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.MultiplyOperation,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *  gradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( Material.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) { return array; }\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) { result[ i ] = i; }\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) { return; } // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) { return; } // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t},\n\n\t\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\t\tfps = fps || 30;\n\n\t\t\tvar clip = sourceClip.clone();\n\n\t\t\tclip.name = name;\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\tvar track = clip.tracks[ i ];\n\t\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\t\tif ( frame < startFrame || frame >= endFrame ) { continue; }\n\n\t\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( times.length === 0 ) { continue; }\n\n\t\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\t\ttracks.push( track );\n\n\t\t\t}\n\n\t\t\tclip.tracks = tracks;\n\n\t\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tvar minStartTime = Infinity;\n\n\t\t\tfor ( var i$1 = 0; i$1 < clip.tracks.length; ++ i$1 ) {\n\n\t\t\t\tif ( minStartTime > clip.tracks[ i$1 ].times[ 0 ] ) {\n\n\t\t\t\t\tminStartTime = clip.tracks[ i$1 ].times[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// shift all tracks such that clip begins at t=0\n\n\t\t\tfor ( var i$2 = 0; i$2 < clip.tracks.length; ++ i$2 ) {\n\n\t\t\t\tclip.tracks[ i$2 ].shift( - 1 * minStartTime );\n\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\n\t\t\treturn clip;\n\n\t\t},\n\n\t\tmakeClipAdditive: function ( targetClip, referenceFrame, referenceClip, fps ) {\n\n\t\t\tif ( referenceFrame === undefined ) { referenceFrame = 0; }\n\t\t\tif ( referenceClip === undefined ) { referenceClip = targetClip; }\n\t\t\tif ( fps === undefined || fps <= 0 ) { fps = 30; }\n\n\t\t\tvar numTracks = targetClip.tracks.length;\n\t\t\tvar referenceTime = referenceFrame / fps;\n\n\t\t\t// Make each track's values relative to the values at the reference frame\n\t\t\tvar loop = function ( i ) {\n\n\t\t\t\tvar referenceTrack = referenceClip.tracks[ i ];\n\t\t\t\tvar referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t\t// Skip this track if it's non-numeric\n\t\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) { return; }\n\n\t\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\t\tvar targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t\t} );\n\n\t\t\t\tif ( targetTrack === undefined ) { return; }\n\n\t\t\t\tvar valueSize = referenceTrack.getValueSize();\n\t\t\t\tvar lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tvar referenceValue = (void 0);\n\n\t\t\t\t// Find the value to subtract out of the track\n\t\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, 0, referenceTrack.valueSize );\n\n\t\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tvar startIndex = lastIndex * valueSize;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tvar interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\t\treferenceValue = interpolant.resultBuffer;\n\n\t\t\t\t}\n\n\t\t\t\t// Conjugate the quaternion\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\tvar referenceQuat = new Quaternion(\n\t\t\t\t\t\treferenceValue[ 0 ],\n\t\t\t\t\t\treferenceValue[ 1 ],\n\t\t\t\t\t\treferenceValue[ 2 ],\n\t\t\t\t\t\treferenceValue[ 3 ]\n\t\t\t\t\t).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t\t}\n\n\t\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\t\tvar numTimes = targetTrack.times.length;\n\t\t\t\tfor ( var j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\t\tvar valueStart = j * valueSize;\n\n\t\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\t\tvalueStart\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < numTracks; ++ i ) loop( i );\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\t\treturn targetClip;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function ( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) { break forward_scan; }\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt$1 = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt$1 ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function () {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function ( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t// DECLARE ALIAS AFTER assign prototype\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) { throw new Error( 'THREE.KeyframeTrack: track name is undefined' ); }\n\t\tif ( times === undefined || times.length === 0 ) { throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name ); }\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Static methods\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\ttoJSON: function ( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( KeyframeTrack.prototype, {\n\n\t\tconstructor: KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length;\n\n\t\t\tvar from = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) {\n\n\t\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\t\tfrom = to - 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i$1 = 0, n = values.length; i$1 !== n; ++ i$1 ) {\n\n\t\t\t\t\t\tvar value = values[ i$1 ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i$1, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tvar times = AnimationUtils.arraySlice( this.times ),\n\t\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tvar writeIndex = 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j$1 = 0; j$1 !== stride; ++ j$1 ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j$1 ] = values[ readOffset + j$1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset$1 = lastIndex * stride, writeOffset$1 = writeIndex * stride, j$2 = 0; j$2 !== stride; ++ j$2 ) {\n\n\t\t\t\t\tvalues[ writeOffset$1 + j$2 ] = values[ readOffset$1 + j$2 ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t} else {\n\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\t\tvar TypedKeyframeTrack = this.constructor;\n\t\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\t\treturn track;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrack.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tvar offset = i1 * stride;\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks, blendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\t\tthis.blendMode = ( blendMode !== undefined ) ? blendMode : NormalAnimationBlendMode;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks, json.blendMode );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name$1 in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name$1, animationToMorphTargets[ name$1 ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\tvar fps = animation.fps || 30;\n\t\t\tvar blendMode = animation.blendMode;\n\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) { continue; }\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tvar k = (void 0);\n\n\t\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m$1 = 0; m$1 !== animationKeys[ k ].morphTargets.length; ++ m$1 ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks, blendMode );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks;\n\t\t\tvar duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( this.name, this.duration, tracks, this.blendMode );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\t\tvar handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tvar index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) { regex.lastIndex = 0; } // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tObject.assign( Loader.prototype, {\n\n\t\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\t\tloadAsync: function ( url, onProgress ) {\n\n\t\t\tvar scope = this;\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t\t} );\n\n\t\t},\n\n\t\tparse: function ( /* data */ ) {},\n\n\t\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( path ) {\n\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( resourcePath ) {\n\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( requestHeader ) {\n\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar loading = {};\n\n\tfunction FileLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FileLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\t\t\tvar request;\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\t\t\t\tdata = decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) { data = atob( data ); }\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( response ); }\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) { onError( error ); }\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Initialise array for duplicate requests\n\n\t\t\t\tloading[ url ] = [];\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\trequest = new XMLHttpRequest();\n\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = this.response;\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( this.status === 0 ) { console.warn( 'THREE.FileLoader: HTTP Status 0 received.' ); }\n\n\t\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onLoad ) { callback.onLoad( response ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i$1 = 0, il$1 = callbacks.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\t\t\tvar callback$1 = callbacks[ i$1 ];\n\t\t\t\t\t\t\tif ( callback$1.onError ) { callback$1.onError( event ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onProgress ) { callback.onProgress( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) { request.responseType = this.responseType; }\n\t\t\t\tif ( this.withCredentials !== undefined ) { request.withCredentials = this.withCredentials; }\n\n\t\t\t\tif ( request.overrideMimeType ) { request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' ); }\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t */\n\n\tfunction AnimationLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AnimationLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CompressedTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\t{ texture.minFilter = LinearFilter; }\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: DataTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\t\tif ( ! texData ) { return; }\n\n\t\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) { onLoad( texture, texData ); }\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) { onLoad( this ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tif ( onError ) { onError( event ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) { image.crossOrigin = this.crossOrigin; }\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CubeTextureLoader,\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: TextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = this.arcLengthDivisions; }\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( var p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t, optionalTarget ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) { t1 = 0; }\n\t\t\tif ( t2 > 1 ) { t2 = 1; }\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\t\treturn tangent;\n\n\t\t},\n\n\t\tgetTangentAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t, optionalTarget );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( var i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tvar u = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( var i$1 = 1; i$1 <= segments; i$1 ++ ) {\n\n\t\t\t\tnormals[ i$1 ] = normals[ i$1 - 1 ].clone();\n\n\t\t\t\tbinormals[ i$1 ] = binormals[ i$1 - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i$1 - 1 ], tangents[ i$1 ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\tvar theta = Math.acos( MathUtils.clamp( tangents[ i$1 - 1 ].dot( tangents[ i$1 ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i$1 ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i$1 ].crossVectors( tangents[ i$1 ], normals[ i$1 ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\tvar theta$1 = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta$1 /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta$1 = - theta$1;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i$2 = 1; i$2 <= segments; i$2 ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i$2 ].applyMatrix4( mat.makeRotationAxis( tangents[ i$2 ], theta$1 * i$2 ) );\n\t\t\t\t\tbinormals[ i$2 ].crossVectors( tangents[ i$2 ], normals[ i$2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\t\tthis.aClockwise = aClockwise || false;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) { deltaAngle += twoPi; }\n\t\twhile ( deltaAngle > twoPi ) { deltaAngle -= twoPi; }\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t};\n\n\tEllipseCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\n\tEllipseCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points || [];\n\t\tthis.closed = closed || false;\n\t\tthis.curveType = curveType || 'centripetal';\n\t\tthis.tension = tension || 0.5;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) { dt1 = 1.0; }\n\t\t\tif ( dt0 < 1e-4 ) { dt0 = dt1; }\n\t\t\tif ( dt2 < 1e-4 ) { dt2 = dt1; }\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\t\tthis.v3 = v3 || new Vector2();\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\t\tthis.v3 = v3 || new Vector3();\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\t\tvar tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t};\n\n\tLineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points || [];\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar points = this.points;\n\t\tvar p = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar p1 = points[ intPoint ];\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tSplineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tSplineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [];\n\t\t\tvar sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 40; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [];\n\t\t\tvar last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) { continue; } // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurve.prototype.copy.call( this, source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tconstructor: Path,\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape( points ) {\n\n\t\tPath.call( this, points );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tPath.prototype.copy.call( this, source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) { data.object.groundColor = this.groundColor.getHex(); }\n\n\t\t\tif ( this.distance !== undefined ) { data.object.distance = this.distance; }\n\t\t\tif ( this.angle !== undefined ) { data.object.angle = this.angle; }\n\t\t\tif ( this.decay !== undefined ) { data.object.decay = this.decay; }\n\t\t\tif ( this.penumbra !== undefined ) { data.object.penumbra = this.penumbra; }\n\n\t\t\tif ( this.shadow !== undefined ) { data.object.shadow = this.shadow.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\t_projScreenMatrix: new Matrix4(),\n\n\t\t_lightPositionWorld: new Vector3(),\n\n\t\t_lookTarget: new Vector3(),\n\n\t\tgetViewportCount: function () {\n\n\t\t\treturn this._viewportCount;\n\n\t\t},\n\n\t\tgetFrustum: function () {\n\n\t\t\treturn this._frustum;\n\n\t\t},\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar shadowCamera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( lookTarget );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t},\n\n\t\tgetViewport: function ( viewportIndex ) {\n\n\t\t\treturn this._viewports[ viewportIndex ];\n\n\t\t},\n\n\t\tgetFrameExtents: function () {\n\n\t\t\treturn this._frameExtents;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) { object.bias = this.bias; }\n\t\t\tif ( this.normalBias !== 0 ) { object.normalBias = this.normalBias; }\n\t\t\tif ( this.radius !== 1 ) { object.radius = this.radius; }\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) { object.mapSize = this.mapSize.toArray(); }\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = MathUtils.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction PointLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: PointLightShadow,\n\n\t\tisPointLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\t\tif ( viewportIndex === undefined ) { viewportIndex = 0; }\n\n\t\t\tvar camera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tcamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.copy( camera.position );\n\t\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t\tcamera.lookAt( lookTarget );\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = ( left !== undefined ) ? left : - 1;\n\t\tthis.right = ( right !== undefined ) ? right : 1;\n\t\tthis.top = ( top !== undefined ) ? top : 1;\n\t\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow() {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow,\n\n\t\tisDirectionalLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t}\n\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Primary reference:\n\t *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *   https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\n\t// 3-band SH defined by 9 coefficients\n\n\tfunction SphericalHarmonics3() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tObject.assign( SphericalHarmonics3.prototype, {\n\n\t\tisSphericalHarmonics3: true,\n\n\t\tset: function ( coefficients ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tzero: function () {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\tgetAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tadd: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledSH: function ( sh, s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( sh, alpha ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcopy: function ( sh ) {\n\n\t\t\treturn this.set( sh.coefficients );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( SphericalHarmonics3, {\n\n\t\t// evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t// band 0\n\t\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t\t// band 1\n\t\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t\t// band 2\n\t\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * A LightProbe is a source of indirect-diffuse light\n\t */\n\n\tfunction LightProbe( sh, intensity ) {\n\n\t\tLight.call( this, undefined, intensity );\n\n\t\tthis.type = 'LightProbe';\n\n\t\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n\t}\n\n\tLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: LightProbe,\n\n\t\tisLightProbe: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.sh.copy( source.sh );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\t\tthis.sh.fromArray( json.sh );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.sh = this.sh.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: MaterialLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) { material.uuid = json.uuid; }\n\t\t\tif ( json.name !== undefined ) { material.name = json.name; }\n\t\t\tif ( json.color !== undefined ) { material.color.setHex( json.color ); }\n\t\t\tif ( json.roughness !== undefined ) { material.roughness = json.roughness; }\n\t\t\tif ( json.metalness !== undefined ) { material.metalness = json.metalness; }\n\t\t\tif ( json.sheen !== undefined ) { material.sheen = new Color().setHex( json.sheen ); }\n\t\t\tif ( json.emissive !== undefined ) { material.emissive.setHex( json.emissive ); }\n\t\t\tif ( json.specular !== undefined ) { material.specular.setHex( json.specular ); }\n\t\t\tif ( json.shininess !== undefined ) { material.shininess = json.shininess; }\n\t\t\tif ( json.clearcoat !== undefined ) { material.clearcoat = json.clearcoat; }\n\t\t\tif ( json.clearcoatRoughness !== undefined ) { material.clearcoatRoughness = json.clearcoatRoughness; }\n\t\t\tif ( json.fog !== undefined ) { material.fog = json.fog; }\n\t\t\tif ( json.flatShading !== undefined ) { material.flatShading = json.flatShading; }\n\t\t\tif ( json.blending !== undefined ) { material.blending = json.blending; }\n\t\t\tif ( json.combine !== undefined ) { material.combine = json.combine; }\n\t\t\tif ( json.side !== undefined ) { material.side = json.side; }\n\t\t\tif ( json.opacity !== undefined ) { material.opacity = json.opacity; }\n\t\t\tif ( json.transparent !== undefined ) { material.transparent = json.transparent; }\n\t\t\tif ( json.alphaTest !== undefined ) { material.alphaTest = json.alphaTest; }\n\t\t\tif ( json.depthTest !== undefined ) { material.depthTest = json.depthTest; }\n\t\t\tif ( json.depthWrite !== undefined ) { material.depthWrite = json.depthWrite; }\n\t\t\tif ( json.colorWrite !== undefined ) { material.colorWrite = json.colorWrite; }\n\n\t\t\tif ( json.stencilWrite !== undefined ) { material.stencilWrite = json.stencilWrite; }\n\t\t\tif ( json.stencilWriteMask !== undefined ) { material.stencilWriteMask = json.stencilWriteMask; }\n\t\t\tif ( json.stencilFunc !== undefined ) { material.stencilFunc = json.stencilFunc; }\n\t\t\tif ( json.stencilRef !== undefined ) { material.stencilRef = json.stencilRef; }\n\t\t\tif ( json.stencilFuncMask !== undefined ) { material.stencilFuncMask = json.stencilFuncMask; }\n\t\t\tif ( json.stencilFail !== undefined ) { material.stencilFail = json.stencilFail; }\n\t\t\tif ( json.stencilZFail !== undefined ) { material.stencilZFail = json.stencilZFail; }\n\t\t\tif ( json.stencilZPass !== undefined ) { material.stencilZPass = json.stencilZPass; }\n\n\t\t\tif ( json.wireframe !== undefined ) { material.wireframe = json.wireframe; }\n\t\t\tif ( json.wireframeLinewidth !== undefined ) { material.wireframeLinewidth = json.wireframeLinewidth; }\n\t\t\tif ( json.wireframeLinecap !== undefined ) { material.wireframeLinecap = json.wireframeLinecap; }\n\t\t\tif ( json.wireframeLinejoin !== undefined ) { material.wireframeLinejoin = json.wireframeLinejoin; }\n\n\t\t\tif ( json.rotation !== undefined ) { material.rotation = json.rotation; }\n\n\t\t\tif ( json.linewidth !== 1 ) { material.linewidth = json.linewidth; }\n\t\t\tif ( json.dashSize !== undefined ) { material.dashSize = json.dashSize; }\n\t\t\tif ( json.gapSize !== undefined ) { material.gapSize = json.gapSize; }\n\t\t\tif ( json.scale !== undefined ) { material.scale = json.scale; }\n\n\t\t\tif ( json.polygonOffset !== undefined ) { material.polygonOffset = json.polygonOffset; }\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) { material.polygonOffsetFactor = json.polygonOffsetFactor; }\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) { material.polygonOffsetUnits = json.polygonOffsetUnits; }\n\n\t\t\tif ( json.skinning !== undefined ) { material.skinning = json.skinning; }\n\t\t\tif ( json.morphTargets !== undefined ) { material.morphTargets = json.morphTargets; }\n\t\t\tif ( json.morphNormals !== undefined ) { material.morphNormals = json.morphNormals; }\n\t\t\tif ( json.dithering !== undefined ) { material.dithering = json.dithering; }\n\n\t\t\tif ( json.vertexTangents !== undefined ) { material.vertexTangents = json.vertexTangents; }\n\n\t\t\tif ( json.visible !== undefined ) { material.visible = json.visible; }\n\n\t\t\tif ( json.toneMapped !== undefined ) { material.toneMapped = json.toneMapped; }\n\n\t\t\tif ( json.userData !== undefined ) { material.userData = json.userData; }\n\n\t\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) { material.defines = json.defines; }\n\t\t\tif ( json.vertexShader !== undefined ) { material.vertexShader = json.vertexShader; }\n\t\t\tif ( json.fragmentShader !== undefined ) { material.fragmentShader = json.fragmentShader; }\n\n\t\t\tif ( json.extensions !== undefined ) {\n\n\t\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) { material.flatShading = json.shading === 1; } // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) { material.size = json.size; }\n\t\t\tif ( json.sizeAttenuation !== undefined ) { material.sizeAttenuation = json.sizeAttenuation; }\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) { material.map = getTexture( json.map ); }\n\t\t\tif ( json.matcap !== undefined ) { material.matcap = getTexture( json.matcap ); }\n\n\t\t\tif ( json.alphaMap !== undefined ) { material.alphaMap = getTexture( json.alphaMap ); }\n\n\t\t\tif ( json.bumpMap !== undefined ) { material.bumpMap = getTexture( json.bumpMap ); }\n\t\t\tif ( json.bumpScale !== undefined ) { material.bumpScale = json.bumpScale; }\n\n\t\t\tif ( json.normalMap !== undefined ) { material.normalMap = getTexture( json.normalMap ); }\n\t\t\tif ( json.normalMapType !== undefined ) { material.normalMapType = json.normalMapType; }\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) { material.displacementMap = getTexture( json.displacementMap ); }\n\t\t\tif ( json.displacementScale !== undefined ) { material.displacementScale = json.displacementScale; }\n\t\t\tif ( json.displacementBias !== undefined ) { material.displacementBias = json.displacementBias; }\n\n\t\t\tif ( json.roughnessMap !== undefined ) { material.roughnessMap = getTexture( json.roughnessMap ); }\n\t\t\tif ( json.metalnessMap !== undefined ) { material.metalnessMap = getTexture( json.metalnessMap ); }\n\n\t\t\tif ( json.emissiveMap !== undefined ) { material.emissiveMap = getTexture( json.emissiveMap ); }\n\t\t\tif ( json.emissiveIntensity !== undefined ) { material.emissiveIntensity = json.emissiveIntensity; }\n\n\t\t\tif ( json.specularMap !== undefined ) { material.specularMap = getTexture( json.specularMap ); }\n\n\t\t\tif ( json.envMap !== undefined ) { material.envMap = getTexture( json.envMap ); }\n\t\t\tif ( json.envMapIntensity !== undefined ) { material.envMapIntensity = json.envMapIntensity; }\n\n\t\t\tif ( json.reflectivity !== undefined ) { material.reflectivity = json.reflectivity; }\n\t\t\tif ( json.refractionRatio !== undefined ) { material.refractionRatio = json.refractionRatio; }\n\n\t\t\tif ( json.lightMap !== undefined ) { material.lightMap = getTexture( json.lightMap ); }\n\t\t\tif ( json.lightMapIntensity !== undefined ) { material.lightMapIntensity = json.lightMapIntensity; }\n\n\t\t\tif ( json.aoMap !== undefined ) { material.aoMap = getTexture( json.aoMap ); }\n\t\t\tif ( json.aoMapIntensity !== undefined ) { material.aoMapIntensity = json.aoMapIntensity; }\n\n\t\t\tif ( json.gradientMap !== undefined ) { material.gradientMap = getTexture( json.gradientMap ); }\n\n\t\t\tif ( json.clearcoatMap !== undefined ) { material.clearcoatMap = getTexture( json.clearcoatMap ); }\n\t\t\tif ( json.clearcoatRoughnessMap !== undefined ) { material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap ); }\n\t\t\tif ( json.clearcoatNormalMap !== undefined ) { material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap ); }\n\t\t\tif ( json.clearcoatNormalScale !== undefined ) { material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale ); }\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tvar LoaderUtils = {\n\n\t\tdecodeText: function ( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tvar s = '';\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t\t} catch ( e ) { // see #16358\n\n\t\t\t\treturn s;\n\n\t\t\t}\n\n\t\t},\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) { return './'; }\n\n\t\t\treturn url.substr( 0, index + 1 );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\t\tthis.instanceCount = source.instanceCount;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\t\tdata.instanceCount = this.instanceCount;\n\n\t\t\tdata.isInstancedBufferGeometry = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ()\t{\n\n\t\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\tdata.isInstancedBufferAttribute = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: BufferGeometryLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar interleavedBufferMap = {};\n\t\t\tvar arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) { return interleavedBufferMap[ uuid ]; }\n\n\t\t\t\tvar interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tvar interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\t\tvar buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\t\tvar array = new TYPED_ARRAYS[ interleavedBuffer.type ]( buffer );\n\t\t\t\tvar ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\t\treturn ib;\n\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) { return arrayBufferMap[ uuid ]; }\n\n\t\t\t\tvar arrayBuffers = json.arrayBuffers;\n\t\t\t\tvar arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\t\tvar ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\t\treturn ab;\n\n\t\t\t}\n\n\t\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar bufferAttribute = (void 0);\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tvar interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar typedArray$1 = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray$1, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tif ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }\n\t\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\t\tif ( morphAttributes ) {\n\n\t\t\t\tfor ( var key$1 in morphAttributes ) {\n\n\t\t\t\t\tvar attributeArray = morphAttributes[ key$1 ];\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar attribute$1 = attributeArray[ i ];\n\t\t\t\t\t\tvar bufferAttribute$1 = (void 0);\n\n\t\t\t\t\t\tif ( attribute$1.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar interleavedBuffer$1 = getInterleavedBuffer( json.data, attribute$1.data );\n\t\t\t\t\t\t\tbufferAttribute$1 = new InterleavedBufferAttribute( interleavedBuffer$1, attribute$1.itemSize, attribute$1.offset, attribute$1.normalized );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar typedArray$2 = new TYPED_ARRAYS[ attribute$1.type ]( attribute$1.array );\n\t\t\t\t\t\t\tbufferAttribute$1 = new BufferAttribute( typedArray$2, attribute$1.itemSize, attribute$1.normalized );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attribute$1.name !== undefined ) { bufferAttribute$1.name = attribute$1.name; }\n\t\t\t\t\t\tarray.push( bufferAttribute$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[ key$1 ] = array;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i$1 = 0, n = groups.length; i$1 !== n; ++ i$1 ) {\n\n\t\t\t\t\tvar group = groups[ i$1 ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\tif ( json.name ) { geometry.name = json.name; }\n\t\t\tif ( json.userData ) { geometry.userData = json.userData; }\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ObjectLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) { onError( error ); }\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar shapes = this.parseShape( json.shapes );\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseShape: function ( json ) {\n\n\t\t\tvar shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t},\n\n\t\tparseGeometries: function ( json, shapes ) {\n\n\t\t\tvar geometries = {};\n\t\t\tvar geometryShapes;\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry = (void 0);\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j$1 = 0, jl$1 = data.shapes.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape$1 = shapes[ data.shapes[ j$1 ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape$1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { geometry.name = data.name; }\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) { geometry.userData = data.userData; }\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar cache = {}; // MultiMaterial\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\t\tif ( data.uuid !== undefined ) { clip.uuid = data.uuid; }\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tvar loader;\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tloader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tvar path$1 = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) { return value; }\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = (void 0);\n\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { texture.name = data.name; }\n\n\t\t\t\t\tif ( data.mapping !== undefined ) { texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING ); }\n\n\t\t\t\t\tif ( data.offset !== undefined ) { texture.offset.fromArray( data.offset ); }\n\t\t\t\t\tif ( data.repeat !== undefined ) { texture.repeat.fromArray( data.repeat ); }\n\t\t\t\t\tif ( data.center !== undefined ) { texture.center.fromArray( data.center ); }\n\t\t\t\t\tif ( data.rotation !== undefined ) { texture.rotation = data.rotation; }\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) { texture.format = data.format; }\n\t\t\t\t\tif ( data.type !== undefined ) { texture.type = data.type; }\n\t\t\t\t\tif ( data.encoding !== undefined ) { texture.encoding = data.encoding; }\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) { texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.magFilter !== undefined ) { texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.anisotropy !== undefined ) { texture.anisotropy = data.anisotropy; }\n\n\t\t\t\t\tif ( data.flipY !== undefined ) { texture.flipY = data.flipY; }\n\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) { texture.premultiplyAlpha = data.premultiplyAlpha; }\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) { texture.unpackAlignment = data.unpackAlignment; }\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) { return undefined; }\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tvar geometry, material;\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) { object.focus = data.focus; }\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.filmGauge !== undefined ) { object.filmGauge = data.filmGauge; }\n\t\t\t\t\tif ( data.filmOffset !== undefined ) { object.filmOffset = data.filmOffset; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\n\t\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\t\tvar count = data.count;\n\t\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) { object.name = data.name; }\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) { object.matrixAutoUpdate = data.matrixAutoUpdate; }\n\t\t\t\tif ( object.matrixAutoUpdate ) { object.matrix.decompose( object.position, object.quaternion, object.scale ); }\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) { object.position.fromArray( data.position ); }\n\t\t\t\tif ( data.rotation !== undefined ) { object.rotation.fromArray( data.rotation ); }\n\t\t\t\tif ( data.quaternion !== undefined ) { object.quaternion.fromArray( data.quaternion ); }\n\t\t\t\tif ( data.scale !== undefined ) { object.scale.fromArray( data.scale ); }\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) { object.castShadow = data.castShadow; }\n\t\t\tif ( data.receiveShadow !== undefined ) { object.receiveShadow = data.receiveShadow; }\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) { object.shadow.bias = data.shadow.bias; }\n\t\t\t\tif ( data.shadow.normalBias !== undefined ) { object.shadow.normalBias = data.shadow.normalBias; }\n\t\t\t\tif ( data.shadow.radius !== undefined ) { object.shadow.radius = data.shadow.radius; }\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) { object.shadow.mapSize.fromArray( data.shadow.mapSize ); }\n\t\t\t\tif ( data.shadow.camera !== undefined ) { object.shadow.camera = this.parseObject( data.shadow.camera ); }\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) { object.visible = data.visible; }\n\t\t\tif ( data.frustumCulled !== undefined ) { object.frustumCulled = data.frustumCulled; }\n\t\t\tif ( data.renderOrder !== undefined ) { object.renderOrder = data.renderOrder; }\n\t\t\tif ( data.userData !== undefined ) { object.userData = data.userData; }\n\t\t\tif ( data.layers !== undefined ) { object.layers.mask = data.layers; }\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tif ( data.autoUpdate !== undefined ) { object.autoUpdate = data.autoUpdate; }\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\t/**\n\t * @author thespite / http://clicktorelease.com/\n\t */\n\n\n\tfunction ImageBitmapLoader( manager ) {\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageBitmapLoader,\n\n\t\tisImageBitmapLoader: true,\n\n\t\tsetOptions: function setOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tfetch( url ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) { onLoad( imageBitmap ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) { onError( e ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\t{ continue; }\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\t{ continue; }\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\t{ continue; }\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\t{ return\ttrue; }\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) { return []; }\n\n\t\t\tif ( noHoles === true )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\t{ mainIdx ++; }\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\t{ mainIdx ++; }\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx$1 = 0, sLen$1 = newShapes.length; sIdx$1 < sLen$1; sIdx$1 ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx$1 ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx$1 !== s2Idx )\t{ toChange.push( { froms: sIdx$1, tos: s2Idx, hole: hIdx } ); }\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx$1 ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\t{ newShapeHoles = betterShapeHoles; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i$1 = 0, il = newShapes.length; i$1 < il; i$1 ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i$1 ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i$1 ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction Font( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size ) {\n\n\t\t\tif ( size === undefined ) { size = 100; }\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths( text, size, this.data );\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\tfunction createPaths( text, size, data ) {\n\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // workaround for IE11, see #13988\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\tvar paths = [];\n\n\t\tvar offsetX = 0, offsetY = 0;\n\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\tvar char = chars[ i ];\n\n\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\n\t\t\t} else {\n\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn paths;\n\n\t}\n\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) {\n\n\t\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar path = new ShapePath();\n\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif ( glyph.o ) {\n\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FontLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) { onLoad( font ); }\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( _context === undefined ) {\n\n\t\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn _context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\t_context = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AudioLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( skyColor );\n\t\tvar color2 = new Color().set( groundColor );\n\n\t\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tvar c0 = Math.sqrt( Math.PI );\n\t\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n\tHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: HemisphereLightProbe,\n\n\t\tisHemisphereLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction AmbientLightProbe( color, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n\tAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: AmbientLightProbe,\n\n\t\tisAmbientLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\tvar _eyeRight = new Matrix4();\n\tvar _eyeLeft = new Matrix4();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar cache = this._cache;\n\n\t\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tvar ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$2 = new Vector3();\n\tvar _quaternion$3 = new Quaternion();\n\tvar _scale$1 = new Vector3();\n\tvar _orientation = new Vector3();\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaStreamSource: function ( mediaStream ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) { this.play(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function ( delay ) {\n\n\t\t\tif ( delay === undefined ) { delay = 0; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\t\tvar source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\tthis.setDetune( this.detune );\n\t\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\t// update current progress\n\n\t\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) { value = []; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDetune: function ( value ) {\n\n\t\t\tthis.detune = value;\n\n\t\t\tif ( this.source.detune === undefined ) { return; } // only set detune when available\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDetune: function () {\n\n\t\t\treturn this.detune;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopStart: function ( value ) {\n\n\t\t\tthis.loopStart = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopEnd: function ( value ) {\n\n\t\t\tthis.loopEnd = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$3 = new Vector3();\n\tvar _quaternion$4 = new Quaternion();\n\tvar _scale$2 = new Vector3();\n\tvar _orientation$1 = new Vector3();\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) { return; }\n\n\t\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0;\n\t\t\tvar data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride;\n\n\t\t\tvar currentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// accumulate data in the 'incoming' region into 'add'\n\t\taccumulateAdditive: function ( weight ) {\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t\t// add = identity\n\n\t\t\t\tthis._setIdentity();\n\n\t\t\t}\n\n\t\t\t// add := add + incoming * weight\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t\t// accuN := accuN + additive accuN\n\n\t\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\t// Add to identity for additive\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\t\t_setAdditiveIdentityNumeric: function () {\n\n\t\t\tvar startIndex = this._addIndex * this.valueSize;\n\t\t\tvar endIndex = startIndex + this.valueSize;\n\n\t\t\tfor ( var i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\t\tthis.buffer[ i ] = 0;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_setAdditiveIdentityQuaternion: function () {\n\n\t\t\tthis._setAdditiveIdentityNumeric();\n\t\t\tthis.buffer[ this._addIndex * 4 + 3 ] = 1;\n\n\t\t},\n\n\t\t_setAdditiveIdentityOther: function () {\n\n\t\t\tvar startIndex = this._origIndex * this.valueSize;\n\t\t\tvar targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor ( var i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_slerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar workOffset = this._workIndex * stride;\n\n\t\t\t// Store result in intermediate buffer offset\n\t\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t\t// Slerp to the intermediate result\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\tvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\tvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\tvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\tvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\tvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n\t// Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\tvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n\t// Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\tvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\n\tvar _trackRe = new RegExp( ''\n\t\t+ '^'\n\t\t+ _directoryRe\n\t\t+ _nodeRe\n\t\t+ _objectRe\n\t\t+ _propertyRe\n\t\t+ '$'\n\t);\n\n\tvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) { binding.getValue( array, offset ); }\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t\t},\n\n\t\tparseTrackName: function ( trackName ) {\n\n\t\t\tvar matches = _trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t},\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) { return result; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t// DECLARE ALIAS AFTER assign prototype\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup() {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar knownObject = undefined,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tvar index = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j$1 = 0, m$1 = nBindings; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j$1 ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\t\tvar binding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j$1 ], parsedPaths[ j$1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar nCachedObjects = this.nCachedObjects_,\n\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex$1 = -- nObjects,\n\t\t\t\t\t\t\tlastObject$1 = objects[ lastIndex$1 ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject$1.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject$1;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j$1 = 0, m$1 = nBindings; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath$1 = bindings[ j$1 ];\n\n\t\t\t\t\t\t\tbindingsForPath$1[ index ] = bindingsForPath$1[ lastIndex$1 ];\n\t\t\t\t\t\t\tbindingsForPath$1.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) { return bindings[ index ]; }\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot, blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\t\tthis.blendMode = blendMode || clip.blendMode;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function () {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function () {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0; // restart clip\n\t\t\tthis._loopCount = - 1;// forget previous loops\n\t\t\tthis._startTime = null;// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function () {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function () {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function ( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function ( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function ( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function () {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function () {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function () {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function ( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function ( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function ( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer,\n\t\t\t\tnow = mixer.time,\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function () {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function () {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function () {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function () {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tfor ( var j$1 = 0, m$1 = interpolants.length; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\t\tinterpolants[ j$1 ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j$1 ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function ( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function ( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function ( deltaTime ) {\n\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar loopCount = this._loopCount;\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) { return time; }\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\n\t\t\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: AnimationMixer,\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\t\tvar bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name;\n\n\t\t\t\tvar binding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tvar actionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tvar bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\t\tvar interpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot, blendMode ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid;\n\n\t\t\tvar clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\t\tvar clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\t\tvar actionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( blendMode === undefined ) {\n\n\t\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\t{ clipObject = prototypeAction._clip; }\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) { return null; }\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor ( var i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\t\tactions[ i ].stop();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i$1 = 0; i$1 !== nBindings; ++ i$1 ) {\n\n\t\t\t\tbindings[ i$1 ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Allows you to seek to a specific time in an animation.\n\t\tsetTime: function ( timeInSeconds ) {\n\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\t\tfor ( var i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t\t}\n\n\t\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tvar ib = InterleavedBuffer.prototype.clone.call( this, data );\n\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn ib;\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tvar json = InterleavedBuffer.prototype.toJSON.call( this, data );\n\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\t\tobject.raycast( raycaster, intersects );\n\n\t\t}\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function () {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector$7 = new Vector2();\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$7.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$7.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _startP = new Vector3();\n\tvar _startEnd = new Vector3();\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t\t_startP.subVectors( point, this.start );\n\t\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\n\t\tthis.count = 0;\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector$8 = new Vector3();\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$8.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$8 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$9 = new Vector3();\n\tvar _boneMatrix = new Matrix4();\n\tvar _matrixWorldInv = new Matrix4();\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.isSkeletonHelper = true;\n\n\tSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tconst d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$a = new Vector3();\n\tvar _color1 = new Color();\n\tvar _color2 = new Color();\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) { this.material.vertexColors = true; }\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$a.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\t\tconstructor: GridHelper,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\t\tthis.geometry.copy( source.geometry );\n\t\t\tthis.material.copy( source.material );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( var i = 0; i <= radials; i ++ ) {\n\n\t\t\tvar v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tvar x = Math.sin( v ) * radius;\n\t\t\tvar z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tvar color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( var i$1 = 0; i$1 <= circles; i$1 ++ ) {\n\n\t\t\tvar color$1 = ( i$1 & 1 ) ? color1 : color2;\n\n\t\t\tvar r = radius - ( radius / circles * i$1 );\n\n\t\t\tfor ( var j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tvar v$1 = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tvar x$1 = Math.sin( v$1 ) * r;\n\t\t\t\tvar z$1 = Math.cos( v$1 ) * r;\n\n\t\t\t\tvertices.push( x$1, 0, z$1 );\n\t\t\t\tcolors.push( color$1.r, color$1.g, color$1.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv$1 = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx$1 = Math.sin( v$1 ) * r;\n\t\t\t\tz$1 = Math.cos( v$1 ) * r;\n\n\t\t\t\tvertices.push( x$1, 0, z$1 );\n\t\t\t\tcolors.push( color$1.r, color$1.g, color$1.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$5 = new Vector3();\n\tvar _v2$3 = new Vector3();\n\tvar _v3$1 = new Vector3();\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) { size = 1; }\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\t_v1$5.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$3, _v1$5 );\n\n\t\tthis.lightPlane.lookAt( _v2$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$3 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tvar _vector$b = new Vector3();\n\tvar _camera = new Camera();\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) { this.camera.updateProjectionMatrix(); }\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar pointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n\tfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t\t_vector$b.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], _vector$b.x, _vector$b.y, _vector$b.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tvar _box$3 = new Box3();\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = function ( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$3.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$3.isEmpty() ) { return; }\n\n\t\tvar min = _box$3.min;\n\t\tvar max = _box$3.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t};\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.copy = function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, color ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tcolor = color || 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) { return; }\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) { scale = 1e-8; } // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar _axis = new Vector3();\n\tvar _lineGeometry, _coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( dir === undefined ) { dir = new Vector3( 0, 0, 1 ); }\n\t\tif ( origin === undefined ) { origin = new Vector3( 0, 0, 0 ); }\n\t\tif ( length === undefined ) { length = 1; }\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tvar radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t};\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t};\n\n\tArrowHelper.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t};\n\n\tArrowHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxesHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\n\t * @author Emmett Lalish / elalish\n\t *\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t */\n\n\tvar LOD_MIN = 4;\n\tvar LOD_MAX = 8;\n\tvar SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n\t// The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\tvar EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n\tvar TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\t// The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\tvar MAX_SAMPLES = 20;\n\n\tvar ENCODINGS = {};\n\tENCODINGS[ LinearEncoding ] = 0;\n\tENCODINGS[ sRGBEncoding ] = 1;\n\tENCODINGS[ RGBEEncoding ] = 2;\n\tENCODINGS[ RGBM7Encoding ] = 3;\n\tENCODINGS[ RGBM16Encoding ] = 4;\n\tENCODINGS[ RGBDEncoding ] = 5;\n\tENCODINGS[ GammaEncoding ] = 6;\n\n\tvar _flatCamera = new OrthographicCamera();\n\tvar ref = _createPlanes();\n\tvar _lodPlanes = ref._lodPlanes;\n\tvar _sizeLods = ref._sizeLods;\n\tvar _sigmas = ref._sigmas;\n\tvar _oldTarget = null;\n\n\t// Golden Ratio\n\tvar PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar INV_PHI = 1 / PHI;\n\n\t// Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\tvar _axisDirections = [\n\t\tnew Vector3( 1, 1, 1 ),\n\t\tnew Vector3( - 1, 1, 1 ),\n\t\tnew Vector3( 1, 1, - 1 ),\n\t\tnew Vector3( - 1, 1, - 1 ),\n\t\tnew Vector3( 0, PHI, INV_PHI ),\n\t\tnew Vector3( 0, PHI, - INV_PHI ),\n\t\tnew Vector3( INV_PHI, 0, PHI ),\n\t\tnew Vector3( - INV_PHI, 0, PHI ),\n\t\tnew Vector3( PHI, INV_PHI, 0 ),\n\t\tnew Vector3( - PHI, INV_PHI, 0 ) ];\n\n\tfunction PMREMGenerator( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\tPMREMGenerator.prototype = {\n\n\t\tconstructor: PMREMGenerator,\n\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\t\tfromScene: function ( scene, sigma, near, far ) {\n\t\t\tif ( sigma === void 0 ) sigma = 0;\n\t\t\tif ( near === void 0 ) near = 0.1;\n\t\t\tif ( far === void 0 ) far = 100;\n\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\t\tif ( sigma > 0 ) {\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t\t}\n\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromEquirectangular: function ( equirectangular ) {\n\n\t\t\treturn this._fromTexture( equirectangular );\n\n\t\t},\n\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromCubemap: function ( cubemap ) {\n\n\t\t\treturn this._fromTexture( cubemap );\n\n\t\t},\n\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileCubemapShader: function () {\n\n\t\t\tif ( this._cubemapShader === null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileEquirectangularShader: function () {\n\n\t\t\tif ( this._equirectShader === null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\t\tdispose: function () {\n\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif ( this._cubemapShader !== null ) { this._cubemapShader.dispose(); }\n\t\t\tif ( this._equirectShader !== null ) { this._equirectShader.dispose(); }\n\n\t\t\tfor ( var i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// private interface\n\n\t\t_cleanup: function ( outputTarget ) {\n\n\t\t\tthis._pingPongRenderTarget.dispose();\n\t\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\t\toutputTarget.scissorTest = false;\n\t\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t\t},\n\n\t\t_fromTexture: function ( texture ) {\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets( texture );\n\t\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t_allocateTargets: function ( texture ) { // warning: null texture is valid\n\n\t\t\tvar params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false,\n\t\t\t\tstencilBuffer: false\n\t\t\t};\n\n\t\t\tvar cubeUVRenderTarget = _createRenderTarget( params );\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t_compileMaterial: function ( material ) {\n\n\t\t\tvar tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t\t},\n\n\t\t_sceneToCubeUV: function ( scene, near, far, cubeUVRenderTarget ) {\n\n\t\t\tvar fov = 90;\n\t\t\tvar aspect = 1;\n\t\t\tvar cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tvar upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\t\tvar forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tvar outputEncoding = renderer.outputEncoding;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar clearColor = renderer.getClearColor();\n\t\t\tvar clearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\n\t\t\tvar background = scene.background;\n\t\t\tif ( background && background.isColor ) {\n\n\t\t\t\tbackground.convertSRGBToLinear();\n\t\t\t\t// Convert linear to RGBE\n\t\t\t\tvar maxComponent = Math.max( background.r, background.g, background.b );\n\t\t\t\tvar fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t\t\t\tbackground = background.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\t\t\t\tvar alpha = ( fExp + 128.0 ) / 255.0;\n\t\t\t\trenderer.setClearColor( background, alpha );\n\t\t\t\tscene.background = null;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar col = i % 3;\n\t\t\t\tif ( col == 0 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.setClearColor( clearColor, clearAlpha );\n\n\t\t},\n\n\t\t_textureToCubeUV: function ( texture, cubeUVRenderTarget ) {\n\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tvar mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\t\tvar uniforms = material.uniforms;\n\n\t\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t\t}\n\n\t\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\trenderer.render( mesh, _flatCamera );\n\n\t\t},\n\n\t\t_applyPMREM: function ( cubeUVRenderTarget ) {\n\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor ( var i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\t\tvar sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\t\tvar poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\n\t\t},\n\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\t\t_blur: function ( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\t\tvar pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tlodIn,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'latitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t\tthis._halfBlur(\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tlodOut,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'longitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t},\n\n\t\t_halfBlur: function ( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar blurMaterial = this._blurMaterial;\n\n\t\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t\t}\n\n\t\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\t\tvar STANDARD_DEVIATIONS = 3;\n\n\t\t\tvar blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\t\tvar blurUniforms = blurMaterial.uniforms;\n\n\t\t\tvar pixels = _sizeLods[ lodIn ] - 1;\n\t\t\tvar radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\t\tvar sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tvar samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\t\tconsole.warn( (\"sigmaRadians, \" + sigmaRadians + \", is too large and will clip, as it requested \" + samples + \" samples when the maximum is set to \" + MAX_SAMPLES) );\n\n\t\t\t}\n\n\t\t\tvar weights = [];\n\t\t\tvar sum = 0;\n\n\t\t\tfor ( var i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\t\tvar x$1 = i / sigmaPixels;\n\t\t\t\tvar weight = Math.exp( - x$1 * x$1 / 2 );\n\t\t\t\tweights.push( weight );\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\tsum += weight;\n\n\t\t\t\t} else if ( i < samples ) {\n\n\t\t\t\t\tsum += 2 * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0; i$1 < weights.length; i$1 ++ ) {\n\n\t\t\t\tweights[ i$1 ] = weights[ i$1 ] / sum;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\t\tblurUniforms[ 'samples' ].value = samples;\n\t\t\tblurUniforms[ 'weights' ].value = weights;\n\t\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\t\tif ( poleAxis ) {\n\n\t\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\t\tvar outputSize = _sizeLods[ lodOut ];\n\t\t\tvar x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\t\tvar y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\t\trenderer.setRenderTarget( targetOut );\n\t\t\trenderer.render( blurMesh, _flatCamera );\n\n\t\t}\n\n\t};\n\n\tfunction _isLDR( texture ) {\n\n\t\tif ( texture === undefined || texture.type !== UnsignedByteType ) { return false; }\n\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n\t}\n\n\tfunction _createPlanes() {\n\n\t\tvar _lodPlanes = [];\n\t\tvar _sizeLods = [];\n\t\tvar _sigmas = [];\n\n\t\tvar lod = LOD_MAX;\n\n\t\tfor ( var i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tvar sizeLod = Math.pow( 2, lod );\n\t\t\t_sizeLods.push( sizeLod );\n\t\t\tvar sigma = 1.0 / sizeLod;\n\n\t\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t\t} else if ( i == 0 ) {\n\n\t\t\t\tsigma = 0;\n\n\t\t\t}\n\n\t\t\t_sigmas.push( sigma );\n\n\t\t\tvar texelSize = 1.0 / ( sizeLod - 1 );\n\t\t\tvar min = - texelSize / 2;\n\t\t\tvar max = 1 + texelSize / 2;\n\t\t\tvar uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\t\tvar cubeFaces = 6;\n\t\t\tvar vertices = 6;\n\t\t\tvar positionSize = 3;\n\t\t\tvar uvSize = 2;\n\t\t\tvar faceIndexSize = 1;\n\n\t\t\tvar position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\t\tvar uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\t\tvar faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\t\tfor ( var face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\t\tvar x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\t\tvar y = face > 2 ? 0 : - 1;\n\t\t\t\tvar coordinates = [\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y + 1, 0\n\t\t\t\t];\n\t\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\t\tvar fill = [ face, face, face, face, face, face ];\n\t\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t\t}\n\n\t\t\tvar planes = new BufferGeometry();\n\t\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t\t_lodPlanes.push( planes );\n\n\t\t\tif ( lod > LOD_MIN ) {\n\n\t\t\t\tlod --;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { _lodPlanes: _lodPlanes, _sizeLods: _sizeLods, _sigmas: _sigmas };\n\n\t}\n\n\tfunction _createRenderTarget( params ) {\n\n\t\tvar cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\tfunction _setViewport( target, x, y, width, height ) {\n\n\t\ttarget.viewport.set( x, y, width, height );\n\t\ttarget.scissor.set( x, y, width, height );\n\n\t}\n\n\tfunction _getBlurShader( maxSamples ) {\n\n\t\tvar weights = new Float32Array( maxSamples );\n\t\tvar poleAxis = new Vector3( 0, 1, 0 );\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'SphericalGaussianBlur',\n\n\t\t\tdefines: { 'n': maxSamples },\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'samples': { value: 1 },\n\t\t\t\t'weights': { value: weights },\n\t\t\t\t'latitudinal': { value: false },\n\t\t\t\t'dTheta': { value: 0 },\n\t\t\t\t'mipInt': { value: 0 },\n\t\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform sampler2D envMap;\\nuniform int samples;\\nuniform float weights[n];\\nuniform bool latitudinal;\\nuniform float dTheta;\\nuniform float mipInt;\\nuniform vec3 poleAxis;\\n\\n\" + (_getEncodings()) + \"\\n\\n#define ENVMAP_TYPE_CUBE_UV\\n#include <cube_uv_reflection_fragment>\\n\\nvec3 getSample(float theta, vec3 axis) {\\n\\tfloat cosTheta = cos(theta);\\n\\t// Rodrigues' axis-angle rotation\\n\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t+ cross(axis, vOutputDirection) * sin(theta)\\n\\t\\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\\n\\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\\n}\\n\\nvoid main() {\\n\\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\\n\\tif (all(equal(axis, vec3(0.0))))\\n\\t\\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\\n\\taxis = normalize(axis);\\n\\tgl_FragColor = vec4(0.0);\\n\\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\\n\\tfor (int i = 1; i < n; i++) {\\n\\t\\tif (i >= samples)\\n\\t\\t\\tbreak;\\n\\t\\tfloat theta = dTheta * float(i);\\n\\t\\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\\n\\t\\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\\n\\t}\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getEquirectShader() {\n\n\t\tvar texelSize = new Vector2( 1, 1 );\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'EquirectangularToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'texelSize': { value: texelSize },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform sampler2D envMap;\\nuniform vec2 texelSize;\\n\\n\" + (_getEncodings()) + \"\\n\\n#include <common>\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(0.0);\\n\\tvec3 outputDirection = normalize(vOutputDirection);\\n\\tvec2 uv = equirectUv( outputDirection );\\n\\tvec2 f = fract(uv / texelSize - 0.5);\\n\\tuv -= f * texelSize;\\n\\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.x += texelSize.x;\\n\\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.y += texelSize.y;\\n\\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.x -= texelSize.x;\\n\\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tvec3 tm = mix(tl, tr, f.x);\\n\\tvec3 bm = mix(bl, br, f.x);\\n\\tgl_FragColor.rgb = mix(tm, bm, f.y);\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getCubemapShader() {\n\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'CubemapToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform samplerCube envMap;\\n\\n\" + (_getEncodings()) + \"\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(0.0);\\n\\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getCommonVertexShader() {\n\n\t\treturn \"\\nprecision mediump float;\\nprecision mediump int;\\nattribute vec3 position;\\nattribute vec2 uv;\\nattribute float faceIndex;\\nvarying vec3 vOutputDirection;\\n\\n// RH coordinate system; PMREM face-indexing convention\\nvec3 getDirection(vec2 uv, float face) {\\n\\tuv = 2.0 * uv - 1.0;\\n\\tvec3 direction = vec3(uv, 1.0);\\n\\tif (face == 0.0) {\\n\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\t} else if (face == 1.0) {\\n\\t\\tdirection = direction.xzy;\\n\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\t} else if (face == 2.0) {\\n\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\t} else if (face == 3.0) {\\n\\t\\tdirection = direction.zyx;\\n\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\t} else if (face == 4.0) {\\n\\t\\tdirection = direction.xzy;\\n\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\t} else if (face == 5.0) {\\n\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\t}\\n\\treturn direction;\\n}\\n\\nvoid main() {\\n\\tvOutputDirection = getDirection(uv, faceIndex);\\n\\tgl_Position = vec4( position, 1.0 );\\n}\\n\\t\";\n\n\t}\n\n\tfunction _getEncodings() {\n\n\t\treturn \"\\nuniform int inputEncoding;\\nuniform int outputEncoding;\\n\\n#include <encodings_pars_fragment>\\n\\nvec4 inputTexelToLinear(vec4 value){\\n\\tif(inputEncoding == 0){\\n\\t\\treturn value;\\n\\t}else if(inputEncoding == 1){\\n\\t\\treturn sRGBToLinear(value);\\n\\t}else if(inputEncoding == 2){\\n\\t\\treturn RGBEToLinear(value);\\n\\t}else if(inputEncoding == 3){\\n\\t\\treturn RGBMToLinear(value, 7.0);\\n\\t}else if(inputEncoding == 4){\\n\\t\\treturn RGBMToLinear(value, 16.0);\\n\\t}else if(inputEncoding == 5){\\n\\t\\treturn RGBDToLinear(value, 256.0);\\n\\t}else{\\n\\t\\treturn GammaToLinear(value, 2.2);\\n\\t}\\n}\\n\\nvec4 linearToOutputTexel(vec4 value){\\n\\tif(outputEncoding == 0){\\n\\t\\treturn value;\\n\\t}else if(outputEncoding == 1){\\n\\t\\treturn LinearTosRGB(value);\\n\\t}else if(outputEncoding == 2){\\n\\t\\treturn LinearToRGBE(value);\\n\\t}else if(outputEncoding == 3){\\n\\t\\treturn LinearToRGBM(value, 7.0);\\n\\t}else if(outputEncoding == 4){\\n\\t\\treturn LinearToRGBM(value, 16.0);\\n\\t}else if(outputEncoding == 5){\\n\\t\\treturn LinearToRGBD(value, 256.0);\\n\\t}else{\\n\\t\\treturn LinearToGamma(value, 2.2);\\n\\t}\\n}\\n\\nvec4 envMapTexelToLinear(vec4 color) {\\n\\treturn inputTexelToLinear(color);\\n}\\n\\t\";\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\tvar LinePieces = 1;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) { materials = []; }\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tObject.assign( CurvePath.prototype, {\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from equidistant sampling along the path\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Path.prototype, {\n\n\t\tfromPoints: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\t\treturn this.setFromPoints( points );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction AxisHelper( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\treturn new AxesHelper( size );\n\n\t}\n\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tObject.assign( Loader.prototype, {\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t} );\n\n\tLoader.Handlers = {\n\n\t\tadd: function ( /* regex, loader */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t\t},\n\n\t\tget: function ( /* file */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t\t}\n\n\t};\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t\treturn this.setResourcePath( value );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\n\t} );\n\n\tFrustum.prototype.setFromMatrix = function ( m ) {\n\n\t\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\t\treturn this.setFromProjectionMatrix( m );\n\n\t};\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\tObject.assign( MathUtils, {\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\t\treturn MathUtils.floorPowerOfTwo( value );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\t\treturn MathUtils.ceilPowerOfTwo( value );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\t\t\treturn attribute.applyMatrix3( this );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\t\t\treturn attribute.applyMatrix4( this );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tarea: function () {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\t\treturn this.getArea();\n\n\t\t},\n\t\tbarycoordFromPoint: function ( point, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn this.getBarycoord( point, target );\n\n\t\t},\n\t\tmidpoint: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\t\treturn this.getMidpoint( target );\n\n\t\t},\n\t\tnormal: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn this.getNormal( target );\n\n\t\t},\n\t\tplane: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\t\treturn this.getPlane( target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle, {\n\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t\t},\n\t\tnormal: function ( a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\t\treturn this.extractPoints( divisions );\n\n\t\t},\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Geometry.prototype, {\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeLineDistances: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t},\n\t\tgetWorldRotation: function () {\n\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( Mesh.prototype, {\n\n\t\tsetDrawMode: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t},\n\n\t} );\n\n\tObject.defineProperties( Mesh.prototype, {\n\n\t\tdrawMode: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\t\treturn TrianglesDrawMode;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tSkinnedMesh.prototype.initBones = function () {\n\n\t\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n\t};\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) { this.filmGauge = filmGauge; }\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\treturn this.setAttribute( name, attribute );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t},\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\t\treturn this.deleteAttribute( name );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InstancedBufferGeometry.prototype, {\n\n\t\tmaxInstancedCount: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\t\treturn this.instanceCount;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\t\tthis.instanceCount = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Raycaster.prototype, {\n\n\t\tlinePrecision: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\t\treturn this.params.Line.threshold;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\t\tthis.params.Line.threshold = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InterleavedBuffer.prototype, {\n\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( value );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\t\tgetArrays: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t\t},\n\n\t\taddShapeList: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t\t},\n\n\t\taddShape: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\toverdraw: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t},\n\n\t\tstencilMask: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\treturn this.stencilFuncMask;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\tthis.stencilFuncMask = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t},\n\t\tanimate: function ( callback ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\t\tthis.setAnimationLoop( callback );\n\n\t\t},\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\t\tresetGLState: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\t\treturn this.state.reset();\n\n\t\t},\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t},\n\t\tsetFaceCulling: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t\t},\n\t\tallocTextureUnit: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t\t},\n\t\tsetTexture: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t\t},\n\t\tsetTexture2D: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t\t},\n\t\tsetTextureCube: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t\t},\n\t\tgetActiveMipMapLevel: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\t\treturn this.getActiveMipmapLevel();\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\t\treturn this.getContext();\n\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\t\treturn this.xr;\n\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\t\treturn 1.0;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* cullFace */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\t\treturn new WebGLCubeRenderTarget( width, options );\n\n\t}\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Audio.prototype, {\n\n\t\tload: {\n\t\t\tvalue: function ( file ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\t\tvar scope = this;\n\t\t\t\tvar audioLoader = new AudioLoader();\n\t\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t\t} );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t},\n\t\tstartTime: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n\t}\n\n\t//\n\n\tfunction JSONLoader() {\n\n\t\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n\t}\n\n\t//\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tattach: function ( /* child, scene, parent */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction LensFlare() {\n\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n\t}\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\t\trevision: REVISION,\n\t\t} } ) );\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeGeometry = BoxGeometry;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.Face3 = Face3;\n\texports.Face4 = Face4;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GammaEncoding = GammaEncoding;\n\texports.Geometry = Geometry;\n\texports.GeometryUtils = GeometryUtils;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.LightShadow = LightShadow;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.Spline = Spline;\n\texports.SplineCurve = SplineCurve;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app2.js","app/js2/2d/render.js","app/js2/2d/somed3.js","app/js2/3d/render3d.js","app/js2/cube.js","app/js2/main.js","node_modules/d3-array/dist/d3-array.js","node_modules/d3-axis/dist/d3-axis.js","node_modules/d3-brush/dist/d3-brush.js","node_modules/d3-chord/dist/d3-chord.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-contour/dist/d3-contour.js","node_modules/d3-dispatch/dist/d3-dispatch.js","node_modules/d3-drag/dist/d3-drag.js","node_modules/d3-dsv/dist/d3-dsv.js","node_modules/d3-ease/dist/d3-ease.js","node_modules/d3-fetch/dist/d3-fetch.js","node_modules/d3-force/dist/d3-force.js","node_modules/d3-format/dist/d3-format.js","node_modules/d3-geo/dist/d3-geo.js","node_modules/d3-hierarchy/dist/d3-hierarchy.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-path/dist/d3-path.js","node_modules/d3-polygon/dist/d3-polygon.js","node_modules/d3-quadtree/dist/d3-quadtree.js","node_modules/d3-random/dist/d3-random.js","node_modules/d3-scale-chromatic/dist/d3-scale-chromatic.js","node_modules/d3-scale/dist/d3-scale.js","node_modules/d3-selection/dist/d3-selection.js","node_modules/d3-shape/dist/d3-shape.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/d3-timer/dist/d3-timer.js","node_modules/d3-transition/dist/d3-transition.js","node_modules/d3-voronoi/dist/d3-voronoi.js","node_modules/d3-zoom/dist/d3-zoom.js","node_modules/d3/dist/d3.node.js","node_modules/gl-matrix/cjs/common.js","node_modules/gl-matrix/cjs/index.js","node_modules/gl-matrix/cjs/mat2.js","node_modules/gl-matrix/cjs/mat2d.js","node_modules/gl-matrix/cjs/mat3.js","node_modules/gl-matrix/cjs/mat4.js","node_modules/gl-matrix/cjs/quat.js","node_modules/gl-matrix/cjs/quat2.js","node_modules/gl-matrix/cjs/vec2.js","node_modules/gl-matrix/cjs/vec3.js","node_modules/gl-matrix/cjs/vec4.js","node_modules/three/build/three.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","render","_d","_somed","cube","forward","color","rotate","reverse","rotateReverse","rotateFn","window","addEventListener","key","document","querySelectorAll","forEach","d","ev","faceColors","getFaceColors","face","querySelector","concat","svg","drawCube","clientWidth","clientHeight","console","log","append","update","clickMap","white","red","green","blue","yellow","orange","keys","k","select","on","g","event","preventDefault","./somed3","d3","2","_typeof","obj","Symbol","iterator","constructor","prototype","width","height","inData","dim","min","create","attr","cdim","pieceGroup","selectAll","data","buildData","join","path","rect","assign","node","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","_interopRequireWildcard","WeakMap","data2","iter","values","y","x","push","next","3","render3d","THREE","divCube","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","vertexColors","FaceColors","group","Group","j","clone","faces","setRGB","Math","random","Mesh","position","add","z","animate","requestAnimationFrame","rotation","three","4","Cube","_glMatrix","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","toString","slice","name","from","test","_unsupportedIterableToArray","F","s","done","_e","TypeError","err","normalCompletion","didErr","step","_e2","arr","len","arr2","colorMap","w","direction","vec3","fromValues","adjacent","b","#","COLORS","FACES","ColorFace","vector","transform","this","parentTransform","Piece","colorFaces","colors","split","map","mat4","fromTranslation","csv","_this3","dsvFormat","parse","pieces","Map","v","faceRotations","dir","cw","fromRotation","PI","tr1","scale","tr2","rota","mul","transformMat4","adjacentCenter","max","ret","_this","pos","dot","m","position2","getColors","getFaceColor","_this2","cf","_step","_iterator","_step2","_iterator2","_step3","_iterator3","invert","getByPosition","vec","_step4","_iterator4","equals","getFace","_step5","_iterator5","getFacePiecePositions","faceColor","a1","a2","a3","_i","_a","_step6","c1","_iterator6","_step7","c2","_iterator7","c3","_this4","gl-matrix","5","_cube","_render","_render3d","Promise","resolve","reject","then","vh","innerHeight","documentElement","style","setProperty","text","./2d/render","./3d/render3d","./cube","6","global","factory","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pair","number","variance","valueof","delta","mean","sum","isNaN","deviation","array","sqrt","extent","constant","identity","range","start","stop","arguments","ceil","e10","e5","e2","tickIncrement","count","power","floor","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","quantile","i0","value0","transpose","matrix","row","bisect","cross","values0","values1","reduce","i1","n0","n1","descending","histogram","domain","threshold","xz","x0","x1","tz","shift","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","ticks","isFinite","zip","define","amd","7","translateX","translateY","center","offset","bandwidth","round","entering","__axis","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","context","apply","format","spacing","range0","range1","copy","selection","tick","order","tickExit","exit","tickEnter","enter","line","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","8","d3Dispatch","d3Drag","d3Interpolate","d3Selection","d3Transition","BrushEvent","target","type","nopropagation","stopImmediatePropagation","noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","number1","number2","toucher","identifier","touch","touches","X","handles","input","output","xy","Y","XY","cursors","overlay","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","ctrlKey","button","defaultExtent","ownerSVGElement","hasAttribute","viewBox","baseVal","defaultTouchable","navigator","maxTouchPoints","local","__brush","empty","brush$1","touchending","touchable","listeners","dispatch","handleSize","brush","property","initialize","handle","redraw","started","touchmoved","touchended","emitter","that","args","clean","Emitter","state","active","w0","w1","e0","e1","s0","s1","moving","lockX","lockY","__data__","mode","metaKey","altKey","signX","signY","W","N","E","S","dx","dy","shifting","shiftKey","pointer","changedTouches","mouse","point0","point","emit","beforestart","moved","ended","view","keydowned","keyupped","dragDisable","interrupt","point1","move","clearTimeout","setTimeout","dragEnable","end","keyCode","tween","selection0","selection1","interpolate","clear","starting","customEvent","keyModifiers","brushSelection","brushX","brushY","self","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition","9","d3Array","d3Path","cos","sin","pi","halfPi","tau","compareValue","source","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","chord","padAngle","sortGroups","sortSubgroups","sortChords","groupSums","groupIndex","subgroupIndex","chords","groups","subgroups","di","dj","a0","index","subindex","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","moveTo","arc","quadraticCurveTo","closePath","d3-array","d3-path","10","object","createObject","setObject","createMap","setMap","map$$1","Set","entries","size","proto","nest","sortValues","rollup","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","sortKey","11","extend","parent","definition","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","channels","displayable","formatHsl","brighter","darker","deg2rad","rad2deg","t1","t2","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","A","B","C","D","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh","lch","12","contains","ring","hole","ringContains","yi","pj","yj","segmentContains","q","collinear","noop","cases","contours","smooth","smoothLinear","contour","polygons","holes","callback","t0","t3","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","area","polygon","coordinates","v0","xt","yt","v1","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","contourDensity","weight","density","Float32Array","wi","transformPolygon","transformRing","transformPoint","resize","cellSize","13","Dispatch","parseTypenames","typenames","types","indexOf","typename","T","14","nodrag","root","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","defaultContainer","defaultSubject","drag","mousedownx","mousedowny","mousemoving","container","gestures","clickDistance2","mousedowned","touchstarted","gesture","mousemoved","mouseupped","clientX","clientY","sublisteners","p0","clickDistance","15","EOL","EOF","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","I","eof","eol","token","replace","preformatBody","formatValue","formatRow","Date","convert","customConverter","formatBody","formatRows","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","csvFormatRow","csvFormatValue","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsvFormatRow","tsvFormatValue","fixtz","getHours","autoType","match","16","quadInOut","cubicInOut","polyIn","custom","exponent","polyOut","polyInOut","sinInOut","expInOut","circleInOut","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","easeBack","easeBackIn","easeBackInOut","easeBackOut","easeBounce","easeBounceIn","easeBounceInOut","easeBounceOut","easeCircle","easeCircleIn","easeCircleInOut","easeCircleOut","easeCubic","easeCubicIn","easeCubicInOut","easeCubicOut","easeElastic","easeElasticIn","easeElasticInOut","easeElasticOut","easeExp","easeExpIn","easeExpInOut","easeExpOut","easeLinear","easePoly","easePolyIn","easePolyInOut","easePolyOut","easeQuad","easeQuadIn","easeQuadInOut","easeQuadOut","easeSin","easeSinIn","easeSinInOut","easeSinOut","17","d3Dsv","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","init","fetch","dsvParse","undefined","responseJson","json","parser","text$$1","DOMParser","parseFromString","xml","html","image","Image","onerror","onload","src","d3-dsv","18","d3Quadtree","d3Collection","d3Timer","jiggle","vx","vy","find","nodeById","nodeId","x$1","y$1","initialAngle","forceCenter","nodes","force","sx","sy","forceCollide","radii","strength","iterations","tree","ri","ri2","quadtree","visitAfter","prepare","visit","quad","y0","y1","rj","forceLink","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","Infinity","theta2","accumulate","x2","distanceMin","distanceMax","theta","forceRadial","radiuses","forceSimulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","timer","fx","fy","initializeNodes","angle","initializeForce","restart","d2","closest","forceX","forceY","yz","d3-collection","d3-quadtree","d3-timer","19","formatDecimal","toExponential","coefficient","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","formatRounded","formatTypes","%","toFixed","toPrecision","toUpperCase","locale","prefixes","formatLocale","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","formatPrefix","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","20","adder","Adder","reset","temp","valueOf","bv","av","epsilon","quarterPi","degrees","radians","atan","exp","acos","haversin","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","cartesianNormalizeInPlace","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","ranges","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","lambda00$2","phi00$2","z0","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","pointEqual","Intersection","points","other","entry","clipRejoin","segments","compareIntersection","startInside","clip","segment","p1","current","isSubject","longitude","polygonContains","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","q1","c0","v00","point2","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","b1","polygonInside","cleanInside","ax","ay","lambda0$2","sinPhi0$1","cosPhi0$1","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","x00","y00","x0$1","y0$1","areaSum$1","areaRingSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","areaPointFirst$1","areaPoint$1","x00$1","y00$1","x0$3","y0$3","x0$2","y0$2","boundsStream$1","bounds","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lineTo","lengthRing","x00$2","y00$2","x0$4","y0$4","lengthSum$1","lengthStream$1","lengthPointFirst$1","lengthPoint$1","PathString","_string","circle$1","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","translate","fitExtent","fitSize","fitWidth","fitHeight","_circle","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","resampleNone","transformRadians","scaleTranslate","scaleTranslateRotate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cacheStream","preclip","postclip","recenter","transformRotate","clipAngle","reflectX","reflectY","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","equirectangularRaw","conicEquidistantRaw","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","feature","deltaMax","geoCentroid","geoCircle","circle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoContains","geoDistance","geoEqualEarth","geoEqualEarthRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","sa","tx","ty","kx","ky","geoInterpolate","cy1","sy1","kx0","ky0","kx1","ky1","geoLength","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoPath","projectionStream","contextStream","measure","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","21","defaultSeparation","meanXReduce","maxYReduce","children","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","enclose","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r1","r2","x21","y21","r21","x3","y3","r3","b2","b3","d1","xa","xb","ya","yb","place","intersects","score","Node$1","previous","packEnclose","aa","sj","sk","pack","optional","required","constantZero","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","squarify","resquarify","_squarify","cluster","separation","nodeSize","previousNode","meanX","maxY","leafLeft","leafRight","packSiblings","partition","positionNode","stratify","nodeKey","nodeByKey","treeRoot","firstWalk","secondWalk","sizeNode","bottom","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingOuter","treemapBinary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","treemapResquarify","treemapSliceDice","treemapSquarify","22","d3Color","basis","v2","v3","basis$1","basisClosed","linear","hue","gamma","nogamma","exponential","rgbGamma","rgbSpline","spline","rgbBasis","rgbBasisClosed","numberArray","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","setTime","reA","reB","string","am","bm","bs","lastIndex","one","cssNode","cssRoot","cssView","svgNode","skewX","scaleX","scaleY","decompose","interpolateTransform","pxComma","pxParen","degParen","interpolateTransformCss","createElement","defaultView","getComputedStyle","getPropertyValue","removeChild","interpolateTransformSvg","createElementNS","setAttribute","consolidate","rho","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateCubehelix","interpolateCubehelixLong","interpolateDate","interpolateDiscrete","interpolateHcl","interpolateHclLong","interpolateHsl","interpolateHslLong","interpolateHue","interpolateLab","interpolateNumber","interpolateNumberArray","interpolateObject","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateRound","interpolateString","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","duration","piecewise","quantize","interpolator","samples","d3-color","23","tauEpsilon","Path","_x0","_y0","_x1","_y1","bezierCurveTo","arcTo","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","da","24","lexicographicOrder","computeUpperHullIndexes","polygonArea","polygonCentroid","inside","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","polygonLength","perimeter","25","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","Quadtree","addAll","leaf_copy","treeProto","cover","quads","retainer","removeAll","26","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","27","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp","scheme","BrBG","scheme$1","PRGn","scheme$2","PiYG","scheme$3","PuOr","scheme$4","RdBu","scheme$5","RdGy","scheme$6","RdYlBu","scheme$7","RdYlGn","scheme$8","Spectral","scheme$9","BuGn","scheme$a","BuPu","scheme$b","GnBu","scheme$c","OrRd","scheme$d","PuBuGn","scheme$e","PuBu","scheme$f","PuRd","scheme$g","RdPu","scheme$h","YlGnBu","scheme$i","YlGn","scheme$j","YlOrBr","scheme$k","YlOrRd","scheme$l","Blues","scheme$m","Greens","scheme$n","Greys","scheme$o","Purples","scheme$p","Reds","scheme$q","Oranges","warm","cool","c$1","pi_1_3","pi_2_3","ramp$1","viridis","magma","inferno","plasma","interpolateBlues","interpolateBrBG","interpolateBuGn","interpolateBuPu","interpolateCividis","interpolateCool","interpolateCubehelixDefault","interpolateGnBu","interpolateGreens","interpolateGreys","interpolateInferno","interpolateMagma","interpolateOrRd","interpolateOranges","interpolatePRGn","interpolatePiYG","interpolatePlasma","interpolatePuBu","interpolatePuBuGn","interpolatePuOr","interpolatePuRd","interpolatePurples","interpolateRainbow","ts","interpolateRdBu","interpolateRdGy","interpolateRdPu","interpolateRdYlBu","interpolateRdYlGn","interpolateReds","interpolateSinebow","interpolateSpectral","interpolateTurbo","interpolateViridis","interpolateWarm","interpolateYlGn","interpolateYlGnBu","interpolateYlOrBr","interpolateYlOrRd","schemeAccent","schemeBlues","schemeBrBG","schemeBuGn","schemeBuPu","schemeCategory10","schemeDark2","schemeGnBu","schemeGreens","schemeGreys","schemeOrRd","schemeOranges","schemePRGn","schemePaired","schemePastel1","schemePastel2","schemePiYG","schemePuBu","schemePuBuGn","schemePuOr","schemePuRd","schemePurples","schemeRdBu","schemeRdGy","schemeRdPu","schemeRdYlBu","schemeRdYlGn","schemeReds","schemeSet1","schemeSet2","schemeSet3","schemeSpectral","schemeTableau10","schemeYlGn","schemeYlGnBu","schemeYlOrBr","schemeYlOrRd","28","d3Format","d3Time","d3TimeFormat","initRange","initInterpolator","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","pointish","unit","normalize","clamper","bimap","d0","polymap","clamp","untransform","continuous","linearish","nice","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","transformSymlog","log1p","transformSymexp","expm1","symlogish","transformPow","transformSqrt","transformSquare","powish","number$1","calendar","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","durationSecond","durationMinute","durationHour","durationDay","tickInterval","every","transformer$1","k10","copy$1","sequentialPow","transformer$2","k21","divergingPow","scaleBand","scalePoint","scaleIdentity","identity$1","scaleLinear","scaleLog","scaleSymlog","symlog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","invertExtent","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","scaleSequential","sequential","scaleSequentialLog","sequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","sequentialSymlog","scaleSequentialQuantile","sequentialQuantile","scaleDiverging","diverging","scaleDivergingLog","divergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","divergingSymlog","d3-format","d3-time","d3-time-format","29","xhtml","namespaces","xlink","xmlns","namespace","space","creatorInherit","ownerDocument","uri","namespaceURI","creatorFixed","fullname","creator","none","selector","selectorAll","matcher","matches","sparse","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","mouseenter","mouseleave","Selection","parents","_groups","_parents","subnode","subgroup","bind","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","classed","before","deep","nextId","Local","sourceEvent","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","top","clientTop","clientPoint","30","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","dx0","dy0","dx1","dy1","Linear","curveLinear","defined","curve","defined0","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","curveHorizontal","curveVertical","curveRadial$1","p2","p3","draw","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","bundle","point$1","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","series","none$1","stackValue","appearance","peaks","peak","vi","vj","_t0","px","py","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","bx","by","kc","lc","curveBasis","curveBasisClosed","curveBasisOpen","curveBundle","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","linkHorizontal","linkRadial","linkVertical","pie","arcs","pa","radialArea","radialLine","stack","oz","kz","sz","sij","ki","si","stackOffsetDiverging","yn","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAppearance","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","31","localDate","H","L","setFullYear","utcDate","setUTCFullYear","newDate","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseQuarter","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","utcMonday","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","dow","utcSunday","utcThursday","timeParse","formatIso","toISOString","parseIso","isoFormat","isoParse","timeFormatDefaultLocale","timeFormatLocale","32","newInterval","floori","offseti","field","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeDays","timeFriday","timeFridays","timeHours","timeInterval","timeMilliseconds","timeMinutes","timeMondays","timeMonths","timeSaturday","timeSaturdays","timeSeconds","timeSundays","timeThursdays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeWeeks","timeYears","utcMilliseconds","utcSeconds","utcWeeks","33","taskHead","taskTail","frame","timeout","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","clearNow","Timer","_call","_time","delay","timerFlush","wake","sleep","nap","poke","clearInterval","setInterval","total","elapsed","34","d3Ease","emptyOn","emptyTween","schedule","timing","schedules","__transition","ease","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","styleInterpolate","styleTween","textInterpolate","textTween","Transition","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","removeFunction","cancel","defaultTiming","d3-ease","35","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","after","grandpa","uncle","sibling","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2","ha","hc","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","triangles","_found","voronoi","x$$1","y$$1","36","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","__zoom","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultConstrain","translateExtent","zoom","touchstarting","constrain","wheelDelta","scaleExtent","wheeled","dblclicked","__zooming","Gesture","taps","wheel","wheelidled","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","k0","translateBy","translateTo","zoomIdentity","zoomTransform","37","d3Axis","d3Brush","d3Chord","d3Contour","d3Fetch","d3Force","d3Geo","d3Hierarchy","d3Polygon","d3Random","d3Scale","d3ScaleChromatic","d3Shape","d3Voronoi","d3Zoom","enumerable","version","d3-axis","d3-brush","d3-chord","d3-contour","d3-fetch","d3-force","d3-geo","d3-hierarchy","d3-polygon","d3-random","d3-scale","d3-scale-chromatic","d3-shape","d3-voronoi","d3-zoom","38","setMatrixArrayType","ARRAY_TYPE","toRadian","degree","RANDOM","EPSILON","hypot","39","vec4","vec2","quat2","quat","mat3","mat2d","mat2","glMatrix","./common.js","./mat2.js","./mat2d.js","./mat3.js","./mat4.js","./quat.js","./quat2.js","./vec2.js","./vec3.js","./vec4.js","40","m00","m01","m10","m11","det","adjoint","multiply","rad","fromScaling","str","frob","LDU","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","sub","41","ac","ad","atx","aty","a4","a5","b4","b5","42","fromMat4","m02","m12","m20","m21","m22","a02","a12","a20","a21","a22","b01","b11","b21","fromMat2d","fromQuat","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b02","b03","b04","b05","b06","b07","b08","b09","b10","a6","a7","a8","b6","b7","b8","b12","b20","b22","43","m03","m13","m23","m30","m31","m32","m33","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bz","bw","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","near","far","rl","tb","nf","perspective","fovy","aspect","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","up","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","44","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","ln","slerp","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fromEuler","halfToRad","setAxes","sqlerp","rotationTo","sqrLen","squaredLength","lerp","et","omega","cosom","sinom","scale0","scale1","fRoot","fTrace","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","45","dq","w2","fromRotationTranslationValues","outer","getDual","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","qx","qy","qz","qw","rotateByQuatPrepend","rotateAroundAxis","axisLength","mt","sqlen","a_dot_b","setReal","getReal","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","46","divide","scaleAndAdd","squaredDistance","negate","transformMat2","transformMat2d","transformMat3","sinC","cosC","mag","cosine","sqrDist","dist","div","stride","fn","arg","47","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformQuat","uvx","uvy","uvz","uuvx","uuvy","uuvz","mag1","mag2","48","G","J","v4","ix","iy","iz","iw","49","EventDispatcher","isInteger","nextKey","_listeners","hasEventListener","listenerArray","_lut","_canvas","MathUtils","DEG2RAD","RAD2DEG","generateUUID","euclideanModulo","mapLinear","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degToRad","radToDeg","isPowerOfTwo","ceilPowerOfTwo","floorPowerOfTwo","setQuaternionFromProperEuler","c13","s13","c1_3","s1_3","c3_1","s3_1","warn","Vector2","Matrix3","elements","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addVectors","addScalar","addScaledVector","subVectors","subScalar","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","lengthSq","manhattanLength","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","lerpVectors","fromArray","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","b23","b31","b32","b33","getInverse","throwOnDegenerate","t11","t12","t13","detInv","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","ImageUtils","getDataURL","HTMLCanvasElement","canvas","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","Quaternion","_z","_w","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","images","url","dispose","transformUv","uv","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getZ","getW","isWebGLRenderTarget","isWebGLMultisampleRenderTarget","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","sqrSin","tDir","multiplyQuaternionsFlat","_onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","isEuler","setFromAxisAngle","halfAngle","setFromRotationMatrix","s$1","s$2","s$3","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","_vector","Vector3","_quaternion","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyNormalMatrix","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","projectOnVector","denominator","projectOnPlane","planeNormal","setFromSpherical","setFromSphericalCoords","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","_v1","_m1","Matrix4","_zero","_one","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","makeBasis","extractRotation","scaleZ","makeRotationFromEuler","af","bf","ce","de","df","ce$1","cf$1","de$1","df$1","ae$1","af$1","be$1","bf$1","bc","bd","ac$1","ad$1","bc$1","bd$1","makeRotationFromQuaternion","a24","a34","a41","a42","a43","a44","b24","b34","b41","b42","b43","b44","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","invSX","invSY","invSZ","makePerspective","makeOrthographic","_matrix","_quaternion$1","Euler","DefaultOrder","_order","Layers","mask","RotationOrders","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$1","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","DefaultUp","configurable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","background","environment","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","translateOnAxis","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateParents","updateChildren","materials","shapes","serialize","library","element","isInstancedMesh","instanceMatrix","isMesh","isLine","isPoints","parameters","shape","uuids","i$1","l$1","i$2","extractFromCache","shapes$1","recursive","isScene","_points","_vector$1","_box","Box3","_v0","_v1$2","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","satForAxes","axes","extents","isBox3","setFromArray","minX","minY","minZ","maxX","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","expandByVector","expandByScalar","boundingBox","computeBoundingBox","union","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","distanceToPoint","getBoundingSphere","_box$1","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","_vector$2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","extDet","segExtent","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Face3","materialIndex","vertexNormals","isColor","setHex","setStyle","setHSL","handleAlpha","parseFloat","components","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","normalized","NAMES","il$1","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","isMaterial","onBeforeCompile","customProgramCacheKey","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","usage","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float64BufferAttribute","Float64Array","DirectGeometry","vertices","normals","uvs","uvs2","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","arrayMax","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","vertexUvs$1","morphTarget","j$1","morphNormal","_bufferGeometryId","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","drawRange","isBufferGeometry","getIndex","setIndex","deleteAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","positions","lineDistances","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","attribute$1","attribute$2","attribute$3","lineDistancesNeedUpdate","attribute$4","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","il$2","morphAttribute$1","jl","computeFaceNormals","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","vA","vB","vC","normalizeNormals","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","indices","array2","geometry2","newAttribute","name$1","morphArray","newAttribute$1","key$1","attributeData","hasMorphAttributes","key$2","attributeArray","attributeData$1","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","updateMorphTargets","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","isSkinnedMesh","boneTransform","morphTargetDictionary","ml","groupMaterial","faceIndex","a$1","b$1","group$1","groupMaterial$1","jl$1","i$3","il$3","isMultiMaterial","fl","faceMaterial","fvA","fvB","fvC","uvs_f","_geometryId","_m1$3","_obj$1","_offset$1","Geometry","fromBufferGeometry","scope","addFace","areaWeighted","vl","f$1","fl$1","face$1","v$1","vl$1","f$2","fl$2","face$2","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","faceNormal$1","vertexNormals$1","f$3","fl$3","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","j$2","jl$2","uvsCopy","kl","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","newUvs1","newUvs2","uvs1","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","i$4","il$4","i$5","il$5","j$3","jl$3","srcVertexNormal","destVertexNormal","j$4","jl$4","i$6","il$6","i$7","il$7","i$8","il$8","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","__proto__","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy$1","ix$1","cloneUniforms","mergeUniforms","uniforms","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Camera","focus","filmGauge","filmOffset","updateProjectionMatrix","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","stencil","WebGLCubeRenderTarget","dummy","DataTexture","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","fromEquirectangularTexture","shader","tEquirect","isDataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","UniformsLib","common","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","createBuffer","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","toneMapping","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","buffer$1","type$1","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","array$1","previousAttribute","_bufferGeometry","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","MAX_SAFE_INTEGER","morphInfluencesSum","influence$1","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","physical","transparency","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","getShaderParameter","getShaderInfoLog","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","prefixVertex","prefixFragment","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","shaderName","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","cachedUniforms","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","nClipPlanes","nClipIntersection","isMeshStandardMaterial","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","shaderobject","getShaderObject","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","onSceneDispose","cameras","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","normalBias","mapSize","isSpotLight","uniforms$1","penumbra","shadow$1","shadowUniforms$1","isRectAreaLight","uniforms$2","isPointLight","uniforms$3","shadow$2","shadowUniforms$2","isHemisphereLight","uniforms$4","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","depthMaterial","depthMaterial$1","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","pars$1","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","100","101","102","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","mipmapImage","mipmap$2","setTextureCubeDynamic","wrappingToGL","1000","1001","1002","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","samples$1","glInternalFormat$1","samples$2","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","WebXRController","_targetRay","_grip","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","disconnect","setFramebuffer","animation","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","inputSource$1","controller$1","getController","getTargetRaySpace","getControllerGrip","getGripSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","sortObjects","toneMappingExposure","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","rangeMin","rangeMax","message","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","projectObject","isGroup","isLOD","isImmediateRenderObject","geometry$1","material$1","renderObjects","isArrayCamera","camera2","renderObjectImmediate","materialProperties","lightsStateVersion","programCacheKey","programChange","numSupportedMorphTargets","numSupportedMorphNormals","needsLights","materialNeedsLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","ltc_1","LTC_1","ltc_2","LTC_2","opaqueObjects","transparentObjects","_webglFramebuffer","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","WebGL1Renderer","FogExp2","Fog","InterleavedBuffer","inputPose","gripPose","targetRay","grip","getPose","targetRaySpace","gripSpace","isInterleavedBuffer","arrayBuffers","_uuid","ib","_geometry","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","basePosition","skinIndex","skinWeight","_v1$4","_v2$2","LOD","_currentLevel","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","addLevel","getCurrentLevel","getObjectForDistance","calculateInverses","normalizeSkinWeights","boneIndex","boneInverses","_offsetMatrix","_identityMatrix","Skeleton","Bone","bone","bone$1","isBone","getBoneByName","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","linecap","linejoin","getMatrixAt","raycastTimes","instanceId","setMatrixAt","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","lineDistances$1","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distance$1","nbVertices","distance$2","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge1","edge2","vertex$1","ol","edge1$1","edge2$1","key$3","e$1","position$1","l$2","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","EPS","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","applyRadius","uvA","uvB","uvC","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","TorusBufferGeometry","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","invSize","hasHoles","outerLen","outerNode","linkedList","prev","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","middleInside","q2","o1","o2","o3","o4","onSegment","num","an","bp","ShapeUtils","isClockWise","pts","triangulateShape","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","ahole","h$1","hl$1","ahole$1","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","h$2","hl$2","ahole$2","k$1","bs$1","vert","h$3","hl$3","ahole$3","vert$1","vert$2","vert$3","t$1","z$1","bs$2","vert$4","h$4","hl$4","ahole$4","vert$5","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","face$3","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","thetaSegments","phiSegments","RingBufferGeometry","radiusStep","thetaSegmentLevel","segment$1","LatheGeometry","LatheBufferGeometry","inverseSegments","base$1","ShapeGeometry","ShapeBufferGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","shapeHole$1","l$3","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","x$2","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","referenceValue","interpolant","createInterpolant","evaluate","resultBuffer","numTimes","valueStart","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","parseKeyframeTrack","trackType","typeName","getTrackTypeForValueTypeName","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","giveUpAt$1","beforeStart_","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","readOffset$1","writeOffset$1","TypedKeyframeTrack","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","morphTargetNames","morphTargetName","m$1","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setPath","setResourcePath","setRequestHeader","loading","FileLoader","AnimationLoader","CompressedTextureLoader","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","initCatmullRom","initNonuniformCatmullRom","dt0","dt1","dt2","calc","cached","request","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","responseType","Blob","header","XMLHttpRequest","open","callbacks","callback$1","withCredentials","overrideMimeType","send","setResponseType","setWithCredentials","setMimeType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","texData","onImageLoad","onImageError","substr","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","pt2","getTangentAt","MAX_VALUE","theta$1","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","LightProbe","MaterialLoader","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","scaleW","scaleH","isDirectionalLightShadow","isSphericalHarmonics3","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","TYPED_ARRAYS","typedArray","bufferAttribute","typedArray$1","bufferAttribute$1","drawcalls","offsets","ObjectLoader","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","geometryShapes","bufferGeometryLoader","details","shape$1","loadImage","currentUrl","path$1","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","ImageBitmapLoader","createImageBitmap","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","_cachedOutline","familyName","FontLoader","isImageBitmapLoader","setOptions","res","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","toChange","sIdx","sLen","sIdx$1","sLen$1","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","createPaths","AudioContext","webkitAudioContext","AudioLoader","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","Clock","autoStart","oldTime","elapsedTime","running","xmin","xmax","eyeSepHalf","eyeSepOnProjection","ymax","getElapsedTime","getDelta","newTime","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","Audio","getInput","autoplay","detune","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","filters","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_reservedRe","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_initMemoryManager","_accuIndex","Uniform","InstancedInterleavedBuffer","Raycaster","PointCloud","ascSort","intersectObject","Spherical","Cylindrical","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","lastIndex$1","lastObject$1","bindingsForPath$1","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","makeSafe","setFromCartesianCoords","_vector$7","Box2","_startP","_startEnd","Line3","ImmediateRenderObject","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_vector$8","SpotLightHelper","cone","coneLength","coneWidth","_vector$9","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","isSkeletonHelper","_vector$a","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","color$1","_v1$5","_v2$3","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$b","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_lineGeometry","_coneGeometry","_axis","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","setColor","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","ENCODINGS","3000","3001","3002","3004","3005","3006","3007","_flatCamera","ref","_lodPlanes","_sizeLods","_sigmas","lod","sizeLod","texelSize","positionSize","uvSize","faceIndexSize","_createPlanes","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","weights","poleAxis","_pingPongRenderTarget","_blurMaterial","latitudinal","dTheta","mipInt","inputEncoding","_equirectShader","_cubemapShader","_compileMaterial","_isLDR","_createRenderTarget","cubeUVRenderTarget","_setViewport","_getEquirectShader","_getCubemapShader","ClosedSplineCurve3","SplineCurve3","Spline","fromScene","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","cubemap","compileCubemapShader","compileEquirectangularShader","outputTarget","_textureToCubeUV","tmpMesh","cubeCamera","upSign","forwardSign","maxComponent","fExp","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","outputSize","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","Handlers","setTexturePath","isIntersectionBox","isIntersectionSphere","setFromMatrix","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","applyMatrix","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","revision","ACESFilmicToneMapping","AddEquation","AddOperation","AdditiveAnimationBlendMode","AdditiveBlending","AlphaFormat","AlwaysDepth","AlwaysStencilFunc","AxisHelper","BackSide","BasicDepthPacking","BasicShadowMap","BinaryTextureLoader","BoundingBoxHelper","ByteType","CanvasRenderer","CineonToneMapping","CubeGeometry","CullFaceBack","CullFaceFront","CullFaceFrontBack","CullFaceNone","CustomBlending","CustomToneMapping","DecrementStencilOp","DecrementWrapStencilOp","DepthFormat","DepthStencilFormat","DoubleSide","DstAlphaFactor","DstColorFactor","DynamicBufferAttribute","DynamicCopyUsage","DynamicDrawUsage","DynamicReadUsage","EdgesHelper","EqualDepth","EqualStencilFunc","Face4","FlatShading","Float32Attribute","Float64Attribute","FloatType","FrontFaceDirectionCCW","FrontFaceDirectionCW","FrontSide","GammaEncoding","GreaterDepth","GreaterEqualDepth","GreaterEqualStencilFunc","GreaterStencilFunc","HalfFloatType","IncrementStencilOp","IncrementWrapStencilOp","Int16Attribute","Int32Attribute","Int8Attribute","IntType","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","InvertStencilOp","JSONLoader","KeepStencilOp","LensFlare","LessDepth","LessEqualDepth","LessEqualStencilFunc","LessStencilFunc","LinePieces","LineStrip","LinearEncoding","LinearMipMapLinearFilter","LinearMipMapNearestFilter","LinearToneMapping","LogLuvEncoding","LoopOnce","LoopPingPong","LoopRepeat","LuminanceAlphaFormat","LuminanceFormat","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","MaxEquation","MeshFaceMaterial","MinEquation","MixOperation","MultiMaterial","MultiplyBlending","MultiplyOperation","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverDepth","NeverStencilFunc","NoBlending","NoColors","NoToneMapping","NormalAnimationBlendMode","NormalBlending","NotEqualDepth","NotEqualStencilFunc","ObjectSpaceNormalMap","OneFactor","OneMinusDstAlphaFactor","OneMinusDstColorFactor","OneMinusSrcAlphaFactor","OneMinusSrcColorFactor","PCFShadowMap","PCFSoftShadowMap","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","PointCloudMaterial","REVISION","RGBADepthPacking","RGBAFormat","RGBAIntegerFormat","RGBA_ASTC_10x10_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_BPTC_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGBDEncoding","RGBEEncoding","RGBEFormat","RGBFormat","RGBIntegerFormat","RGBM16Encoding","RGBM7Encoding","RGB_ETC1_Format","RGB_ETC2_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGB_S3TC_DXT1_Format","RGFormat","RGIntegerFormat","RedFormat","RedIntegerFormat","ReinhardToneMapping","ReplaceStencilOp","ReverseSubtractEquation","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","ShortType","SmoothShading","SrcAlphaFactor","SrcAlphaSaturateFactor","SrcColorFactor","StaticCopyUsage","StaticDrawUsage","StaticReadUsage","StreamCopyUsage","StreamDrawUsage","StreamReadUsage","SubtractEquation","SubtractiveBlending","TOUCH","DOLLY_PAN","DOLLY_ROTATE","TangentSpaceNormalMap","TriangleFanDrawMode","TriangleStripDrawMode","TrianglesDrawMode","Uint16Attribute","Uint32Attribute","Uint8Attribute","Uint8ClampedAttribute","UnsignedByteType","UnsignedInt248Type","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedShortType","VSMShadowMap","Vertex","VertexColors","WebGLRenderTargetCube","WireframeHelper","WrapAroundEnding","XHRLoader","ZeroCurvatureEnding","ZeroFactor","ZeroSlopeEnding","ZeroStencilOp","sRGBEncoding"],"mappings":"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","file":"app2.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"\nimport {event, select} from 'd3';\nimport {drawCube} from './somed3';\n\nconst render = (cube) => {\n\n    let forward = (color) => {\n        cube.rotate(color);\n    };\n\n    let reverse = (color) => {\n        cube.rotateReverse(color);\n    };\n\n    let rotateFn = forward;\n\n    window.addEventListener('keydown', (e) => {\n        if (e.key === \"Shift\") {\n            rotateFn = reverse;\n        }\n    });\n\n    window.addEventListener('keyup', (e) => {\n        if (e.key === \"Shift\") {\n            rotateFn = forward;\n        }\n    });\n\n    document.querySelectorAll(\".invert\").forEach(d => {\n\n        d.addEventListener(\"touchstart\", (ev) => {\n            rotateFn = reverse;\n        }, false);\n\n        d.addEventListener(\"touchend\", (ev) => {\n            rotateFn = forward;\n        }, false);\n\n        d.addEventListener(\"touchcancel\", (ev) => {\n            rotateFn = forward;\n        }, false);\n\n    });\n    /*\n    el.addEventListener(\"touchmove\", (ev) => {\n        ev.preventDefault();\n    }, false);\n    */\n\n\n    let renderCube = () => {\n        /*\n        let scramble = parser.SequenceParser(\"B L2 B' D' U' L' D' L2 B D B F' L2 R U' B2 F' D R2 B F D2 L R' B' L' F2 D F D'\");\n        scramble(cube);\n        */\n\n        [\n            \"white\", \"red\", \"green\",\n            \"blue\", \"yellow\", \"orange\",\n        ].forEach(color => {\n\n            let faceColors = cube.getFaceColors(color);\n            const face = document.querySelector(`.faces .${color}`);\n            const svg = drawCube(face.clientWidth, face.clientHeight, faceColors);\n            console.log(svg);\n            face.append(svg);\n\n        });\n\n    };\n\n    renderCube();\n\n    let update = () => {\n        [\n            \"white\", \"red\", \"green\",\n            \"blue\", \"yellow\", \"orange\",\n        ].forEach(color => {\n\n            let faceColors = cube.getFaceColors(color);\n            const face = document.querySelector(`.faces .${color} > svg`);\n            face.update(faceColors);\n\n        });\n    };\n\n    let clickMap = {\n        \"white\": \".up\",\n        \"red\": \".right\",\n        \"green\": \".front\",\n        \"blue\": \".back\",\n        \"yellow\": \".down\",\n        \"orange\": \".left\",\n    };\n\n    Object.keys(clickMap).forEach(k => {\n        let dir = clickMap[k];\n        select(`.faces .${k}`)\n            .on(\"touchstart\", (d, i, g) => {\n                event.preventDefault();\n                rotateFn(k);\n                update();\n            })\n            .on(\"click\", (d, i, g) => {\n                rotateFn(k);\n                update();\n            });\n    });\n};\n\nexport {\n    render\n};","\nimport * as d3 from 'd3';\n\nfunction buildData(inData) {\n    let data2 = [];\n    let iter = inData.values();\n    for (let y = 0; y < 3; y++) {\n        for (let x = 0; x < 3; x++) {\n            let d = [];\n            d.push(x);\n            d.push(y);\n            d.push(iter.next().value);\n            data2.push(d);\n        }\n    }\n\n    return data2;\n}\n\nfunction drawCube(width, height, inData) {\n\n    let dim = d3.min([width, height]) * 0.9;\n\n    const svg = d3.create(\"svg\")\n        .attr(\"viewBox\", [0, 0, dim, dim])\n        .attr(\"height\", dim);\n\n    let cdim = (dim/3.0);\n\n\n    let pieceGroup = svg.append(\"g\")\n        .selectAll(\"g\")\n        .data(buildData(inData))\n        .join(\"g\")\n        .call(g => {\n\n            g.append(\"path\")\n                .attr(\"d\", d => {\n                    let p = d3.path();\n                    //p.rect(d[0] * dim / 3.0, d[1] * dim / 3.0, dim / 3.0, dim / 3.0);\n                    p.rect(d[0] * cdim, d[1] * cdim, cdim, cdim);\n                    return p;\n                })\n                .attr(\"fill\", d => d[2]);\n\n            g.append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"x1\", d => d[0] * cdim)\n                .attr(\"x2\", d => (d[0] + 1) * cdim)\n                .attr(\"y1\", d => d[1] * cdim)\n                .attr(\"y2\", d => (d[1]) * cdim);\n\n            g.append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"x1\", d => d[0] * cdim)\n                .attr(\"x2\", d => (d[0]) * cdim)\n                .attr(\"y1\", d => d[1] * cdim)\n                .attr(\"y2\", d => (d[1] + 1) * cdim);\n\n        });\n\n    return Object.assign(svg.node(), {\n        update: (data) => {\n            pieceGroup.data(buildData(data))\n            .select(\"path\")\n            .attr(\"fill\", d => d[2]);\n        }\n    });\n}\n\nexport {drawCube};","import * as THREE from 'three';\n\nlet render3d = () => {\n\n    const divCube = document.querySelector(\"div.cube\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, divCube.clientWidth / divCube.clientHeight, 0.1, 1000);\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(divCube.clientWidth, divCube.clientHeight);\n\n    divCube.appendChild(renderer.domElement);\n\n    var geometry = new THREE.BoxGeometry(0.9, 0.9, 0.9);\n    var material = new THREE.MeshBasicMaterial({\n        //color: 0x00ff00\n        vertexColors: THREE.FaceColors\n    });\n\n    let group = new THREE.Group();\n\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++) {\n                let g = geometry.clone();\n\n                g.faces.forEach(f => {\n                    f.color.setRGB(Math.random(),\n                        Math.random(), Math.random());\n                });\n\n                let cube = new THREE.Mesh(g, material);\n                cube.position.set(i - 1, j - 1, k - 1);\n                group.add(cube);\n            }\n        }\n    }\n\n    scene.add(group);\n\n    camera.position.z = 5;\n\n    var animate = function () {\n        requestAnimationFrame(animate);\n\n        group.rotation.x += 0.01;\n        group.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n    };\n\n    animate();\n};\n\nexport {\n    render3d\n};","/* eslint no-console:0 consistent-return:0 */\n\"use strict\";\n//const d3 = require(\"d3\");\n//const glm = require(\"gl-matrix\");\n\nimport {vec3, mat4} from \"gl-matrix\";\nimport {dsvFormat} from \"d3\";\n\nconst WHITE=0;\nconst RED=1;\nconst GREEN=2;\nconst BLUE=3;\nconst ORANGE=4;\nconst YELLOW=5;\n\nlet colorMap = {\n    w: {\n        value: \"white\",\n        key: \"w\",\n        code: WHITE,\n        direction: vec3.fromValues(0,0,1),\n        adjacent: [\"b\", \"g\", \"o\", \"r\"],\n    },\n    r: {\n        value: \"red\",\n        key: \"r\",\n        code: RED,\n        direction: vec3.fromValues(1,0,0),\n        adjacent: [\"w\", \"y\", \"g\", \"b\"],\n    },\n    g: {\n        value: \"green\",\n        key: \"g\",\n        code: GREEN,\n        direction: vec3.fromValues(0,-1,0),\n        adjacent: [\"w\", \"y\", \"o\", \"r\"],\n    },\n    b: {\n        value: \"blue\",\n        key: \"b\",\n        code: BLUE,\n        direction: vec3.fromValues(0,1,0),\n        adjacent: [\"w\", \"y\", \"r\", \"o\"],\n    },\n    o: {\n        value: \"orange\",\n        key: \"o\",\n        code: ORANGE,\n        direction: vec3.fromValues(-1,0,0),\n        adjacent: [\"w\", \"y\", \"b\", \"g\"],\n    },\n    y: {\n        value: \"yellow\",\n        key: \"y\",\n        code: YELLOW,\n        direction: vec3.fromValues(0,0,-1),\n        adjacent: [\"g\", \"b\", \"o\", \"r\"],\n    },\n    '#': {\n        value: \"#\",\n        key: \"#\",\n        direction: vec3.fromValues(0,0,0)\n    }\n};\n\nconst COLORS = new Array(6);\nCOLORS[WHITE] = colorMap.w; \nCOLORS[GREEN] = colorMap.g; \nCOLORS[RED] = colorMap.r; \nCOLORS[BLUE] = colorMap.b; \nCOLORS[ORANGE] = colorMap.o; \nCOLORS[YELLOW] = colorMap.y; \n\nlet FACES = {\n    white: colorMap.w,\n    red: colorMap.r,\n    green: colorMap.g,\n    blue: colorMap.b,\n    orange: colorMap.o,\n    yellow: colorMap.y\n};\n\nfunction ColorFace(cube, color, vector, transform) {\n    Object.assign(this, {\n        color: color,\n        vector: vec3.clone(vector),\n        parentTransform: transform,\n        cube: cube\n    });\n}\n\nColorFace.prototype.position = function() {\n    return vec3.transformMat4(vec3.create(), this.vector, this.parentTransform);\n};\n\nColorFace.prototype.toString = function() {\n    return `${this.color}: ${this.position()}`; \n};\n\nColorFace.prototype.adjacentCenter = function() {\n\n    let pos = this.position();\n    let max;\n    let ret;\n\n    Object.keys(FACES).forEach(k => {\n        let f = FACES[k];\n        let p = this.cube.get(f.key);\n        let dot = vec3.dot(p.get(f.value), pos);\n\n        if (!max || max < dot) {\n            max = dot;\n            ret = p; \n        }\n    });\n\n    return ret;\n};\n\nfunction Piece(cube, s) {\n\n    let i = 0;\n    let colorFaces = {};\n    let colors = [];\n\n    let position = vec3.create();\n    s.split(\",\").map(c => {\n        if (c !== '#') {\n            colors.push(c);\n            i++;\n        }\n        vec3.add(position, position, colorMap[c].direction);\n    });\n\n    let transform = mat4.fromTranslation(mat4.create(), position);\n    s.split(\",\").map(c => {\n\n        let color = colorMap[c].value;\n        colorFaces[color] = new ColorFace(cube, color, colorMap[c].direction, transform);\n    });\n\n    let key = colors.join(\"\");\n\n    Object.assign(this, {\n        colorFaces: colorFaces,\n        colors: colors,\n        vector: vec3.fromValues(0,0,0),\n        position: position, //to be calculated on the fly from transform\n        transform: transform,\n        key: key,\n        cube: cube\n    });\n}\n\nPiece.prototype.rotate = function (m) {\n    mat4.mul(this.transform, m, this.transform);\n};\n\nPiece.prototype.toString = function() {\n\n    return `\nColors: ${this.colors}\nPosition: ${this.position2()}\nKey: ${this.key}\nColor Faces: ${this.colorFaces}\n`;\n\n};\n\nPiece.prototype.position2 = function() {\n    return vec3.transformMat4(vec3.create(), this.vector, this.transform);\n};\n\nPiece.prototype.get = function(color) {\n    return this.colorFaces[color].position();\n};\n\nPiece.prototype.getColors = function() {\n    return this.colorFaces; \n};\n\nPiece.prototype.getFaceColor = function(color) {\n\n    let colorValue = colorMap[color].value;\n    let ret;\n    Object.keys(this.colorFaces).forEach(k => {\n        let cf = this.colorFaces[k]; \n\n        if (cf.color !== \"#\" && cf.adjacentCenter().key === color) {\n            console.log(cf);\n            ret = cf.color;\n        }\n    });\n\n    return ret;\n};\n\nfunction Cube(csv) {\n\n    let parser = dsvFormat(\"|\");\n    let data = parser.parse(csv);\n\n    this.pieces = new Map();\n\n    data.forEach(r => {\n        let v = new Piece(this, r.data);\n        this.pieces.set(v.key, v);\n    });\n\n    this.faceRotations = {};\n\n    Object.keys(FACES).forEach(f => {\n\n        let dir = FACES[f].direction;\n        let cw = mat4.fromRotation(mat4.create(), -Math.PI/2.0, dir);\n\n        let tr1 = mat4.fromTranslation(mat4.create(), vec3.scale(vec3.create(), dir, -1));  \n        let tr2 = mat4.fromTranslation(mat4.create(), dir); \n\n        let rota = mat4.mul(mat4.create(), \n            cw, tr1\n        );\n\n        mat4.mul(rota, tr2, rota);\n\n        this.faceRotations[f] = rota;\n    });\n}\n\nCube.prototype.toString = function() {\n\n    let ret = \"\";\n\n    for (const p of this.pieces.keys()) {\n       ret += `${this.pieces.get(p)}\n`;\n    }\n\n    return ret;\n};\n\nCube.prototype.rotate = function(face) {\n\n    console.log(`Rotate: ${face}`);\n    for (const k of this.pieces.keys()) {\n\n        let p = this.pieces.get(k); \n        let rota = this.faceRotations[face];\n        let dir = FACES[face].direction; \n        if (vec3.dot(p.position2(), dir) === 1) {\n            console.log(p.toString());\n            p.rotate(rota);\n            console.log(p.toString());\n        }\n    }\n\n};\n\nCube.prototype.rotateReverse = function(face) {\n\n    console.log(`Rotate: ${face}`);\n    for (const k of this.pieces.keys()) {\n\n        let p = this.pieces.get(k); \n        let rota = mat4.invert(mat4.create(), this.faceRotations[face]);\n        let dir = FACES[face].direction; \n        if (vec3.dot(p.position2(), dir) === 1) {\n            console.log(p.toString());\n            p.rotate(rota);\n            console.log(p.toString());\n        }\n    }\n\n};\n\nCube.prototype.get = function(key) {\n    return this.pieces.get(key);\n};\n\nCube.prototype.getByPosition = function(key) {\n\n    let vec = vec3.create();\n    key.split(\"\").forEach(c => {\n        vec3.add(vec, vec, colorMap[c].direction);\n    });\n\n    for (const k of this.pieces.keys()) {\n        let p = this.pieces.get(k);\n        if (vec3.equals(p.position2(), vec)) {\n            return p;\n        }\n    }\n\n    return undefined;\n};\n\nCube.prototype.getFace = function(color) {\n\n    let dir = FACES[color].direction;\n\n    let ret = [];\n    for (const k of this.pieces.keys()) {\n        let p = this.pieces.get(k);\n        if (vec3.dot(p.position2(), dir) === 1) {\n            ret.push(p);\n        }\n    }\n\n    return ret;\n};\n\nCube.prototype.getFacePiecePositions = function(faceColor)\n{\n    let a1 = [faceColor];\n    let a2 = [\n        colorMap[faceColor].adjacent[0], \n        \"\",\n        colorMap[faceColor].adjacent[1], \n    ];\n    let a3 = [\n        colorMap[faceColor].adjacent[2], \n        \"\",\n        colorMap[faceColor].adjacent[3], \n    ];\n\n    let ret = [];\n    for(const c1 of a1) {\n        for(const c2 of a2) {\n            for (const c3 of a3) {\n                ret.push(`${c1}${c3}${c2}`);\n            }\n        }\n    } \n    return ret;\n};\n\nCube.prototype.getFaceColors = function(face) {\n\n    if (!(face in colorMap)) {\n        face = FACES[face].key;\n    }\n\n    return this.getFacePiecePositions(face)\n        .map(p => this.getByPosition(p))\n        .map(pos => pos.getFaceColor(face));\n\n};\n\nexport {Cube};\n","import {Cube} from \"./cube\";\nimport {render} from \"./2d/render\";\nimport {text} from 'd3';\nimport {render3d} from \"./3d/render3d\";\n\nconst onload = () => {\n\treturn new Promise(function (resolve, reject) {\n\t\twindow.addEventListener('load', resolve);\n\t});\n};\n\nonload().then(() => {\n\n\t// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n\tlet vh = window.innerHeight * 0.01;\n\t// Then we set the value in the --vh custom property to the root of the document\n\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n\t// We listen to the resize event\n\twindow.addEventListener('resize', () => {\n\t\t// We execute the same script as before\n\t\tlet vh = window.innerHeight * 0.01;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t});\n\n\ttext(\"default3.csv\").then((d) => {\n\t\tconsole.log(Cube);\n\t\tlet cube = new Cube(d);\n\t\trender(cube);\n\t});\n\n\trender3d();\n\n});","// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-axis/ v1.0.12 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nfunction identity(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-brush/ v1.1.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function(target) {\n    return d3Selection.touch(target, d3Selection.event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = d3Dispatch.dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return (!clean && that.__brush.emitter) || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      else this.emit(\"brush\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !d3Selection.event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (keys && d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        pointer = d3Selection.event.touches ? toucher(d3Selection.event.changedTouches[0].identifier) : d3Selection.mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushSelection = brushSelection;\nexports.brushX = brushX;\nexports.brushY = brushY;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-chord/ v1.0.6 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-path'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Path) { 'use strict';\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = pi * 2;\nvar max = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = d3Array.range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(d3Array.range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice = Array.prototype.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = d3Path.path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexports.chord = chord;\nexports.ribbon = ribbon;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.4.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.cubehelix = cubehelix;\nexports.gray = gray;\nexports.hcl = hcl;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.lch = lch;\nexports.rgb = rgb;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-contour/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold = d3Array.thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\n      tz = d3Array.tickStep(start, stop, tz);\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = d3Array.max(values0);\n      tz = d3Array.tickStep(0, stop, tz);\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nexports.contours = contours;\nexports.contourDensity = density;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-dispatch/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-drag/ v1.2.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction nodrag(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-dsv/ v1.2.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear()) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatBody = csv.formatBody;\nvar csvFormatRows = csv.formatRows;\nvar csvFormatRow = csv.formatRow;\nvar csvFormatValue = csv.formatValue;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatBody = tsv.formatBody;\nvar tsvFormatRows = tsv.formatRows;\nvar tsvFormatRow = tsv.formatRow;\nvar tsvFormatValue = tsv.formatValue;\n\nfunction autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nvar fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();\n\nexports.autoType = autoType;\nexports.csvFormat = csvFormat;\nexports.csvFormatBody = csvFormatBody;\nexports.csvFormatRow = csvFormatRow;\nexports.csvFormatRows = csvFormatRows;\nexports.csvFormatValue = csvFormatValue;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.dsvFormat = dsv;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatBody = tsvFormatBody;\nexports.tsvFormatRow = tsvFormatRow;\nexports.tsvFormatRows = tsvFormatRows;\nexports.tsvFormatValue = tsvFormatValue;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-ease/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackInOut = backInOut;\nexports.easeBackOut = backOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBounceOut = bounceOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleInOut = circleInOut;\nexports.easeCircleOut = circleOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicInOut = cubicInOut;\nexports.easeCubicOut = cubicOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticInOut = elasticInOut;\nexports.easeElasticOut = elasticOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpInOut = expInOut;\nexports.easeExpOut = expOut;\nexports.easeLinear = linear;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyInOut = polyInOut;\nexports.easePolyOut = polyOut;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadInOut = quadInOut;\nexports.easeQuadOut = quadOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinInOut = sinInOut;\nexports.easeSinOut = sinOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv;\nexports.tsv = tsv;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-force/ v1.2.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-quadtree'), require('d3-collection'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-collection', 'd3-dispatch', 'd3-timer'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Quadtree,d3Collection,d3Dispatch,d3Timer) { 'use strict';\n\nfunction center(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = d3Collection.map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = d3Collection.map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-format/ v1.4.4 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\nexports.FormatSpecifier = FormatSpecifier;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-geo/ v1.12.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, (function (exports, d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nfunction polygonContains(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y]);\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$1;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-hierarchy/ v1.1.9 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice = Array.prototype.slice;\n\nfunction shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$1() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packEnclose = enclose;\nexports.packSiblings = siblings;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapResquarify = resquarify;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-interpolate/ v1.4.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction numberArray(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\nfunction array(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateHue = hue$1;\nexports.interpolateLab = lab;\nexports.interpolateNumber = number;\nexports.interpolateNumberArray = numberArray;\nexports.interpolateObject = object;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-path/ v1.0.9 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-polygon/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction area(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonContains = contains;\nexports.polygonHull = hull;\nexports.polygonLength = length;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-quadtree/ v1.0.7 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-random/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction defaultSource() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n\nvar exponential = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-scale-chromatic/ v1.5.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-interpolate'), require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-interpolate', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Interpolate, d3Color) { 'use strict';\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nvar Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\nfunction ramp(scheme) {\n  return d3Interpolate.interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$a = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$a);\n\nvar scheme$b = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$b);\n\nvar scheme$c = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$c);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$d);\n\nvar scheme$e = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$e);\n\nvar scheme$f = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$f);\n\nvar scheme$g = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$g);\n\nvar scheme$h = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$h);\n\nvar scheme$i = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$i);\n\nvar scheme$j = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$j);\n\nvar scheme$k = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$k);\n\nvar scheme$l = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$l);\n\nvar scheme$m = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$m);\n\nvar scheme$n = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$n);\n\nvar scheme$o = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$o);\n\nvar scheme$p = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$p);\n\nvar scheme$q = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$q);\n\nfunction cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n\nvar cubehelix = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar c = d3Color.cubehelix();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n\nvar c$1 = d3Color.rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c$1.r = 255 * (x = Math.sin(t)) * x;\n  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c$1 + \"\";\n}\n\nfunction turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nexports.interpolateBlues = Blues;\nexports.interpolateBrBG = BrBG;\nexports.interpolateBuGn = BuGn;\nexports.interpolateBuPu = BuPu;\nexports.interpolateCividis = cividis;\nexports.interpolateCool = cool;\nexports.interpolateCubehelixDefault = cubehelix;\nexports.interpolateGnBu = GnBu;\nexports.interpolateGreens = Greens;\nexports.interpolateGreys = Greys;\nexports.interpolateInferno = inferno;\nexports.interpolateMagma = magma;\nexports.interpolateOrRd = OrRd;\nexports.interpolateOranges = Oranges;\nexports.interpolatePRGn = PRGn;\nexports.interpolatePiYG = PiYG;\nexports.interpolatePlasma = plasma;\nexports.interpolatePuBu = PuBu;\nexports.interpolatePuBuGn = PuBuGn;\nexports.interpolatePuOr = PuOr;\nexports.interpolatePuRd = PuRd;\nexports.interpolatePurples = Purples;\nexports.interpolateRainbow = rainbow;\nexports.interpolateRdBu = RdBu;\nexports.interpolateRdGy = RdGy;\nexports.interpolateRdPu = RdPu;\nexports.interpolateRdYlBu = RdYlBu;\nexports.interpolateRdYlGn = RdYlGn;\nexports.interpolateReds = Reds;\nexports.interpolateSinebow = sinebow;\nexports.interpolateSpectral = Spectral;\nexports.interpolateTurbo = turbo;\nexports.interpolateViridis = viridis;\nexports.interpolateWarm = warm;\nexports.interpolateYlGn = YlGn;\nexports.interpolateYlGnBu = YlGnBu;\nexports.interpolateYlOrBr = YlOrBr;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeAccent = Accent;\nexports.schemeBlues = scheme$l;\nexports.schemeBrBG = scheme;\nexports.schemeBuGn = scheme$9;\nexports.schemeBuPu = scheme$a;\nexports.schemeCategory10 = category10;\nexports.schemeDark2 = Dark2;\nexports.schemeGnBu = scheme$b;\nexports.schemeGreens = scheme$m;\nexports.schemeGreys = scheme$n;\nexports.schemeOrRd = scheme$c;\nexports.schemeOranges = scheme$q;\nexports.schemePRGn = scheme$1;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemePiYG = scheme$2;\nexports.schemePuBu = scheme$e;\nexports.schemePuBuGn = scheme$d;\nexports.schemePuOr = scheme$3;\nexports.schemePuRd = scheme$f;\nexports.schemePurples = scheme$o;\nexports.schemeRdBu = scheme$4;\nexports.schemeRdGy = scheme$5;\nexports.schemeRdPu = scheme$g;\nexports.schemeRdYlBu = scheme$6;\nexports.schemeRdYlGn = scheme$7;\nexports.schemeReds = scheme$p;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.schemeSpectral = scheme$8;\nexports.schemeTableau10 = Tableau10;\nexports.schemeYlGn = scheme$i;\nexports.schemeYlGnBu = scheme$h;\nexports.schemeYlOrBr = scheme$j;\nexports.schemeYlOrRd = scheme$k;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-scale/ v2.2.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n\nvar array = Array.prototype;\n\nvar map = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal() {\n  var index = d3Collection.map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3Interpolate.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = d3Array.tickStep(start, stop, count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity$1(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity$1(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$1() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$1()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((d3Array.bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer$2() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer$2()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer$2()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity$1;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleSymlog = symlog;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.tickFormat = tickFormat;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-selection/ v1.4.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nfunction matcher(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_join(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\nfunction selection_merge(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nexports.clientPoint = point;\nexports.create = create;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-shape/ v1.3.7 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$1 = x,\n      y$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$1 = x,\n      y$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$1.apply(this, (argv[0] = s, argv)), +y$1.apply(this, argv), +x$1.apply(this, (argv[0] = t, argv)), +y$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction appearance(series) {\n  var peaks = series.map(peak);\n  return none$1(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.areaRadial = areaRadial;\nexports.curveBasis = basis;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBundle = bundle;\nexports.curveCardinal = cardinal;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveLinear = curveLinear;\nexports.curveLinearClosed = linearClosed;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.line = line;\nexports.lineRadial = lineRadial$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkRadial = linkRadial;\nexports.linkVertical = linkVertical;\nexports.pie = pie;\nexports.pointRadial = pointRadial;\nexports.radialArea = areaRadial;\nexports.radialLine = lineRadial$1;\nexports.stack = stack;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAppearance = appearance;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.symbol = symbol;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.symbols = symbols;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-time-format/ v2.2.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-time/ v1.1.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-timer/ v1.0.10 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.interval = interval$1;\nexports.now = now;\nexports.timeout = timeout$1;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-transition/ v1.3.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Selection, d3Dispatch, d3Timer, d3Interpolate, d3Color, d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        string1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_textTween(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nfunction transition_end() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-voronoi/ v1.1.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x(d) {\n  return d[0];\n}\n\nfunction y(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x,\n      y$$1 = y,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon) * epsilon, Math.round(y$$1(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nexports.voronoi = voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-zoom/ v1.8.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -d3Selection.event.deltaY * (d3Selection.event.deltaMode === 1 ? 0.05 : d3Selection.event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = d3Interpolate.interpolateZoom,\n      listeners = d3Dispatch.dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function(selection, k, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = d3Selection.mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      d3Transition.interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = d3Selection.select(d3Selection.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = d3Selection.mouse(this),\n        x0 = d3Selection.event.clientX,\n        y0 = d3Selection.event.clientY;\n\n    d3Drag.dragDisable(d3Selection.event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    d3Transition.interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = d3Selection.event.clientX - x0, dy = d3Selection.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = d3Selection.mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      d3Drag.dragEnable(d3Selection.event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = d3Selection.mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (d3Selection.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) d3Selection.select(this).transition().duration(duration).call(schedule, t1, p0);\n    else d3Selection.select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, d3Selection.event.changedTouches.length === n),\n        started, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      d3Transition.interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = d3Selection.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = d3Selection.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        var p = d3Selection.select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.zoom = zoom;\nexports.zoomIdentity = identity;\nexports.zoomTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar d3Array = require('d3-array');\nvar d3Axis = require('d3-axis');\nvar d3Brush = require('d3-brush');\nvar d3Chord = require('d3-chord');\nvar d3Collection = require('d3-collection');\nvar d3Color = require('d3-color');\nvar d3Contour = require('d3-contour');\nvar d3Dispatch = require('d3-dispatch');\nvar d3Drag = require('d3-drag');\nvar d3Dsv = require('d3-dsv');\nvar d3Ease = require('d3-ease');\nvar d3Fetch = require('d3-fetch');\nvar d3Force = require('d3-force');\nvar d3Format = require('d3-format');\nvar d3Geo = require('d3-geo');\nvar d3Hierarchy = require('d3-hierarchy');\nvar d3Interpolate = require('d3-interpolate');\nvar d3Path = require('d3-path');\nvar d3Polygon = require('d3-polygon');\nvar d3Quadtree = require('d3-quadtree');\nvar d3Random = require('d3-random');\nvar d3Scale = require('d3-scale');\nvar d3ScaleChromatic = require('d3-scale-chromatic');\nvar d3Selection = require('d3-selection');\nvar d3Shape = require('d3-shape');\nvar d3Time = require('d3-time');\nvar d3TimeFormat = require('d3-time-format');\nvar d3Timer = require('d3-timer');\nvar d3Transition = require('d3-transition');\nvar d3Voronoi = require('d3-voronoi');\nvar d3Zoom = require('d3-zoom');\n\nvar version = \"5.16.0\";\n\nObject.keys(d3Array).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Array[k];\n\t\t}\n\t});\n});\nObject.keys(d3Axis).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Axis[k];\n\t\t}\n\t});\n});\nObject.keys(d3Brush).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Brush[k];\n\t\t}\n\t});\n});\nObject.keys(d3Chord).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Chord[k];\n\t\t}\n\t});\n});\nObject.keys(d3Collection).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Collection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Color).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Color[k];\n\t\t}\n\t});\n});\nObject.keys(d3Contour).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Contour[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dispatch).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dispatch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Drag).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Drag[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dsv).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dsv[k];\n\t\t}\n\t});\n});\nObject.keys(d3Ease).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Ease[k];\n\t\t}\n\t});\n});\nObject.keys(d3Fetch).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Fetch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Force).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Force[k];\n\t\t}\n\t});\n});\nObject.keys(d3Format).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Format[k];\n\t\t}\n\t});\n});\nObject.keys(d3Geo).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Geo[k];\n\t\t}\n\t});\n});\nObject.keys(d3Hierarchy).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Hierarchy[k];\n\t\t}\n\t});\n});\nObject.keys(d3Interpolate).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Interpolate[k];\n\t\t}\n\t});\n});\nObject.keys(d3Path).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Path[k];\n\t\t}\n\t});\n});\nObject.keys(d3Polygon).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Polygon[k];\n\t\t}\n\t});\n});\nObject.keys(d3Quadtree).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Quadtree[k];\n\t\t}\n\t});\n});\nObject.keys(d3Random).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Random[k];\n\t\t}\n\t});\n});\nObject.keys(d3Scale).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Scale[k];\n\t\t}\n\t});\n});\nObject.keys(d3ScaleChromatic).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3ScaleChromatic[k];\n\t\t}\n\t});\n});\nObject.keys(d3Selection).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Selection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Shape).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Shape[k];\n\t\t}\n\t});\n});\nObject.keys(d3Time).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Time[k];\n\t\t}\n\t});\n});\nObject.keys(d3TimeFormat).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3TimeFormat[k];\n\t\t}\n\t});\n});\nObject.keys(d3Timer).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Timer[k];\n\t\t}\n\t});\n});\nObject.keys(d3Transition).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Transition[k];\n\t\t}\n\t});\n});\nObject.keys(d3Voronoi).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Voronoi[k];\n\t\t}\n\t});\n});\nObject.keys(d3Zoom).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Zoom[k];\n\t\t}\n\t});\n});\nexports.version = version;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( 'name' in Function.prototype === false ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t}\n\n\tvar REVISION = '118';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\tvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar VSMShadowMap = 3;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar CineonToneMapping = 3;\n\tvar ACESFilmicToneMapping = 4;\n\tvar CustomToneMapping = 5;\n\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipmapNearestFilter = 1004;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipmapLinearFilter = 1005;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipmapNearestFilter = 1007;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipmapLinearFilter = 1008;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RedIntegerFormat = 1029;\n\tvar RGFormat = 1030;\n\tvar RGIntegerFormat = 1031;\n\tvar RGBIntegerFormat = 1032;\n\tvar RGBAIntegerFormat = 1033;\n\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGB_ETC2_Format = 37492;\n\tvar RGBA_ETC2_EAC_Format = 37496;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar RGBA_BPTC_Format = 36492;\n\tvar SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tvar SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tvar SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tvar SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tvar SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tvar SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tvar SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tvar SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tvar SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tvar SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tvar SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tvar SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tvar SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tvar SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar NormalAnimationBlendMode = 2500;\n\tvar AdditiveAnimationBlendMode = 2501;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\n\tvar ZeroStencilOp = 0;\n\tvar KeepStencilOp = 7680;\n\tvar ReplaceStencilOp = 7681;\n\tvar IncrementStencilOp = 7682;\n\tvar DecrementStencilOp = 7683;\n\tvar IncrementWrapStencilOp = 34055;\n\tvar DecrementWrapStencilOp = 34056;\n\tvar InvertStencilOp = 5386;\n\n\tvar NeverStencilFunc = 512;\n\tvar LessStencilFunc = 513;\n\tvar EqualStencilFunc = 514;\n\tvar LessEqualStencilFunc = 515;\n\tvar GreaterStencilFunc = 516;\n\tvar NotEqualStencilFunc = 517;\n\tvar GreaterEqualStencilFunc = 518;\n\tvar AlwaysStencilFunc = 519;\n\n\tvar StaticDrawUsage = 35044;\n\tvar DynamicDrawUsage = 35048;\n\tvar StreamDrawUsage = 35040;\n\tvar StaticReadUsage = 35045;\n\tvar DynamicReadUsage = 35049;\n\tvar StreamReadUsage = 35041;\n\tvar StaticCopyUsage = 35046;\n\tvar DynamicCopyUsage = 35050;\n\tvar StreamCopyUsage = 35042;\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { this._listeners = {}; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return false; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author thezwap\n\t */\n\n\tvar _lut = [];\n\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t}\n\n\tvar MathUtils = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t},\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * MathUtils.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tceilPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tfloorPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t\t// angles are in radians\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c2 = cos( b / 2 );\n\t\t\tvar s2 = sin( b / 2 );\n\n\t\t\tvar c13 = cos( ( a + c ) / 2 );\n\t\t\tvar s13 = sin( ( a + c ) / 2 );\n\n\t\t\tvar c1_3 = cos( ( a - c ) / 2 );\n\t\t\tvar s1_3 = sin( ( a - c ) / 2 );\n\n\t\t\tvar c3_1 = cos( ( c - a ) / 2 );\n\t\t\tvar s3_1 = sin( ( c - a ) / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYX':\n\t\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZY':\n\t\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXZ':\n\t\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZX':\n\t\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXY':\n\t\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYZ':\n\t\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tcross: function ( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp;\n\t\t\tvar m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tvar c = Math.cos( rotation );\n\t\t\tvar s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t},\n\n\t\tscale: function ( sx, sy ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotate: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta );\n\t\t\tvar s = Math.sin( theta );\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\t\tte[ 0 ] = c * a11 + s * a21;\n\t\t\tte[ 3 ] = c * a12 + s * a22;\n\t\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( tx, ty ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar _canvas;\n\n\tvar ImageUtils = {\n\n\t\tgetDataURL: function ( image ) {\n\n\t\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tif ( _canvas === undefined ) { _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); }\n\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tvar output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY,\n\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// process single image\n\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) { return uv; }\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( w === void 0 ) w = 1;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tObject.defineProperties( Vector4.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.z = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.w = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z; // variables for result\n\t\t\tvar epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) { s = 1; }\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: WebGLRenderTarget,\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\t\tconstructor: WebGLMultisampleRenderTarget,\n\n\t\tisWebGLMultisampleRenderTarget: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\t\tthis.samples = source.samples;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( w === void 0 ) w = 1;\n\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tvar x1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t},\n\n\t\tmultiplyQuaternionsFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\t\tvar x0 = src0[ srcOffset0 ];\n\t\t\tvar y0 = src0[ srcOffset0 + 1 ];\n\t\t\tvar z0 = src0[ srcOffset0 + 2 ];\n\t\t\tvar w0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tvar x1 = src1[ srcOffset1 ];\n\t\t\tvar y1 = src1[ srcOffset1 + 1 ];\n\t\t\tvar z1 = src1[ srcOffset1 + 2 ];\n\t\t\tvar w1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\t\treturn dst;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tisQuaternion: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\tvar s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\tvar s$1 = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s$1;\n\t\t\t\tthis._x = 0.25 * s$1;\n\t\t\t\tthis._y = ( m12 + m21 ) / s$1;\n\t\t\t\tthis._z = ( m13 + m31 ) / s$1;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\tvar s$2 = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s$2;\n\t\t\t\tthis._x = ( m12 + m21 ) / s$2;\n\t\t\t\tthis._y = 0.25 * s$2;\n\t\t\t\tthis._z = ( m23 + m32 ) / s$2;\n\n\t\t\t} else {\n\n\t\t\t\tvar s$3 = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s$3;\n\t\t\t\tthis._x = ( m13 + m31 ) / s$3;\n\t\t\t\tthis._y = ( m23 + m32 ) / s$3;\n\t\t\t\tthis._z = 0.25 * s$3;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tangleTo: function ( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t},\n\n\t\trotateTowards: function ( q, step ) {\n\n\t\t\tvar angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) { return this; }\n\n\t\t\tvar t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tinverse: function () {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) { return this; }\n\t\t\tif ( t === 1 ) { return this.copy( qb ); }\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\tthis.normalize();\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\t\tthis._x = attribute.getX( index );\n\t\t\tthis._y = attribute.getY( index );\n\t\t\tthis._z = attribute.getZ( index );\n\t\t\tthis._w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector = new Vector3();\n\tvar _quaternion = new Quaternion();\n\n\tfunction Vector3( x, y, z ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t\t},\n\n\t\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyNormalMatrix: function ( m ) {\n\n\t\t\treturn this.applyMatrix3( m ).normalize();\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t},\n\n\t\tunproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( v ) {\n\n\t\t\tvar denominator = v.lengthSq();\n\n\t\t\tif ( denominator === 0 ) { return this.set( 0, 0, 0 ); }\n\n\t\t\tvar scalar = v.dot( this ) / denominator;\n\n\t\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( _vector );\n\n\t\t},\n\n\t\treflect: function ( normal ) {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t},\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\t\tif ( denominator === 0 ) { return Math.PI / 2; }\n\n\t\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t},\n\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t},\n\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tsetFromMatrix3Column: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar _v1 = new Vector3();\n\tvar _m1 = new Matrix4();\n\tvar _zero = new Vector3( 0, 0, 0 );\n\tvar _one = new Vector3( 1, 1, 1 );\n\tvar _x = new Vector3();\n\tvar _y = new Vector3();\n\tvar _z = new Vector3();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function ( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce$1 = c * e, cf$1 = c * f, de$1 = d * e, df$1 = d * f;\n\n\t\t\t\tte[ 0 ] = ce$1 - df$1 * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de$1 + cf$1 * b;\n\n\t\t\t\tte[ 1 ] = cf$1 + de$1 * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df$1 - ce$1 * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae$1 = a * e, af$1 = a * f, be$1 = b * e, bf$1 = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be$1 * d - af$1;\n\t\t\t\tte[ 8 ] = ae$1 * d + bf$1;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf$1 * d + ae$1;\n\t\t\t\tte[ 9 ] = af$1 * d - be$1;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac$1 = a * c, ad$1 = a * d, bc$1 = b * c, bd$1 = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac$1 * f + bd$1;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad$1 * f - bc$1;\n\n\t\t\t\tte[ 2 ] = bc$1 * f - ad$1;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd$1 * f + ac$1;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\treturn this.compose( _zero, q, _one );\n\n\t\t},\n\n\t\tlookAt: function ( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\t_z.subVectors( eye, target );\n\n\t\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t_z.z = 1;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t_z.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_z.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\t\t\t\t_x.crossVectors( up, _z );\n\n\t\t\t}\n\n\t\t\t_x.normalize();\n\t\t\t_y.crossVectors( _z, _x );\n\n\t\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( x, y, z ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tte[ 12 ] = x.x;\n\t\t\t\tte[ 13 ] = x.y;\n\t\t\t\tte[ 14 ] = x.z;\n\n\t\t\t} else {\n\n\t\t\t\tte[ 12 ] = x;\n\t\t\t\tte[ 13 ] = y;\n\t\t\t\tte[ 14 ] = z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t\t}\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = position.x;\n\t\t\tte[ 13 ] = position.y;\n\t\t\tte[ 14 ] = position.z;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) { sx = - sx; }\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\t_m1.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t_m1.elements[ 0 ] *= invSX;\n\t\t\t_m1.elements[ 1 ] *= invSX;\n\t\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t\t_m1.elements[ 4 ] *= invSY;\n\t\t\t_m1.elements[ 5 ] *= invSY;\n\t\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _matrix = new Matrix4();\n\tvar _quaternion$1 = new Quaternion();\n\n\tfunction Euler( x, y, z, order ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( order === void 0 ) order = Euler.DefaultOrder;\n\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = MathUtils.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\n\t\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\n\t\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\n\t\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\n\t\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\n\t\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\n\t\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t\t},\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function ( newOrder ) {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\t_quaternion$1.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t\t},\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) { this._order = array[ 3 ]; }\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\tenableAll: function () {\n\n\t\t\tthis.mask = 0xffffffff | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\tdisableAll: function () {\n\n\t\t\tthis.mask = 0;\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\tvar _object3DId = 0;\n\n\tvar _v1$1 = new Vector3();\n\tvar _q1 = new Quaternion();\n\tvar _m1$1 = new Matrix4();\n\tvar _target = new Vector3();\n\n\tvar _position = new Vector3();\n\tvar _scale = new Vector3();\n\tvar _quaternion$2 = new Quaternion();\n\n\tvar _xAxis = new Vector3( 1, 0, 0 );\n\tvar _yAxis = new Vector3( 0, 1, 0 );\n\tvar _zAxis = new Vector3( 0, 0, 1 );\n\n\tvar _addedEvent = { type: 'added' };\n\tvar _removedEvent = { type: 'removed' };\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Object3D,\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tthis.matrix.premultiply( matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t\t},\n\n\t\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslateX: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t\t},\n\n\t\ttranslateY: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t\t},\n\n\t\ttranslateZ: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t\t},\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t\t},\n\n\t\tlookAt: function ( x, y, z ) {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t\t}\n\n\t\t},\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push( object );\n\n\t\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tattach: function ( object ) {\n\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix4( _m1$1 );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) { return this; }\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldScale: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) { return; }\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { object.name = this.name; }\n\t\t\tif ( this.castShadow === true ) { object.castShadow = true; }\n\t\t\tif ( this.receiveShadow === true ) { object.receiveShadow = true; }\n\t\t\tif ( this.visible === false ) { object.visible = false; }\n\t\t\tif ( this.frustumCulled === false ) { object.frustumCulled = false; }\n\t\t\tif ( this.renderOrder !== 0 ) { object.renderOrder = this.renderOrder; }\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { object.userData = this.userData; }\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) { object.matrixAutoUpdate = false; }\n\n\t\t\t// object specific properties\n\n\t\t\tif ( this.isInstancedMesh ) {\n\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i$1 = 0, l$1 = this.material.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i$1 ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i$2 = 0; i$2 < this.children.length; i$2 ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i$2 ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\t\t\t\tvar shapes$1 = extractFromCache( meta.shapes );\n\n\t\t\t\tif ( geometries.length > 0 ) { output.geometries = geometries; }\n\t\t\t\tif ( materials.length > 0 ) { output.materials = materials; }\n\t\t\t\tif ( textures.length > 0 ) { output.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { output.images = images; }\n\t\t\t\tif ( shapes$1.length > 0 ) { output.shapes = shapes$1; }\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) { recursive = true; }\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tisScene: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) { this.background = source.background.clone(); }\n\t\t\tif ( source.environment !== null ) { this.environment = source.environment.clone(); }\n\t\t\tif ( source.fog !== null ) { this.fog = source.fog.clone(); }\n\n\t\t\tif ( source.overrideMaterial !== null ) { this.overrideMaterial = source.overrideMaterial.clone(); }\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) { data.object.background = this.background.toJSON( meta ); }\n\t\t\tif ( this.environment !== null ) { data.object.environment = this.environment.toJSON( meta ); }\n\t\t\tif ( this.fog !== null ) { data.object.fog = this.fog.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar _points = [\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3()\n\t];\n\n\tvar _vector$1 = new Vector3();\n\n\tvar _box = new Box3();\n\n\t// triangle centered vertices\n\n\tvar _v0 = new Vector3();\n\tvar _v1$2 = new Vector3();\n\tvar _v2 = new Vector3();\n\n\t// triangle edge vectors\n\n\tvar _f0 = new Vector3();\n\tvar _f1 = new Vector3();\n\tvar _f2 = new Vector3();\n\n\tvar _center = new Vector3();\n\tvar _extents = new Vector3();\n\tvar _triangleNormal = new Vector3();\n\tvar _testAxis = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function ( object ) {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box );\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, _vector$1 );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t},\n\n\t\tintersectsTriangle: function ( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( _center );\n\t\t\t_extents.subVectors( this.max, _center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\t_v0.subVectors( triangle.a, _center );\n\t\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\n\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tgetBoundingSphere: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) { this.makeEmpty(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) { return this; }\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( _points );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\tfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\t\tfor ( var i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t_testAxis.fromArray( axes, i );\n\t\t\t// project the aabb onto the seperating axis\n\t\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\tvar p0 = v0.dot( _testAxis );\n\t\t\tvar p1 = v1.dot( _testAxis );\n\t\t\tvar p2 = v2.dot( _testAxis );\n\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tvar _box$1 = new Box3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\treturn ( this.radius < 0 );\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.center.set( 0, 0, 0 );\n\t\t\tthis.radius = - 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\t\ttarget = new Box3();\n\n\t\t\t}\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\tvar _vector$2 = new Vector3();\n\tvar _segCenter = new Vector3();\n\tvar _segDir = new Vector3();\n\tvar _diff = new Vector3();\n\n\tvar _edge1 = new Vector3();\n\tvar _edge2 = new Vector3();\n\tvar _normal = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, _vector$2 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tvar directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function ( point ) {\n\n\t\t\tvar directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\t_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn _vector$2.distanceToSquared( point );\n\n\t\t},\n\n\t\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( _segDir );\n\t\t\tvar b0 = _diff.dot( this.direction );\n\t\t\tvar b1 = - _diff.dot( _segDir );\n\t\t\tvar c = _diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t},\n\n\t\tintersectSphere: function ( sphere, target ) {\n\n\t\t\t_vector$2.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = _vector$2.dot( this.direction );\n\t\t\tvar d2 = _vector$2.dot( _vector$2 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) { return null; }\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) { return null; }\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) { return this.at( t1, target ); }\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, target ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, target ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) { return null; }\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) { tmin = tymin; }\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) { tmax = tymax; }\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) { return null; }\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) { tmin = tzmin; }\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) { tmax = tzmax; }\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) { return null; }\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn this.intersectBox( box, _vector$2 ) !== null;\n\n\t\t},\n\n\t\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t_edge1.subVectors( b, a );\n\t\t\t_edge2.subVectors( c, a );\n\t\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( _normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) { return null; }\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t_diff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector1 = new Vector3();\n\tvar _vector2 = new Vector3();\n\tvar _normalMatrix = new Matrix3();\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tisPlane: true,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function ( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( _vector1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t},\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v0$1 = new Vector3();\n\tvar _v1$3 = new Vector3();\n\tvar _v2$1 = new Vector3();\n\tvar _v3 = new Vector3();\n\n\tvar _vab = new Vector3();\n\tvar _vac = new Vector3();\n\tvar _vbc = new Vector3();\n\tvar _vap = new Vector3();\n\tvar _vbp = new Vector3();\n\tvar _vcp = new Vector3();\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tgetNormal: function ( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\t_v0$1.subVectors( a, b );\n\t\t\ttarget.cross( _v0$1 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t},\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t\t_v0$1.subVectors( c, a );\n\t\t\t_v1$3.subVectors( b, a );\n\t\t\t_v2$1.subVectors( point, a );\n\n\t\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t\t},\n\n\t\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t\t_v0$1.subVectors( c, b );\n\t\t\t_v1$3.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetArea: function () {\n\n\t\t\t_v0$1.subVectors( this.c, this.b );\n\t\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t\t},\n\n\t\tgetMidpoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tgetNormal: function ( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetPlane: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\t\ttarget = new Plane();\n\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetBarycoord: function ( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tisFrontFacing: function ( direction ) {\n\n\t\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors( b, a );\n\t\t\t_vac.subVectors( c, a );\n\t\t\t_vap.subVectors( p, a );\n\t\t\tvar d1 = _vab.dot( _vap );\n\t\t\tvar d2 = _vac.dot( _vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\t_vbp.subVectors( p, b );\n\t\t\tvar d3 = _vab.dot( _vbp );\n\t\t\tvar d4 = _vac.dot( _vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t\t}\n\n\t\t\t_vcp.subVectors( p, c );\n\t\t\tvar d5 = _vab.dot( _vcp );\n\t\t\tvar d6 = _vac.dot( _vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t_vbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t\t},\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tvar _hslA = { h: 0, s: 0, l: 0 };\n\tvar _hslB = { h: 0, s: 0, l: 0 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tfunction hue2rgb( p, q, t ) {\n\n\t\tif ( t < 0 ) { t += 1; }\n\t\tif ( t > 1 ) { t -= 1; }\n\t\tif ( t < 1 / 6 ) { return p + ( q - p ) * 6 * t; }\n\t\tif ( t < 1 / 2 ) { return q; }\n\t\tif ( t < 2 / 3 ) { return p + ( q - p ) * 6 * ( 2 / 3 - t ); }\n\t\treturn p;\n\n\t}\n\n\tfunction SRGBToLinear( c ) {\n\n\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t}\n\n\tfunction LinearToSRGB( c ) {\n\n\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function ( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) { return; }\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\treturn this.setColorName( style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetColorName: function ( style ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = _colorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopySRGBToLinear: function ( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToSRGB: function ( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertSRGBToLinear: function () {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToSRGB: function () {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( target ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tthis.getHSL( _hslA );\n\n\t\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpHSL: function ( color, alpha ) {\n\n\t\t\tthis.getHSL( _hslA );\n\t\t\tcolor.getHSL( _hslB );\n\n\t\t\tvar h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\t\tvar s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\t\tvar l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\t\tthis.r = attribute.getX( index );\n\t\t\tthis.g = attribute.getY( index );\n\t\t\tthis.b = attribute.getZ( index );\n\n\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t// assuming Uint8Array\n\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\tColor.NAMES = _colorKeywords;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0, il$1 = source.vertexColors.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tthis.vertexColors[ i$1 ] = source.vertexColors[ i$1 ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\t\tcustomProgramCacheKey: function () {\n\n\t\t\treturn this.onBeforeCompile.toString();\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) { return; }\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.color && this.color.isColor ) { data.color = this.color.getHex(); }\n\n\t\t\tif ( this.roughness !== undefined ) { data.roughness = this.roughness; }\n\t\t\tif ( this.metalness !== undefined ) { data.metalness = this.metalness; }\n\n\t\t\tif ( this.sheen && this.sheen.isColor ) { data.sheen = this.sheen.getHex(); }\n\t\t\tif ( this.emissive && this.emissive.isColor ) { data.emissive = this.emissive.getHex(); }\n\t\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) { data.emissiveIntensity = this.emissiveIntensity; }\n\n\t\t\tif ( this.specular && this.specular.isColor ) { data.specular = this.specular.getHex(); }\n\t\t\tif ( this.shininess !== undefined ) { data.shininess = this.shininess; }\n\t\t\tif ( this.clearcoat !== undefined ) { data.clearcoat = this.clearcoat; }\n\t\t\tif ( this.clearcoatRoughness !== undefined ) { data.clearcoatRoughness = this.clearcoatRoughness; }\n\n\t\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.map && this.map.isTexture ) { data.map = this.map.toJSON( meta ).uuid; }\n\t\t\tif ( this.matcap && this.matcap.isTexture ) { data.matcap = this.matcap.toJSON( meta ).uuid; }\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) { data.alphaMap = this.alphaMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) { data.lightMap = this.lightMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) { data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) { data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) { data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) { data.specularMap = this.specularMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\t\tif ( this.combine !== undefined ) { data.combine = this.combine; }\n\t\t\t\tif ( this.envMapIntensity !== undefined ) { data.envMapIntensity = this.envMapIntensity; }\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) { data.size = this.size; }\n\t\t\tif ( this.sizeAttenuation !== undefined ) { data.sizeAttenuation = this.sizeAttenuation; }\n\n\t\t\tif ( this.blending !== NormalBlending ) { data.blending = this.blending; }\n\t\t\tif ( this.flatShading === true ) { data.flatShading = this.flatShading; }\n\t\t\tif ( this.side !== FrontSide ) { data.side = this.side; }\n\t\t\tif ( this.vertexColors ) { data.vertexColors = true; }\n\n\t\t\tif ( this.opacity < 1 ) { data.opacity = this.opacity; }\n\t\t\tif ( this.transparent === true ) { data.transparent = this.transparent; }\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation && this.rotation !== 0 ) { data.rotation = this.rotation; }\n\n\t\t\tif ( this.polygonOffset === true ) { data.polygonOffset = true; }\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) { data.polygonOffsetFactor = this.polygonOffsetFactor; }\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) { data.polygonOffsetUnits = this.polygonOffsetUnits; }\n\n\t\t\tif ( this.linewidth && this.linewidth !== 1 ) { data.linewidth = this.linewidth; }\n\t\t\tif ( this.dashSize !== undefined ) { data.dashSize = this.dashSize; }\n\t\t\tif ( this.gapSize !== undefined ) { data.gapSize = this.gapSize; }\n\t\t\tif ( this.scale !== undefined ) { data.scale = this.scale; }\n\n\t\t\tif ( this.dithering === true ) { data.dithering = true; }\n\n\t\t\tif ( this.alphaTest > 0 ) { data.alphaTest = this.alphaTest; }\n\t\t\tif ( this.premultipliedAlpha === true ) { data.premultipliedAlpha = this.premultipliedAlpha; }\n\n\t\t\tif ( this.wireframe === true ) { data.wireframe = this.wireframe; }\n\t\t\tif ( this.wireframeLinewidth > 1 ) { data.wireframeLinewidth = this.wireframeLinewidth; }\n\t\t\tif ( this.wireframeLinecap !== 'round' ) { data.wireframeLinecap = this.wireframeLinecap; }\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) { data.wireframeLinejoin = this.wireframeLinejoin; }\n\n\t\t\tif ( this.morphTargets === true ) { data.morphTargets = true; }\n\t\t\tif ( this.morphNormals === true ) { data.morphNormals = true; }\n\t\t\tif ( this.skinning === true ) { data.skinning = true; }\n\n\t\t\tif ( this.visible === false ) { data.visible = false; }\n\n\t\t\tif ( this.toneMapped === false ) { data.toneMapped = false; }\n\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { data.userData = this.userData; }\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) { data.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { data.images = images; }\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\t\tvar srcPlanes = source.clippingPlanes;\n\t\t\tvar dstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.toneMapped = source.toneMapped;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _vector$3 = new Vector3();\n\tvar _vector2$1 = new Vector2();\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tif ( this.itemSize === 2 ) {\n\n\t\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = this.count; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\t_vector$3.fromBufferAttribute( this, i$1 );\n\t\t\t\t\t_vector$3.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXYZ( i$1, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyNormalMatrix: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.applyNormalMatrix( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.transformDirection( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar groups = [];\n\n\t\t\tvar group, i;\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < morphNormalsLength; i$1 ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i$1 ] = {\n\t\t\t\t\t\tname: morphNormals[ i$1 ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t\t}\n\n\t\t\tfor ( var i$2 = 0; i$2 < faces.length; i$2 ++ ) {\n\n\t\t\t\tvar face = faces[ i$2 ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i$2 ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i$2 );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs$1 = faceVertexUvs[ 1 ][ i$2 ];\n\n\t\t\t\t\tif ( vertexUvs$1 !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs$1[ 0 ], vertexUvs$1[ 1 ], vertexUvs$1[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i$2 );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j$1 = 0; j$1 < morphNormalsLength; j$1 ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j$1 ].vertexNormals[ i$2 ];\n\n\t\t\t\t\tmorphTargetsNormal[ j$1 ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) { return - Infinity; }\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) { max = array[ i ]; }\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n\tvar _m1$2 = new Matrix4();\n\tvar _obj = new Object3D();\n\tvar _offset = new Vector3();\n\tvar _box$2 = new Box3();\n\tvar _boxMorphTargets = new Box3();\n\tvar _vector$4 = new Vector3();\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: BufferGeometry,\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tsetAttribute: function ( name, attribute ) {\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeleteAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar tangent = this.attributes.tangent;\n\n\t\t\tif ( tangent !== undefined ) {\n\n\t\t\t\ttangent.transformDirection( matrix );\n\n\t\t\t\ttangent.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$2.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$2.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$2.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$2.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj.lookAt( vector );\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tvar position = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tvar attribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tvar attribute$1 = this.attributes.normal;\n\n\t\t\t\tif ( attribute$1 !== undefined ) {\n\n\t\t\t\t\tattribute$1.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute$1.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tvar attribute$2 = this.attributes.color;\n\n\t\t\t\tif ( attribute$2 !== undefined ) {\n\n\t\t\t\t\tattribute$2.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute$2.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tvar attribute$3 = this.attributes.uv;\n\n\t\t\t\tif ( attribute$3 !== undefined ) {\n\n\t\t\t\t\tattribute$3.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute$3.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tvar attribute$4 = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute$4 !== undefined ) {\n\n\t\t\t\t\tattribute$4.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute$4.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_box$2.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = position.count; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\t_vector$4.fromBufferAttribute( position, i$1 );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = morphAttributesPosition.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute$1 = morphAttributesPosition[ i$2 ];\n\t\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute$1.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute$1, j );\n\n\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar positionAttribute = this.getAttribute( 'position' );\n\n\t\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\t\tvar normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tfor ( var i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tfor ( var i$1 = 0, il$1 = index.count; i$1 < il$1; i$1 += 3 ) {\n\n\t\t\t\t\t\tvar vA = index.getX( i$1 + 0 );\n\t\t\t\t\t\tvar vB = index.getX( i$1 + 1 );\n\t\t\t\t\t\tvar vC = index.getX( i$1 + 2 );\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\t\tnA.add( cb );\n\t\t\t\t\t\tnB.add( cb );\n\t\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = positionAttribute.count; i$2 < il$2; i$2 += 3 ) {\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i$2 + 0 );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i$2 + 1 );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i$2 + 2 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) {\n\n\t\t\t\toffset = 0;\n\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) { continue; }\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( normals, i );\n\n\t\t\t\t_vector$4.normalize();\n\n\t\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\t\t\t\tvar normalized = attribute.normalized;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\t// attributes\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = this.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar morphArray = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name$1 ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute$1 = morphAttribute[ i ];\n\n\t\t\t\t\tvar newAttribute$1 = convertBufferAttribute( attribute$1, indices );\n\n\t\t\t\t\tmorphArray.push( newAttribute$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[ name$1 ] = morphArray;\n\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor ( var i$1 = 0, l = groups.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tvar group = groups[ i$1 ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) { data.userData = this.userData; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key$1 in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key$1 ];\n\n\t\t\t\tvar attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) { attributeData.name = attribute.name; }\n\n\t\t\t\tdata.data.attributes[ key$1 ] = attributeData;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = {};\n\t\t\tvar hasMorphAttributes = false;\n\n\t\t\tfor ( var key$2 in this.morphAttributes ) {\n\n\t\t\t\tvar attributeArray = this.morphAttributes[ key$2 ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute$1 = attributeArray[ i ];\n\n\t\t\t\t\tvar attributeData$1 = attribute$1.toJSON( data.data );\n\n\t\t\t\t\tif ( attribute$1.name !== '' ) { attributeData$1.name = attribute$1.name; }\n\n\t\t\t\t\tarray.push( attributeData$1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\t\tmorphAttributes[ key$2 ] = array;\n\n\t\t\t\t\thasMorphAttributes = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphAttributes ) {\n\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t const parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t const values = [];\n\n\t\t\t for ( const key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// used for storing cloned, shared data\n\n\t\t\tvar data = {};\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name$1 ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name$1 ] = array;\n\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i$1 = 0, l$1 = groups.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tvar group = groups[ i$1 ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tvar _inverseMatrix = new Matrix4();\n\tvar _ray = new Ray();\n\tvar _sphere = new Sphere();\n\n\tvar _vA = new Vector3();\n\tvar _vB = new Vector3();\n\tvar _vC = new Vector3();\n\n\tvar _tempA = new Vector3();\n\tvar _tempB = new Vector3();\n\tvar _tempC = new Vector3();\n\n\tvar _morphA = new Vector3();\n\tvar _morphB = new Vector3();\n\tvar _morphC = new Vector3();\n\n\tvar _uvA = new Vector2();\n\tvar _uvB = new Vector2();\n\tvar _uvC = new Vector2();\n\n\tvar _intersectionPoint = new Vector3();\n\tvar _intersectionPointWorld = new Vector3();\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) { return; }\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere.copy( geometry.boundingSphere );\n\t\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) { return; }\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tvar start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tvar end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( var j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\tvar a = index.getX( j );\n\t\t\t\t\t\t\t\tvar b = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tvar c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar start$1 = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tvar end$1 = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( var i$1 = start$1, il$1 = end$1; i$1 < il$1; i$1 += 3 ) {\n\n\t\t\t\t\t\t\tvar a$1 = index.getX( i$1 );\n\t\t\t\t\t\t\tvar b$1 = index.getX( i$1 + 1 );\n\t\t\t\t\t\t\tvar c$1 = index.getX( i$1 + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$1, b$1, c$1 );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i$1 / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i$2 = 0, il$2 = groups.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\t\tvar group$1 = groups[ i$2 ];\n\t\t\t\t\t\t\tvar groupMaterial$1 = material[ group$1.materialIndex ];\n\n\t\t\t\t\t\t\tvar start$2 = Math.max( group$1.start, drawRange.start );\n\t\t\t\t\t\t\tvar end$2 = Math.min( ( group$1.start + group$1.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( var j$1 = start$2, jl$1 = end$2; j$1 < jl$1; j$1 += 3 ) {\n\n\t\t\t\t\t\t\t\tvar a$2 = j$1;\n\t\t\t\t\t\t\t\tvar b$2 = j$1 + 1;\n\t\t\t\t\t\t\t\tvar c$2 = j$1 + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial$1, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$2, b$2, c$2 );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j$1 / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group$1.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar start$3 = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tvar end$3 = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( var i$3 = start$3, il$3 = end$3; i$3 < il$3; i$3 += 3 ) {\n\n\t\t\t\t\t\t\tvar a$3 = i$3;\n\t\t\t\t\t\t\tvar b$3 = i$3 + 1;\n\t\t\t\t\t\t\tvar c$3 = i$3 + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$3, b$3, c$3 );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i$3 / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) { uvs = faceVertexUvs; }\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) { continue; }\n\n\t\t\t\t\tvar fvA = vertices[ face.a ];\n\t\t\t\t\tvar fvB = vertices[ face.b ];\n\t\t\t\t\tvar fvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\tvar intersect;\n\n\t\tif ( material.side === BackSide ) {\n\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t} else {\n\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t}\n\n\t\tif ( intersect === null ) { return null; }\n\n\t\t_intersectionPointWorld.copy( point );\n\t\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return null; }\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\n\t}\n\n\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t\t_vA.fromBufferAttribute( position, a );\n\t\t_vB.fromBufferAttribute( position, b );\n\t\t_vC.fromBufferAttribute( position, c );\n\n\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) { continue; }\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.boneTransform( a, _vA );\n\t\t\tobject.boneTransform( b, _vB );\n\t\t\tobject.boneTransform( c, _vC );\n\n\t\t}\n\n\t\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\t\tif ( intersection ) {\n\n\t\t\tif ( uv ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( uv2 ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tvar face = new Face3( a, b, c );\n\t\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\t\tintersection.face = face;\n\n\t\t}\n\n\t\treturn intersection;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _geometryId = 0; // Geometry uses even numbers as Id\n\tvar _m1$3 = new Matrix4();\n\tvar _obj$1 = new Object3D();\n\tvar _offset$1 = new Vector3();\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Geometry,\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.faces.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$3.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$3.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$3.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$3.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj$1.lookAt( vector );\n\n\t\t\t_obj$1.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj$1.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar index = geometry.index !== null ? geometry.index : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( attributes.position === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar position = attributes.position;\n\t\t\tvar normal = attributes.normal;\n\t\t\tvar color = attributes.color;\n\t\t\tvar uv = attributes.uv;\n\t\t\tvar uv2 = attributes.uv2;\n\n\t\t\tif ( uv2 !== undefined ) { this.faceVertexUvs[ 1 ] = []; }\n\n\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\tscope.vertices.push( new Vector3().fromBufferAttribute( position, i ) );\n\n\t\t\t\tif ( color !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color().fromBufferAttribute( color, i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexColors = ( color === undefined ) ? [] : [\n\t\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\t\tscope.colors[ c ].clone()\n\t\t\t\t];\n\n\t\t\t\tvar vertexNormals = ( normal === undefined ) ? [] : [\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, a ),\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, b ),\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, c )\n\t\t\t\t];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uv !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, a ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, b ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, c )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uv2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, a ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, b ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, c )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < groups.length; i$1 ++ ) {\n\n\t\t\t\t\tvar group = groups[ i$1 ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( index.getX( j ), index.getX( j + 1 ), index.getX( j + 2 ), group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < index.count; i$2 += 3 ) {\n\n\t\t\t\t\t\taddFace( index.getX( i$2 ), index.getX( i$2 + 1 ), index.getX( i$2 + 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$3 = 0; i$3 < position.count; i$3 += 3 ) {\n\n\t\t\t\t\t\taddFace( i$3, i$3 + 1, i$3 + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) { areaWeighted = true; }\n\n\t\t\tvar vertices = new Array( this.vertices.length );\n\n\t\t\tfor ( var v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( var f$1 = 0, fl$1 = this.faces.length; f$1 < fl$1; f$1 ++ ) {\n\n\t\t\t\t\tvar face$1 = this.faces[ f$1 ];\n\n\t\t\t\t\tvertices[ face$1.a ].add( face$1.normal );\n\t\t\t\t\tvertices[ face$1.b ].add( face$1.normal );\n\t\t\t\t\tvertices[ face$1.c ].add( face$1.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var v$1 = 0, vl$1 = this.vertices.length; v$1 < vl$1; v$1 ++ ) {\n\n\t\t\t\tvertices[ v$1 ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var f$2 = 0, fl$2 = this.faces.length; f$2 < fl$2; f$2 ++ ) {\n\n\t\t\t\tvar face$2 = this.faces[ f$2 ];\n\n\t\t\t\tvar vertexNormals = face$2.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face$2.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face$2.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face$2.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face$2.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face$2.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face$2.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) { face.__originalVertexNormals = []; }\n\n\t\t\t\tfor ( var i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.morphTargets.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i$1 ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i$1 ] = {};\n\t\t\t\t\tthis.morphNormals[ i$1 ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i$1 ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i$1 ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i$1 ].vertexNormals;\n\n\t\t\t\t\tfor ( var f$1 = 0, fl$1 = this.faces.length; f$1 < fl$1; f$1 ++ ) {\n\n\t\t\t\t\t\tvar faceNormal = new Vector3();\n\t\t\t\t\t\tvar vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i$1 ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i$1 ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tfor ( var f$2 = 0, fl$2 = this.faces.length; f$2 < fl$2; f$2 ++ ) {\n\n\t\t\t\t\tvar face$1 = this.faces[ f$2 ];\n\n\t\t\t\t\tvar faceNormal$1 = morphNormals.faceNormals[ f$2 ];\n\t\t\t\t\tvar vertexNormals$1 = morphNormals.vertexNormals[ f$2 ];\n\n\t\t\t\t\tfaceNormal$1.copy( face$1.normal );\n\n\t\t\t\t\tvertexNormals$1.a.copy( face$1.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals$1.b.copy( face$1.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals$1.c.copy( face$1.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( var f$3 = 0, fl$3 = this.faces.length; f$3 < fl$3; f$3 ++ ) {\n\n\t\t\t\tvar face$2 = this.faces[ f$3 ];\n\n\t\t\t\tface$2.normal = face$2.__originalFaceNormal;\n\t\t\t\tface$2.vertexNormals = face$2.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) { materialIndexOffset = 0; }\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) { vertexCopy.applyMatrix4( matrix ); }\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i$1 = 0, il$1 = colors2.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i$1 ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( var i$2 = 0, il$2 = faces2.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\tvar face = faces2[ i$2 ], faceCopy = (void 0), normal = (void 0), color = (void 0),\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j$1 = 0, jl$1 = faceVertexColors.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j$1 ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( var i$3 = 0, il$3 = geometry.faceVertexUvs.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i$3 ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i$3 ] === undefined ) { this.faceVertexUvs[ i$3 ] = []; }\n\n\t\t\t\tfor ( var j$2 = 0, jl$2 = faceVertexUvs2.length; j$2 < jl$2; j$2 ++ ) {\n\n\t\t\t\t\tvar uvs2 = faceVertexUvs2[ j$2 ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( mesh.matrixAutoUpdate ) { mesh.updateMatrix(); }\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar v = this.vertices[ i ];\n\t\t\t\tvar key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.faces.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i$1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i$2 = faceIndicesToRemove.length - 1; i$2 >= 0; i$2 -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i$2 ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( var j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.vertices = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) { newUvs1 = []; }\n\t\t\tif ( uvs2 && uvs2.length === length ) { newUvs2 = []; }\n\n\t\t\tfor ( var i$1 = 0; i$1 < length; i$1 ++ ) {\n\n\t\t\t\tvar id = faces[ i$1 ]._id;\n\n\t\t\t\tif ( newUvs1 ) { newUvs1.push( uvs1[ id ] ); }\n\t\t\t\tif ( newUvs2 ) { newUvs2.push( uvs2[ id ] ); }\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) { this.faceVertexUvs[ 0 ] = newUvs1; }\n\t\t\tif ( newUvs2 ) { this.faceVertexUvs[ 1 ] = newUvs2; }\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i$1 = 0; i$1 < this.faces.length; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i$1 ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i$1 ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) { data.data.colors = colors; }\n\t\t\tif ( uvs.length > 0 ) { data.data.uvs = [ uvs ]; } // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t const parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t const values = [];\n\n\t\t\t for ( const key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( var i$1 = 0, il$1 = colors.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i$1 ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i$2 = 0, il$2 = faces.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i$2 ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( var i$3 = 0, il$3 = source.faceVertexUvs.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i$3 ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i$3 ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( var i$4 = 0, il$4 = morphTargets.length; i$4 < il$4; i$4 ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i$4 ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i$4 ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( var j$1 = 0, jl$1 = morphTargets[ i$4 ].vertices.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i$4 ].vertices[ j$1 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i$4 ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( var j$2 = 0, jl$2 = morphTargets[ i$4 ].normals.length; j$2 < jl$2; j$2 ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i$4 ].normals[ j$2 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( var i$5 = 0, il$5 = morphNormals.length; i$5 < il$5; i$5 ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i$5 ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( var j$3 = 0, jl$3 = morphNormals[ i$5 ].vertexNormals.length; j$3 < jl$3; j$3 ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i$5 ].vertexNormals[ j$3 ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i$5 ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( var j$4 = 0, jl$4 = morphNormals[ i$5 ].faceNormals.length; j$4 < jl$4; j$4 ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i$5 ].faceNormals[ j$4 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( var i$6 = 0, il$6 = skinWeights.length; i$6 < il$6; i$6 ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i$6 ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( var i$7 = 0, il$7 = skinIndices.length; i$7 < il$7; i$7 ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i$7 ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( var i$8 = 0, il$8 = lineDistances.length; i$8 < il$8; i$8 ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i$8 ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tvar BoxGeometry = /*@__PURE__*/(function (Geometry) {\n\t\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tGeometry.call(this);\n\n\t\t\tthis.type = 'BoxGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\t\tthis.mergeVertices();\n\n\t\t}\n\n\t\tif ( Geometry ) BoxGeometry.__proto__ = Geometry;\n\t\tBoxGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n\t\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t\treturn BoxGeometry;\n\t}(Geometry));\n\n\t// BoxBufferGeometry\n\n\tvar BoxBufferGeometry = /*@__PURE__*/(function (BufferGeometry) {\n\t\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tBufferGeometry.call(this);\n\n\t\t\tthis.type = 'BoxBufferGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tvar scope = this;\n\n\t\t\twidth = width || 1;\n\t\t\theight = height || 1;\n\t\t\tdepth = depth || 1;\n\n\t\t\t// segments\n\n\t\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t\t// buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tvar numberOfVertices = 0;\n\t\t\tvar groupStart = 0;\n\n\t\t\t// build each side of the box geometry\n\n\t\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\t\tvar segmentWidth = width / gridX;\n\t\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\t\tvar widthHalf = width / 2;\n\t\t\t\tvar heightHalf = height / 2;\n\t\t\t\tvar depthHalf = depth / 2;\n\n\t\t\t\tvar gridX1 = gridX + 1;\n\t\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\t\tvar vertexCounter = 0;\n\t\t\t\tvar groupCount = 0;\n\n\t\t\t\tvar vector = new Vector3();\n\n\t\t\t\t// generate vertices, normals and uvs\n\n\t\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// uvs\n\n\t\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t\t// counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// indices\n\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\t\tfor ( var iy$1 = 0; iy$1 < gridY; iy$1 ++ ) {\n\n\t\t\t\t\tfor ( var ix$1 = 0; ix$1 < gridX; ix$1 ++ ) {\n\n\t\t\t\t\t\tvar a = numberOfVertices + ix$1 + gridX1 * iy$1;\n\t\t\t\t\t\tvar b = numberOfVertices + ix$1 + gridX1 * ( iy$1 + 1 );\n\t\t\t\t\t\tvar c = numberOfVertices + ( ix$1 + 1 ) + gridX1 * ( iy$1 + 1 );\n\t\t\t\t\t\tvar d = numberOfVertices + ( ix$1 + 1 ) + gridX1 * iy$1;\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t\t// increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t\t// update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( BufferGeometry ) BoxBufferGeometry.__proto__ = BufferGeometry;\n\t\tBoxBufferGeometry.prototype = Object.create( BufferGeometry && BufferGeometry.prototype );\n\t\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t\treturn BoxBufferGeometry;\n\t}(BufferGeometry));\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tfunction cloneUniforms( src ) {\n\n\t\tvar dst = {};\n\n\t\tfor ( var u in src ) {\n\n\t\t\tdst[ u ] = {};\n\n\t\t\tfor ( var p in src[ u ] ) {\n\n\t\t\t\tvar property = src[ u ][ p ];\n\n\t\t\t\tif ( property && ( property.isColor ||\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction mergeUniforms( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t}\n\n\t// Legacy\n\n\tvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = {};\n\n\t\tfor ( var name in this.uniforms ) {\n\n\t\t\tvar uniform = this.uniforms[ name ];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) { data.defines = this.defines; }\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tvar extensions = {};\n\n\t\tfor ( var key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) { extensions[ key ] = true; }\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) { data.extensions = extensions; }\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   const w = 1920;\n\t\t *   const h = 1080;\n\t\t *   const fullWidth = w * 3;\n\t\t *   const fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) { left += near * skew / this.getFilmWidth(); }\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar fov = 90, aspect = 1;\n\n\tfunction CubeCamera( near, far, renderTarget ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) { this.updateMatrixWorld(); }\n\n\t\t\tvar currentXrEnabled = renderer.xr.enabled;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.xr.enabled = false;\n\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\t\trenderer.render( scene, cameraPX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\t\trenderer.render( scene, cameraNX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\t\trenderer.render( scene, cameraPY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\t\trenderer.render( scene, cameraNY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\t\trenderer.render( scene, cameraPZ );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\t\trenderer.render( scene, cameraNZ );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction WebGLCubeRenderTarget( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tWebGLRenderTarget.call( this, size, size, options );\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tWebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = texture.format;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tvar scene = new Scene();\n\n\t\tvar shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"#include <common>\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\t\"\tvec2 sampleUV = equirectUv( direction );\",\n\n\t\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\t\t};\n\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\t\tscene.add( mesh );\n\n\t\tvar camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, scene );\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _sphere$1 = new Sphere();\n\tvar _vector$5 = new Vector3();\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromProjectionMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSprite: function ( sprite ) {\n\n\t\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tuv2Transform: { value: new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 },\n\t\t\tmaxMipLevel: { value: 0 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tlightProbe: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {}\n\t\t\t} },\n\n\t\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {}\n\t\t\t} },\n\n\t\t\tspotLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {}\n\t\t\t} },\n\n\t\t\tpointLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAnimation() {\n\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\t\tvar requestId = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) { return; }\n\t\t\t\tif ( animationLoop === null ) { return; }\n\n\t\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.usage;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = 5126;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = 5126;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = 5122;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = 5125;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = 5124;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = 5120;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = 5121;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var iy$1 = 0; iy$1 < gridY; iy$1 ++ ) {\n\n\t\t\tfor ( var ix$1 = 0; ix$1 < gridX; ix$1 ++ ) {\n\n\t\t\t\tvar a = ix$1 + gridX1 * iy$1;\n\t\t\t\tvar b = ix$1 + gridX1 * ( iy$1 + 1 );\n\t\t\t\tvar c = ( ix$1 + 1 ) + gridX1 * ( iy$1 + 1 );\n\t\t\t\tvar d = ( ix$1 + 1 ) + gridX1 * iy$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_maxMipLevel 8.0\\n#define cubeUV_minMipLevel 4.0\\n#define cubeUV_maxTileSize 256.0\\n#define cubeUV_minTileSize 16.0\\nfloat getFace(vec3 direction) {\\n    vec3 absDirection = abs(direction);\\n    float face = -1.0;\\n    if (absDirection.x > absDirection.z) {\\n      if (absDirection.x > absDirection.y)\\n        face = direction.x > 0.0 ? 0.0 : 3.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    } else {\\n      if (absDirection.z > absDirection.y)\\n        face = direction.z > 0.0 ? 2.0 : 5.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    }\\n    return face;\\n}\\nvec2 getUV(vec3 direction, float face) {\\n    vec2 uv;\\n    if (face == 0.0) {\\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\\n    return 0.5 * (uv + 1.0);\\n}\\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\\n  float face = getFace(direction);\\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\\n  mipInt = max(mipInt, cubeUV_minMipLevel);\\n  float faceSize = exp2(mipInt);\\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\\n  vec2 f = fract(uv);\\n  uv += 0.5 - f;\\n  if (face > 2.0) {\\n    uv.y += faceSize;\\n    face -= 3.0;\\n  }\\n  uv.x += face * faceSize;\\n  if(mipInt < cubeUV_maxMipLevel){\\n    uv.y += 2.0 * cubeUV_maxTileSize;\\n  }\\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\\n  uv *= texelSize;\\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x += texelSize;\\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.y += texelSize;\\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x -= texelSize;\\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  vec3 tm = mix(tl, tr, f.x);\\n  vec3 bm = mix(bl, br, f.x);\\n  return mix(tm, bm, f.y);\\n}\\n#define r0 1.0\\n#define v0 0.339\\n#define m0 -2.0\\n#define r1 0.8\\n#define v1 0.276\\n#define m1 -1.0\\n#define r4 0.4\\n#define v4 0.046\\n#define m4 2.0\\n#define r5 0.305\\n#define v5 0.016\\n#define m5 3.0\\n#define r6 0.21\\n#define v6 0.0038\\n#define m6 4.0\\nfloat roughnessToMip(float roughness) {\\n  float mip = 0.0;\\n  if (roughness >= r1) {\\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\\n  } else if (roughness >= r4) {\\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\\n  } else if (roughness >= r5) {\\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\\n  } else if (roughness >= r6) {\\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\\n  } else {\\n    mip = -2.0 * log2(1.16 * roughness);  }\\n  return mip;\\n}\\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\\n  float mipF = fract(mip);\\n  float mipInt = floor(mip);\\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\\n  if (mipF == 0.0) {\\n    return vec4(color0, 1.0);\\n  } else {\\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\\n    return vec4(mix(color0, color1, mipF), 1.0);\\n  }\\n}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec2 sampleUV = equirectUv( reflectVec );\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV = equirectUv( reflectVec );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3\\tdiffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 1.0 },\n\t\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\ttoon: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\t\tt2D: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t} ] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearcoat: { value: 0 },\n\t\t\t\tclearcoatMap: { value: null },\n\t\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t\tclearcoatNormalMap: { value: null },\n\t\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\t\ttransparency: { value: 0 },\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\n\t\tvar currentBackground = null;\n\t\tvar currentBackgroundVersion = 0;\n\t\tvar currentTonemapping = null;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.isScene === true ? scene.background : null;\n\n\t\t\t// Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\t\t\tvar xr = renderer.xr;\n\t\t\tvar session = xr.getSession && xr.getSession();\n\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\t\tbackground = null;\n\n\t\t\t}\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = background.isWebGLCubeRenderTarget ? background.texture : background;\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = texture;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== texture.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = texture.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tbackground.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Takahiro / https://github.com/takahirox\n\t */\n\n\tfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\t\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\n\t\tvar extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\t\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\t\tvar bindingStates = {};\n\n\t\tvar defaultState = createBindingState( null );\n\t\tvar currentState = defaultState;\n\n\t\tfunction setup( object, material, program, geometry, index ) {\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( vaoAvailable ) {\n\n\t\t\t\tvar state = getBindingState( geometry, program, material );\n\n\t\t\t\tif ( currentState !== state ) {\n\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\t\tif ( updateBuffers ) { saveCache( geometry ); }\n\n\t\t\t} else {\n\n\t\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\t\tupdateBuffers = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, 34963 );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.createVertexArray(); }\n\n\t\t\treturn extension.createVertexArrayOES();\n\n\t\t}\n\n\t\tfunction bindVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.bindVertexArray( vao ); }\n\n\t\t\treturn extension.bindVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction deleteVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.deleteVertexArray( vao ); }\n\n\t\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction getBindingState( geometry, program, material ) {\n\n\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\t\tif ( programMap === undefined ) {\n\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t\t}\n\n\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\tif ( stateMap === undefined ) {\n\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t\t}\n\n\t\t\tvar state = stateMap[ wireframe ];\n\n\t\t\tif ( state === undefined ) {\n\n\t\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\t\tstateMap[ wireframe ] = state;\n\n\t\t\t}\n\n\t\t\treturn state;\n\n\t\t}\n\n\t\tfunction createBindingState( vao ) {\n\n\t\t\tvar newAttributes = [];\n\t\t\tvar enabledAttributes = [];\n\t\t\tvar attributeDivisors = [];\n\n\t\t\tfor ( var i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\t\t\t\tenabledAttributes[ i ] = 0;\n\t\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction needsUpdate( geometry ) {\n\n\t\t\tvar cachedAttributes = currentState.attributes;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) { return true; }\n\n\t\t\tfor ( var key in geometryAttributes ) {\n\n\t\t\t\tvar cachedAttribute = cachedAttributes[ key ];\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) { return true; }\n\n\t\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) { return true; }\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction saveCache( geometry ) {\n\n\t\t\tvar cache = {};\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ key ] = data;\n\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\n\t\t\tfor ( var i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\t\tvar attributeDivisors = currentState.attributeDivisors;\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor ( var i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\t\tgl.vertexAttribIPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t} else {\n\n\t\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) { return; }\n\n\t\t\t}\n\n\t\t\tinitAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\t\tvar attribute$1 = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute$1 === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer$1 = attribute$1.buffer;\n\t\t\t\t\t\tvar type$1 = attribute$1.type;\n\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer$1 );\n\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type$1, false, 64, 0 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type$1, false, 64, 16 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type$1, false, 64, 32 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type$1, false, 64, 48 );\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\treset();\n\n\t\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\t\tif ( bindingStates[ geometry.id ] === undefined ) { return; }\n\n\t\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometry.id ];\n\n\t\t}\n\n\t\tfunction releaseStatesOfProgram( program ) {\n\n\t\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\t\tif ( programMap[ program.id ] === undefined ) { continue; }\n\n\t\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ program.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\tresetDefaultState();\n\n\t\t\tif ( currentState === defaultState ) { return; }\n\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\t// for backward-compatilibity\n\n\t\tfunction resetDefaultState() {\n\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) { return maxAnisotropy; }\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\t/* eslint-disable no-undef */\n\t\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t\t/* eslint-enable no-undef */\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tvar maxTextures = gl.getParameter( 34930 );\n\t\tvar maxVertexTextures = gl.getParameter( 35660 );\n\t\tvar maxTextureSize = gl.getParameter( 3379 );\n\t\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\t\tvar maxAttributes = gl.getParameter( 34921 );\n\t\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\t\tvar maxVaryings = gl.getParameter( 36348 );\n\t\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\t\tmaxSamples: maxSamples\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this;\n\n\t\tvar globalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false;\n\n\t\tvar plane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\t\tvar dstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\t\tvar geometries = new WeakMap();\n\t\tvar wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tgeometries.delete( geometry );\n\n\t\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry ) { return buffergeometry; }\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries.set( geometry, buffergeometry );\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name$1 ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateWireframeAttribute( geometry ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryPosition = geometry.attributes.position;\n\t\t\tvar version = 0;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array$1 = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = ( array$1.length / 3 ) - 1; i$1 < l$1; i$1 += 3 ) {\n\n\t\t\t\t\tvar a$1 = i$1 + 0;\n\t\t\t\t\tvar b$1 = i$1 + 1;\n\t\t\t\t\tvar c$1 = i$1 + 2;\n\n\t\t\t\t\tindices.push( a$1, b$1, b$1, c$1, c$1, a$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t\tattribute.version = version;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t\t//\n\n\t\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( previousAttribute ) { attributes.remove( previousAttribute ); }\n\n\t\t\t//\n\n\t\t\twireframeAttributes.set( geometry, attribute );\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( currentAttribute ) {\n\n\t\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get( geometry );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\tinstanceCount = instanceCount || 1;\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 4:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction numericalSort( a, b ) {\n\n\t\treturn a[ 0 ] - b[ 0 ];\n\n\t}\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar workInfluences = [];\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t\t}\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tvar length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i$1 = 0; i$1 < length; i$1 ++ ) {\n\n\t\t\t\tvar influence = influences[ i$1 ];\n\n\t\t\t\tinfluence[ 0 ] = i$1;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i$1 ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( var i$2 = 0; i$2 < 8; i$2 ++ ) {\n\n\t\t\t\tif ( i$2 < length && influences[ i$2 ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i$2 ][ 0 ] = influences[ i$2 ][ 0 ];\n\t\t\t\t\tworkInfluences[ i$2 ][ 1 ] = influences[ i$2 ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i$2 ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i$2 ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\tvar morphInfluencesSum = 0;\n\n\t\t\tfor ( var i$3 = 0; i$3 < 8; i$3 ++ ) {\n\n\t\t\t\tvar influence$1 = workInfluences[ i$3 ];\n\t\t\t\tvar index = influence$1[ 0 ];\n\t\t\t\tvar value = influence$1[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i$3 ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i$3, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i$3 ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i$3, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i$3 ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i$3 ) !== undefined ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i$3 ) !== undefined ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i$3 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\t\tvar updateMap = new WeakMap();\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateMap = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction DataTexture2DArray( data, width, height, depth ) {\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture2DArray.prototype = Object.create( Texture.prototype );\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\t/**\n\t * @author Artur Trzesiok\n\t */\n\n\tfunction DataTexture3D( data, width, height, depth ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\n\t}\n\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture2dArray = new DataTexture2DArray();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\tvar mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) { return array; }\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) { return false; }\n\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) { return false; }\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( textures, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValueV1f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValueM2( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM3( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM4( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT2DArray1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValueV1i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\tfunction setValueV2i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV3i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV4i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// uint\n\n\tfunction setValueV1ui( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1ui( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\tfunction setValueV1fArray( gl, v ) {\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\tfunction setValueV1iArray( gl, v ) {\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV2iArray( gl, v ) {\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3iArray( gl, v ) {\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4iArray( gl, v ) {\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t}\n\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 2 );\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV3fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 3 );\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV4fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM3Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 9 );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM4Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 16 );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\t\tthis.cache = new Float32Array( data.length );\n\n\t\t}\n\n\t\tcopyArray( cache, data );\n\n\t};\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\t\tvar id = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) { id = id | 0; } // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map;\n\t\t\t\tvar next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) { u.setValue( gl, value, textures ); }\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) { this.setValue( gl, name, v ); }\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) { r.push( u ); }\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE', '( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\n\t\t}\n\n\t}\n\n\tfunction getShaderErrors( gl, shader, type ) {\n\n\t\tvar status = gl.getShaderParameter( shader, 35713 );\n\t\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\t\tif ( status && log === '' ) { return ''; }\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tvar source = gl.getShaderSource( shader );\n\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\t\ttoneMappingName = 'Linear';\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( parameters ) {\n\n\t\tvar chunks = [\n\t\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) { continue; }\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35721 );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\t// Resolve Includes\n\n\tvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes( string ) {\n\n\t\treturn string.replace( includePattern, includeReplacer );\n\n\t}\n\n\tfunction includeReplacer( match, include ) {\n\n\t\tvar string = ShaderChunk[ include ];\n\n\t\tif ( string === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn resolveIncludes( string );\n\n\t}\n\n\t// Unroll Loops\n\n\tvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tvar unrollLoopPattern = /#pragma unroll_loop_start[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}[\\s]+?#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops( string ) {\n\n\t\treturn string\n\t\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n\t}\n\n\tfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\t\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\t\treturn loopReplacer( match, start, end, snippet );\n\n\t}\n\n\tfunction loopReplacer( match, start, end, snippet ) {\n\n\t\tvar string = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tstring += snippet\n\t\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t\t}\n\n\t\treturn string;\n\n\t}\n\n\t//\n\n\tfunction generatePrecision( parameters ) {\n\n\t\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\t\tif ( parameters.precision === \"highp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t\t}\n\n\t\treturn precisionstring;\n\n\t}\n\n\tfunction generateShadowMapTypeDefine( parameters ) {\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapTypeDefine( parameters ) {\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapModeDefine( parameters ) {\n\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapModeDefine;\n\n\t}\n\n\tfunction generateEnvMapBlendingDefine( parameters ) {\n\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\n\t}\n\n\tfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t\tvar gl = renderer.getContext();\n\n\t\tvar defines = parameters.defines;\n\n\t\tvar vertexShader = parameters.vertexShader;\n\t\tvar fragmentShader = parameters.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\t\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\t\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\t\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( parameters.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = resolveIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = resolveIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {\n\n\t\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\t\tif ( parameters.isShaderMaterial &&\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t\t}\n\n\t\t\t// GLSL 3.0 conversion\n\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t//\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount ++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities, bindingStates ) {\n\n\t\tvar programs = [];\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\t\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tvar vertexTextures = capabilities.vertexTextures;\n\n\t\tvar precision = capabilities.precision;\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\",\n\t\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatMap\", \"clearcoatRoughnessMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\t\"sheen\"\n\t\t];\n\n\t\tfunction getShaderObject( material, shaderID ) {\n\n\t\t\tvar shaderobject;\n\n\t\t\tif ( shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ shaderID ];\n\n\t\t\t\tshaderobject = {\n\t\t\t\t\tname: material.name || material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tshaderobject = {\n\t\t\t\t\tname: material.name || material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn shaderobject;\n\n\t\t}\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tfunction getParameters( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\t\tvar envMap = material.envMap || environment;\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar shaderobject = getShaderObject( material, shaderID );\n\t\t\tmaterial.onBeforeCompile( shaderobject, renderer );\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tisWebGL2: isWebGL2,\n\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: shaderobject.name,\n\n\t\t\t\tuniforms: shaderobject.uniforms,\n\t\t\t\tvertexShader: shaderobject.vertexShader,\n\t\t\t\tfragmentShader: shaderobject.fragmentShader,\n\t\t\t\tdefines: material.defines,\n\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial,\n\t\t\t\tisShaderMaterial: material.isShaderMaterial,\n\n\t\t\t\tprecision: precision,\n\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\t\tmatcap: !! material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\t\tenvMap: !! envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tsheen: !! material.sheen,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,\n\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t}\n\n\t\tfunction getProgramCacheKey( parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( parameters.fragmentShader );\n\t\t\t\tarray.push( parameters.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in parameters.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parameters.isRawShaderMaterial === undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t\t}\n\n\t\t\t\tarray.push( renderer.outputEncoding );\n\t\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t\t}\n\n\t\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\t\treturn array.join();\n\n\t\t}\n\n\t\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction releaseProgram( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tvar map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tvar defaultProgram = { id: - 1 };\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\trenderItemsIndex ++;\n\n\t\t\treturn renderItem;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t}\n\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t\t}\n\n\t\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\t\tif ( opaque.length > 1 ) { opaque.sort( customOpaqueSort || painterSortStable ); }\n\t\t\tif ( transparent.length > 1 ) { transparent.sort( customTransparentSort || reversePainterSortStable ); }\n\n\t\t}\n\n\t\tfunction finish() {\n\n\t\t\t// Clear references from inactive renderItems in the list\n\n\t\t\tfor ( var i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\t\tvar renderItem = renderItems[ i ];\n\n\t\t\t\tif ( renderItem.id === null ) { break; }\n\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\tlists.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar cameras = lists.get( scene );\n\t\t\tvar list;\n\n\t\t\tif ( cameras === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set( scene, new WeakMap() );\n\t\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tlist = cameras.get( camera );\n\t\t\t\tif ( list === undefined ) {\n\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tcameras.set( camera, list );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction ShadowUniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n\n\tvar nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\t\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar shadowCache = ShadowUniformsCache();\n\n\t\tvar state = {\n\n\t\t\tversion: 0,\n\n\t\t\thash: {\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\n\t\t\t\tnumDirectionalShadows: - 1,\n\t\t\t\tnumPointShadows: - 1,\n\t\t\t\tnumSpotShadows: - 1\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\n\t\t};\n\n\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe.push( new Vector3() ); }\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe[ i ].set( 0, 0, 0 ); }\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar numDirectionalShadows = 0;\n\t\t\tvar numPointShadows = 0;\n\t\t\tvar numSpotShadows = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t\tfor ( var i$1 = 0, l = lights.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tvar light = lights[ i$1 ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms$1 = cache.get( light );\n\n\t\t\t\t\tuniforms$1.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$1.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms$1.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms$1.distance = distance;\n\n\t\t\t\t\tuniforms$1.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms$1.direction.sub( vector3 );\n\t\t\t\t\tuniforms$1.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms$1.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms$1.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms$1.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow$1 = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms$1 = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms$1.shadowBias = shadow$1.bias;\n\t\t\t\t\t\tshadowUniforms$1.shadowNormalBias = shadow$1.normalBias;\n\t\t\t\t\t\tshadowUniforms$1.shadowRadius = shadow$1.radius;\n\t\t\t\t\t\tshadowUniforms$1.shadowMapSize = shadow$1.mapSize;\n\n\t\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms$1;\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms$1;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms$2 = cache.get( light );\n\n\t\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\t\tuniforms$2.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms$2.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$2.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms$2.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms$2.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms$2.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms$2.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms$2;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms$3 = cache.get( light );\n\n\t\t\t\t\tuniforms$3.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$3.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms$3.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms$3.distance = light.distance;\n\t\t\t\t\tuniforms$3.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow$2 = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms$2 = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms$2.shadowBias = shadow$2.bias;\n\t\t\t\t\t\tshadowUniforms$2.shadowNormalBias = shadow$2.normalBias;\n\t\t\t\t\t\tshadowUniforms$2.shadowRadius = shadow$2.radius;\n\t\t\t\t\t\tshadowUniforms$2.shadowMapSize = shadow$2.mapSize;\n\t\t\t\t\t\tshadowUniforms$2.shadowCameraNear = shadow$2.camera.near;\n\t\t\t\t\t\tshadowUniforms$2.shadowCameraFar = shadow$2.camera.far;\n\n\t\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms$2;\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[ pointLength ] = uniforms$3;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms$4 = cache.get( light );\n\n\t\t\t\t\tuniforms$4.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$4.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms$4.direction.normalize();\n\n\t\t\t\t\tuniforms$4.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms$4.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms$4;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tvar hash = state.hash;\n\n\t\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\t\thash.pointLength !== pointLength ||\n\t\t\t\thash.spotLength !== spotLength ||\n\t\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\t\thash.hemiLength !== hemiLength ||\n\t\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\t\tstate.version = nextVersion ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLRenderState() {\n\n\t\tvar lights = new WebGLLights();\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( camera ) {\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates() {\n\n\t\tvar renderStates = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\trenderStates.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar renderState;\n\n\t\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum();\n\n\t\tvar _shadowMapSize = new Vector2(),\n\t\t\t_viewportSize = new Vector2(),\n\n\t\t\t_viewport = new Vector4(),\n\n\t\t\t_depthMaterials = [],\n\t\t\t_distanceMaterials = [],\n\n\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\t\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: { value: null },\n\t\t\t\tresolution: { value: new Vector2() },\n\t\t\t\tradius: { value: 4.0 }\n\t\t\t},\n\n\t\t\tvertexShader: vsm_vert,\n\n\t\t\tfragmentShader: vsm_frag\n\n\t\t} );\n\n\t\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\t\tvar fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute(\n\t\t\t\"position\",\n\t\t\tnew BufferAttribute(\n\t\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) { return; }\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) { return; }\n\n\t\t\tif ( lights.length === 0 ) { return; }\n\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.setBlending( NoBlending );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) { continue; }\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars$1 = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars$1 );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t\t_viewport.set(\n\t\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t\t);\n\n\t\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t\t}\n\n\t\t\t\t// do blur pass for VSM\n\n\t\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t\t};\n\n\t\tfunction VSMPass( shadow, camera ) {\n\n\t\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t\t// vertical pass\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t\t// horizonal pass\n\n\t\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t\t}\n\n\t\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _depthMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_depthMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _distanceMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\t\tvar result = null;\n\n\t\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( light.isPointLight === true ) {\n\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( customMaterial === undefined ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = false;\n\n\t\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif ( type === VSMShadowMap ) {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t\t} else {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial$1 = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial$1, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar enabledCapabilities = {};\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( 35661 );\n\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter( 7938 );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, 10241, 9728 );\n\t\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\t\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( 2929 );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( 2884 );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvar equationToGL = {};\n\t\tequationToGL[ AddEquation ] = 32774;\n\t\tequationToGL[ SubtractEquation ] = 32778;\n\t\tequationToGL[ ReverseSubtractEquation ] = 32779;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\tequationToGL[ MinEquation ] = 32775;\n\t\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar factorToGL = {};\n\t\tfactorToGL[ ZeroFactor ] = 0;\n\t\tfactorToGL[ OneFactor ] = 1;\n\t\tfactorToGL[ SrcColorFactor ] = 768;\n\t\tfactorToGL[ SrcAlphaFactor ] = 770;\n\t\tfactorToGL[ SrcAlphaSaturateFactor ] = 776;\n\t\tfactorToGL[ DstColorFactor ] = 774;\n\t\tfactorToGL[ DstAlphaFactor ] = 772;\n\t\tfactorToGL[ OneMinusSrcColorFactor ] = 769;\n\t\tfactorToGL[ OneMinusSrcAlphaFactor ] = 771;\n\t\tfactorToGL[ OneMinusDstColorFactor ] = 775;\n\t\tfactorToGL[ OneMinusDstAlphaFactor ] = 773;\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\t\tdisable( 3042 );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\t\tenable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( 2884 )\n\t\t\t\t: enable( 2884 );\n\n\t\t\tvar flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) { flipSided = ! flipSided; }\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tvar stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest( stencilWrite );\n\t\t\tif ( stencilWrite ) {\n\n\t\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t\t}\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( 2884 );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 2884 );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) { gl.lineWidth( width ); }\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( 32823 );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 32823 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( 3089 );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 3089 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) { webglSlot = 33984 + maxTextures - 1; }\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unbindTexture() {\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar maxTextures = capabilities.maxTextures;\n\t\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\t\tvar maxTextureSize = capabilities.maxTextureSize;\n\t\tvar maxSamples = capabilities.maxSamples;\n\n\t\tvar _videoTextures = new WeakMap();\n\t\tvar _canvas;\n\n\t\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\t\tvar useOffscreenCanvas = false;\n\n\t\ttry {\n\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t\t} catch ( err ) {\n\n\t\t\t// Ignore any errors\n\n\t\t}\n\n\t\tfunction createCanvas( width, height ) {\n\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\t\treturn useOffscreenCanvas ?\n\t\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t}\n\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\t\tvar scale = 1;\n\n\t\t\t// handle case if texture exceeds max size\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t}\n\n\t\t\t// only perform resize if necessary\n\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t\t// only perform resize for certain image types\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\t\tvar floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\t\tif ( _canvas === undefined ) { _canvas = createCanvas( width, height ); }\n\n\t\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\t\treturn canvas;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( isWebGL2 ) { return false; }\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\t}\n\n\t\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\t\tif ( isWebGL2 === false ) { return glFormat; }\n\n\t\t\tif ( internalFormatName !== null ) {\n\n\t\t\t\tif ( _gl[ internalFormatName ] !== undefined ) { return _gl[ internalFormatName ]; }\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t\t}\n\n\t\t\tvar internalFormat = glFormat;\n\n\t\t\tif ( glFormat === 6403 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 33326; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 33325; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 33321; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6407 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34837; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34843; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32849; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6408 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34836; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34842; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32856; }\n\n\t\t\t}\n\n\t\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\t\treturn 9728;\n\n\t\t\t}\n\n\t\t\treturn 9729;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\t_videoTextures.delete( texture );\n\n\t\t\t}\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) { return; }\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) { return; }\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] ); }\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) { _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer ); }\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tvar textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\n\t\t\ttextureUnits = 0;\n\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\n\t\t\tvar textureUnit = textureUnits;\n\n\t\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) { updateVideoTexture( texture ); }\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture2DArray( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tif ( texture.image.length !== 6 ) { return; }\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tvar mipmaps;\n\n\t\t\t\tif ( isCompressed ) {\n\n\t\t\t\t\tfor ( var i$1 = 0; i$1 < 6; i$1 ++ ) {\n\n\t\t\t\t\t\tmipmaps = cubeImage[ i$1 ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i$1, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$1, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < 6; i$2 ++ ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, 0, glInternalFormat, cubeImage[ i$2 ].width, cubeImage[ i$2 ].height, 0, glFormat, glType, cubeImage[ i$2 ].data );\n\n\t\t\t\t\t\t\tfor ( var j$1 = 0; j$1 < mipmaps.length; j$1 ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap$1 = mipmaps[ j$1 ];\n\t\t\t\t\t\t\t\tvar mipmapImage = mipmap$1.image[ i$2 ].image;\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, j$1 + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, 0, glInternalFormat, glFormat, glType, cubeImage[ i$2 ] );\n\n\t\t\t\t\t\t\tfor ( var j$2 = 0; j$2 < mipmaps.length; j$2 ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap$2 = mipmaps[ j$2 ];\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, j$2 + 1, glInternalFormat, glFormat, glType, mipmap$2.image[ i$2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tvar wrappingToGL = {};\n\t\twrappingToGL[ RepeatWrapping ] = 10497;\n\t\twrappingToGL[ ClampToEdgeWrapping ] = 33071;\n\t\twrappingToGL[ MirroredRepeatWrapping ] = 33648;\n\n\t\tvar filterToGL = {};\n\t\tfilterToGL[ NearestFilter ] = 9728;\n\t\tfilterToGL[ NearestMipmapNearestFilter ] = 9984;\n\t\tfilterToGL[ NearestMipmapLinearFilter ] = 9986;\n\t\tfilterToGL[ LinearFilter ] = 9729;\n\t\tfilterToGL[ LinearMipmapNearestFilter ] = 9985;\n\t\tfilterToGL[ LinearMipmapLinearFilter ] = 9987;\n\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\t\tif ( supportsMips ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) { return; }\n\t\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) { return; }\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initTexture( textureProperties, texture ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tvar textureType = 3553;\n\n\t\t\tif ( texture.isDataTexture2DArray ) { textureType = 35866; }\n\t\t\tif ( texture.isDataTexture3D ) { textureType = 32879; }\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format );\n\n\t\t\tvar glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tvar mipmap;\n\t\t\tvar mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = mipmaps.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i$1 ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i$1, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, i$1, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = mipmaps.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i$2 ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i$2, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\tvar glInternalFormat = 33189;\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples$1 = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples$1, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\tvar glInternalFormat$1 = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples$2 = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples$2, glInternalFormat$1, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat$1, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\t\tif ( isCube ) { throw new Error( 'Depth Texture with cube render targets is not supported' ); }\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) { throw new Error( 'target.depthTexture not supported in Cube render targets' ); }\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t\t}\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < 6; i$1 ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i$1 ], renderTarget, 36064, 34069 + i$1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 34067, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 3553, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar mask = 16384;\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) { mask |= 256; }\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) { mask |= 1024; }\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t\t_videoTextures.set( texture, frame );\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// backwards compatibility\n\n\t\tvar warnedTexture2D = false;\n\t\tvar warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTexture2D = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( texture, slot );\n\n\t\t}\n\n\t\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTextureCube = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\tsetTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === UnsignedByteType ) { return 5121; }\n\t\t\tif ( p === UnsignedShort4444Type ) { return 32819; }\n\t\t\tif ( p === UnsignedShort5551Type ) { return 32820; }\n\t\t\tif ( p === UnsignedShort565Type ) { return 33635; }\n\n\t\t\tif ( p === ByteType ) { return 5120; }\n\t\t\tif ( p === ShortType ) { return 5122; }\n\t\t\tif ( p === UnsignedShortType ) { return 5123; }\n\t\t\tif ( p === IntType ) { return 5124; }\n\t\t\tif ( p === UnsignedIntType ) { return 5125; }\n\t\t\tif ( p === FloatType ) { return 5126; }\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 5131; }\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) { return 6406; }\n\t\t\tif ( p === RGBFormat ) { return 6407; }\n\t\t\tif ( p === RGBAFormat ) { return 6408; }\n\t\t\tif ( p === LuminanceFormat ) { return 6409; }\n\t\t\tif ( p === LuminanceAlphaFormat ) { return 6410; }\n\t\t\tif ( p === DepthFormat ) { return 6402; }\n\t\t\tif ( p === DepthStencilFormat ) { return 34041; }\n\t\t\tif ( p === RedFormat ) { return 6403; }\n\n\t\t\t// WebGL2 formats.\n\n\t\t\tif ( p === RedIntegerFormat ) { return 36244; }\n\t\t\tif ( p === RGFormat ) { return 33319; }\n\t\t\tif ( p === RGIntegerFormat ) { return 33320; }\n\t\t\tif ( p === RGBIntegerFormat ) { return 36248; }\n\t\t\tif ( p === RGBAIntegerFormat ) { return 36249; }\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGB_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_ETC2_Format ) { return extension.COMPRESSED_RGB8_ETC2; }\n\t\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) { return extension.COMPRESSED_RGBA8_ETC2_EAC; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 34042; }\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group,\n\n\t\tisGroup: true\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebXRController() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\n\t}\n\n\tObject.assign( WebXRController.prototype, {\n\n\t\tconstructor: WebXRController,\n\n\t\tgetTargetRaySpace: function () {\n\n\t\t\tif ( this._targetRay === null ) {\n\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\n\t\t},\n\n\t\tgetGripSpace: function () {\n\n\t\t\tif ( this._grip === null ) {\n\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this._grip;\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function ( inputSource ) {\n\n\t\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\t\tvar inputPose = null;\n\t\t\tvar gripPose = null;\n\n\t\t\tvar targetRay = this._targetRay;\n\t\t\tvar grip = this._grip;\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t\t}\n\n\t\t\tif ( grip !== null ) {\n\n\t\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebXRManager( renderer, gl ) {\n\n\t\tvar scope = this;\n\n\t\tvar session = null;\n\n\t\tvar framebufferScaleFactor = 1.0;\n\n\t\tvar referenceSpace = null;\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tvar pose = null;\n\n\t\tvar controllers = [];\n\t\tvar inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tvar cameras = [ cameraL, cameraR ];\n\n\t\tvar cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tvar _currentDepthNear = null;\n\t\tvar _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tvar controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tvar controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tvar controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t//\n\n\t\t\trenderer.setFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tfunction onRequestReferenceSpace( value ) {\n\n\t\t\treferenceSpace = value;\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.isPresenting = true;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t\tvar attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tgl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tvar layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tvar baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t\t//\n\n\t\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction updateInputSources( event ) {\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( var i$1 = 0; i$1 < event.removed.length; i$1 ++ ) {\n\n\t\t\t\tvar inputSource = event.removed[ i$1 ];\n\t\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( var i$2 = 0; i$2 < event.added.length; i$2 ++ ) {\n\n\t\t\t\tvar inputSource$1 = event.added[ i$2 ];\n\t\t\t\tvar controller$1 = inputSourcesMap.get( inputSource$1 );\n\n\t\t\t\tif ( controller$1 ) {\n\n\t\t\t\t\tcontroller$1.dispatchEvent( { type: 'connected', data: inputSource$1 } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar cameraLPos = new Vector3();\n\t\tvar cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * @author jsantell / https://www.jsantell.com/\n\t\t *\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tvar left = near * leftFov;\n\t\t\tvar right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tvar near2 = near + zOffset;\n\t\t\tvar far2 = far + zOffset;\n\t\t\tvar left2 = left - xOffset;\n\t\t\tvar right2 = right + ( ipd - xOffset );\n\t\t\tvar top2 = topFov * far / far2 * near2;\n\t\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i$1 = 0, l = children.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tchildren[ i$1 ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tvar views = pose.views;\n\t\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tvar cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tvar view = views[ i ];\n\t\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tvar camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\tfor ( var i$1 = 0; i$1 < controllers.length; i$1 ++ ) {\n\n\t\t\t\tvar controller = controllers[ i$1 ];\n\t\t\t\tvar inputSource = inputSources[ i$1 ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time, frame ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n\tObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLMaterials( properties ) {\n\n\t\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshMaterialUniforms( uniforms, material, environment, pixelRatio, height ) {\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material, environment );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( uniforms, material, environment );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tuniforms.color.value.copy( material.color );\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsCommon( uniforms, material, environment ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tvar envMap = material.envMap || environment;\n\n\t\t\tif ( envMap ) {\n\n\t\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( envMap ).__maxMipLevel;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\t\t\tvar uv2ScaleMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t\t} else if ( material.lightMap ) {\n\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material, environment ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap || environment ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material, environment ) {\n\n\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif ( material.sheen ) { uniforms.sheen.value.copy( material.sheen ); }\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniforms.transparency.value = material.transparency;\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null;\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.outputEncoding = LinearEncoding;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this;\n\n\t\tvar _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tvar _framebuffer = null;\n\n\t\tvar _currentActiveCubeFace = 0;\n\t\tvar _currentActiveMipmapLevel = 0;\n\t\tvar _currentRenderTarget = null;\n\t\tvar _currentFramebuffer = null;\n\t\tvar _currentMaterialId = - 1;\n\n\t\tvar _currentCamera = null;\n\t\tvar _currentArrayCamera = null;\n\n\t\tvar _currentViewport = new Vector4();\n\t\tvar _currentScissor = new Vector4();\n\t\tvar _currentScissorTest = null;\n\n\t\t//\n\n\t\tvar _width = _canvas.width;\n\t\tvar _height = _canvas.height;\n\n\t\tvar _pixelRatio = 1;\n\t\tvar _opaqueSort = null;\n\t\tvar _transparentSort = null;\n\n\t\tvar _viewport = new Vector4( 0, 0, _width, _height );\n\t\tvar _scissor = new Vector4( 0, 0, _width, _height );\n\t\tvar _scissorTest = false;\n\n\t\t// frustum\n\n\t\tvar _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tvar _clipping = new WebGLClipping();\n\t\tvar _clippingEnabled = false;\n\t\tvar _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tvar _projScreenMatrix = new Matrix4();\n\n\t\tvar _vector3 = new Vector3();\n\n\t\tvar _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl = _context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( var i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tvar contextName = contextNames[ i ];\n\t\t\t\tvar context = _canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) { return context; }\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t};\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tvar contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, attributes, geometries, objects;\n\t\tvar programCache, materials, renderLists, renderStates;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tvar utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, bindingStates );\n\t\t\tmaterials = new WebGLMaterials( properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates();\n\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tvar xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.loseContext(); }\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.restoreContext(); }\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) { return; }\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\t\ttarget = new Vector4();\n\n\t\t\t}\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn background.getClearColor();\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) { bits |= 16384; }\n\t\t\tif ( depth === undefined || depth ) { bits |= 256; }\n\t\t\tif ( stencil === undefined || stencil ) { bits |= 1024; }\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\t\tbindingStates.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) { buffers.position = _gl.createBuffer(); }\n\t\t\tif ( object.hasNormals && ! buffers.normal ) { buffers.normal = _gl.createBuffer(); }\n\t\t\tif ( object.hasUvs && ! buffers.uv ) { buffers.uv = _gl.createBuffer(); }\n\t\t\tif ( object.hasColors && ! buffers.color ) { buffers.color = _gl.createBuffer(); }\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) { scene = _emptyScene; } // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tif ( index === null ) {\n\n\t\t\t\tif ( position === undefined || position.count === 0 ) { return; }\n\n\t\t\t} else if ( index.count === 0 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t}\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) { return; }\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) { lineWidth = 1; } // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( 0 );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tvar instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tvar compiled = new WeakMap();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tvar material2 = material[ i ];\n\n\t\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( xr.isPresenting ) { return; }\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof window !== 'undefined' ) { animation.setContext( window ); }\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tvar renderTarget, forceClear;\n\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t\t}\n\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\t\tforceClear = arguments[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) { return; }\n\n\t\t\t// reset caching for this frame\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) { scene.updateMatrixWorld(); }\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) { camera.updateMatrixWorld(); }\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tcamera = xr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) { scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget ); }\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled === true ) { _clipping.beginShadows(); }\n\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tif ( _clippingEnabled === true ) { _clipping.endShadows(); }\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) { this.info.reset(); }\n\n\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( opaqueObjects.length > 0 ) { renderObjects( opaqueObjects, scene, camera ); }\n\t\t\tif ( transparentObjects.length > 0 ) { renderObjects( transparentObjects, scene, camera ); }\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) { scene.onAfterRender( _this, scene, camera ); }\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\t// _gl.finish();\n\n\t\t\tcurrentRenderList = null;\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) { object.update( camera ); }\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry$1 = objects.update( object );\n\t\t\t\t\t\tvar material$1 = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material$1 ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry$1.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material$1[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry$1, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material$1.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry$1, material$1, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i$1 = 0, l$1 = children.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tprojectObject( children[ i$1 ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tvar overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tbindingStates.reset();\n\n\t\t\t\trenderObjectImmediate( object, program );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t}\n\n\t\tfunction initMaterial( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) { scene = _emptyScene; } // scene could be a Mesh, Line, Points, ...\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tvar lightsStateVersion = lights.state.version;\n\n\t\t\tvar parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\t\tvar programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\t\tprogramChange = false;\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < _this.maxMorphNormals; i$1 ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i$1 ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) { scene = _emptyScene; } // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tvar encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\n\t\t\tvar materialProperties = properties.get( material );\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, environment, _pixelRatio, _height );\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) { m_uniforms.ltc_1.value = UniformsLib.LTC_1; }\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) { m_uniforms.ltc_2.value = UniformsLib.LTC_2; }\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\t//\n\t\tthis.setFramebuffer = function ( value ) {\n\n\t\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) { _gl.bindFramebuffer( 36160, value ); }\n\n\t\t\t_framebuffer = value;\n\n\t\t};\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar _webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = _webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = _webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar levelScale = Math.pow( 2, - level );\n\t\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\t\tvar glFormat = utils.convert( texture.format );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) { _gl.generateMipmap( 3553 ); }\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGL1Renderer( parameters ) {\n\n\t\tWebGLRenderer.call( this, parameters );\n\n\t}\n\n\tWebGL1Renderer.prototype = Object.assign( Object.create( WebGLRenderer.prototype ), {\n\n\t\tconstructor: WebGL1Renderer,\n\n\t\tisWebGL1Renderer: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tObject.assign( FogExp2.prototype, {\n\n\t\tisFogExp2: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new FogExp2( this.color, this.density );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tObject.assign( Fog.prototype, {\n\n\t\tisFog: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new Fog( this.color, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t\t}\n\n\t\t\tvar array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\t\tvar ib = new InterleavedBuffer( array, this.stride );\n\t\t\tib.setUsage( this.usage );\n\n\t\t\treturn ib;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\t// generate UUID for array buffer if necessary\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tvar _vector$6 = new Vector3();\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$6.x = this.getX( i );\n\t\t\t\t_vector$6.y = this.getY( i );\n\t\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( var j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( var j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\t// save as true interlaved attribtue\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _geometry;\n\n\tvar _intersectPoint = new Vector3();\n\tvar _worldScale = new Vector3();\n\tvar _mvPosition = new Vector3();\n\n\tvar _alignedPosition = new Vector2();\n\tvar _rotatedPosition = new Vector2();\n\tvar _viewWorldMatrix = new Matrix4();\n\n\tvar _vA$1 = new Vector3();\n\tvar _vB$1 = new Vector3();\n\tvar _vC$1 = new Vector3();\n\n\tvar _uvA$1 = new Vector2();\n\tvar _uvB$1 = new Vector2();\n\tvar _uvC$1 = new Vector2();\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tvar float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t\t_uvA$1.set( 0, 0 );\n\t\t\t_uvB$1.set( 1, 0 );\n\t\t\t_uvC$1.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.center !== undefined ) { this.center.copy( source.center ); }\n\n\t\t\tthis.material = source.material;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t// to check if rotation is not zero\n\t\tif ( sin !== undefined ) {\n\n\t\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t\t} else {\n\n\t\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t\t}\n\n\n\t\tvertexPosition.copy( mvPosition );\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y;\n\n\t\t// transform to world space\n\t\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v1$4 = new Vector3();\n\tvar _v2$2 = new Vector3();\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tisLOD: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) { distance = 0; }\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tvar l;\n\n\t\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCurrentLevel: function () {\n\n\t\t\treturn this._currentLevel;\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn levels[ i - 1 ].object;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.autoUpdate === false ) { data.object.autoUpdate = false; }\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tMesh.prototype.copy.call( this, source );\n\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\t\tthis.skeleton = source.skeleton;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar vector = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\t\tvector.x = skinWeight.getX( i );\n\t\t\t\tvector.y = skinWeight.getY( i );\n\t\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tboneTransform: ( function () {\n\n\t\t\tvar basePosition = new Vector3();\n\n\t\t\tvar skinIndex = new Vector4();\n\t\t\tvar skinWeight = new Vector4();\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function ( index, target ) {\n\n\t\t\t\tvar skeleton = this.skeleton;\n\t\t\t\tvar geometry = this.geometry;\n\n\t\t\t\tskinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t\t\tskinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t\t\tbasePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\t\t\ttarget.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\tvar weight = skinWeight.getComponent( i );\n\n\t\t\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\t\t\tvar boneIndex = skinIndex.getComponent( i );\n\n\t\t\t\t\t\tmatrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\t\t\ttarget.addScaledVector( vector.copy( basePosition ).applyMatrix4( matrix ), weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t\t\t};\n\n\t\t}() )\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tvar _offsetMatrix = new Matrix4();\n\tvar _identityMatrix = new Matrix4();\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\tthis.frame = - 1;\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.bones.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar bone$1 = this.bones[ i$1 ];\n\n\t\t\t\tif ( bone$1 ) {\n\n\t\t\t\t\tif ( bone$1.parent && bone$1.parent.isBone ) {\n\n\t\t\t\t\t\tbone$1.matrix.getInverse( bone$1.parent.matrixWorld );\n\t\t\t\t\t\tbone$1.matrix.multiply( bone$1.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone$1.matrix.copy( bone$1.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone$1.matrix.decompose( bone$1.position, bone$1.quaternion, bone$1.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t},\n\n\t\tgetBoneByName: function ( name ) {\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tdispose: function ( ) {\n\n\t\t\tif ( this.boneTexture ) {\n\n\t\t\t\tthis.boneTexture.dispose();\n\n\t\t\t\tthis.boneTexture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _instanceLocalMatrix = new Matrix4();\n\tvar _instanceWorldMatrix = new Matrix4();\n\n\tvar _instanceIntersects = [];\n\n\tvar _mesh = new Mesh();\n\n\tfunction InstancedMesh( geometry, material, count ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: InstancedMesh,\n\n\t\tisInstancedMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tMesh.prototype.copy.call( this, source );\n\n\t\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\t\t\tthis.count = source.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar raycastTimes = this.count;\n\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\n\t\t\tif ( _mesh.material === undefined ) { return; }\n\n\t\t\tfor ( var instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t\t// calculate the world matrix for each instance\n\n\t\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t\t// the mesh represents this single instance\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t\t// process the result of raycast\n\n\t\t\t\tfor ( var i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar intersect = _instanceIntersects[ i ];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start = new Vector3();\n\tvar _end = new Vector3();\n\tvar _inverseMatrix$1 = new Matrix4();\n\tvar _ray$1 = new Ray();\n\tvar _sphere$2 = new Sphere();\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances$1 = geometry.lineDistances;\n\n\t\t\t\tlineDistances$1[ 0 ] = 0;\n\n\t\t\t\tfor ( var i$1 = 1, l$1 = vertices.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\tlineDistances$1[ i$1 ] = lineDistances$1[ i$1 - 1 ];\n\t\t\t\t\tlineDistances$1[ i$1 ] += vertices[ i$1 - 1 ].distanceTo( vertices[ i$1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Line.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t\t_sphere$2.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localThresholdSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$1 = 0, l$1 = positions.length / 3 - 1; i$1 < l$1; i$1 += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i$1 );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i$1 + 3 );\n\n\t\t\t\t\t\tvar distSq$1 = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq$1 > localThresholdSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance$1 = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance$1 < raycaster.near || distance$1 > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance$1,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i$1,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i$2 = 0; i$2 < nbVertices - 1; i$2 += step ) {\n\n\t\t\t\t\tvar distSq$2 = _ray$1.distanceSqToSegment( vertices[ i$2 ], vertices[ i$2 + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq$2 > localThresholdSq ) { continue; }\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance$2 = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance$2 < raycaster.near || distance$2 > raycaster.far ) { continue; }\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance$2,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i$2,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start$1 = new Vector3();\n\tvar _end$1 = new Vector3();\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances$1 = geometry.lineDistances;\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = vertices.length; i$1 < l$1; i$1 += 2 ) {\n\n\t\t\t\t\t_start$1.copy( vertices[ i$1 ] );\n\t\t\t\t\t_end$1.copy( vertices[ i$1 + 1 ] );\n\n\t\t\t\t\tlineDistances$1[ i$1 ] = ( i$1 === 0 ) ? 0 : lineDistances$1[ i$1 - 1 ];\n\t\t\t\t\tlineDistances$1[ i$1 + 1 ] = lineDistances$1[ i$1 ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _inverseMatrix$2 = new Matrix4();\n\tvar _ray$2 = new Ray();\n\tvar _sphere$3 = new Sphere();\n\tvar _position$1 = new Vector3();\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t\t_sphere$3.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$1 = 0, l = positions.length / 3; i$1 < l; i$1 ++ ) {\n\n\t\t\t\t\t\t_position$1.fromArray( positions, i$1 * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, i$1, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i$2 = 0, l$1 = vertices.length; i$2 < l$1; i$2 ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i$2 ], i$2, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\t\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\t\tconstructor: VideoTexture,\n\n\t\tisVideoTexture: true,\n\n\t\tupdate: function () {\n\n\t\t\tvar video = this.image;\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) { type = UnsignedShortType; }\n\t\tif ( type === undefined && format === DepthStencilFormat ) { type = UnsignedInt248Type; }\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar edge = [ 0, 0 ], edges = {};\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tvar edge1 = face[ keys[ j ] ];\n\t\t\t\t\tvar edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tvar key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( var key$1 in edges ) {\n\n\t\t\t\tvar e = edges[ key$1 ];\n\n\t\t\t\tvar vertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar vertex$1 = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar indices = geometry.index;\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i$1 = start, l$1 = ( start + count ); i$1 < l$1; i$1 += 3 ) {\n\n\t\t\t\t\t\tfor ( var j$1 = 0; j$1 < 3; j$1 ++ ) {\n\n\t\t\t\t\t\t\tvar edge1$1 = indices.getX( i$1 + j$1 );\n\t\t\t\t\t\t\tvar edge2$1 = indices.getX( i$1 + ( j$1 + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1$1, edge2$1 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1$1, edge2$1 );\n\n\t\t\t\t\t\t\tvar key$2 = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key$2 ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key$2 ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( var key$3 in edges ) {\n\n\t\t\t\t\tvar e$1 = edges[ key$3 ];\n\n\t\t\t\t\tvertex$1.fromBufferAttribute( position, e$1.index1 );\n\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\tvertex$1.fromBufferAttribute( position, e$1.index2 );\n\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar position$1 = geometry.attributes.position;\n\n\t\t\t\tfor ( var i$2 = 0, l$2 = ( position$1.count / 3 ); i$2 < l$2; i$2 ++ ) {\n\n\t\t\t\t\tfor ( var j$2 = 0; j$2 < 3; j$2 ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tvar index1 = 3 * i$2 + j$2;\n\t\t\t\t\t\tvertex$1.fromBufferAttribute( position$1, index1 );\n\t\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\t\tvar index2 = 3 * i$2 + ( ( j$2 + 1 ) % 3 );\n\t\t\t\t\t\tvertex$1.fromBufferAttribute( position$1, index2 );\n\t\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( var i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( var j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var i$1 = 0; i$1 < stacks; i$1 ++ ) {\n\n\t\t\tfor ( var j$1 = 0; j$1 < slices; j$1 ++ ) {\n\n\t\t\t\tvar a = i$1 * sliceCount + j$1;\n\t\t\t\tvar b = i$1 * sliceCount + j$1 + 1;\n\t\t\t\tvar c = ( i$1 + 1 ) * sliceCount + j$1 + 1;\n\t\t\t\tvar d = ( i$1 + 1 ) * sliceCount + j$1;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( var i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( var i$1 = 0; i$1 < cols; i$1 ++ ) {\n\n\t\t\t\tfor ( var j$1 = 0; j$1 < 2 * ( cols - i$1 ) - 1; j$1 ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j$1 / 2 );\n\n\t\t\t\t\tif ( j$1 % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) { uvBuffer[ i + 0 ] += 1; }\n\t\t\t\t\tif ( x1 < 0.2 ) { uvBuffer[ i + 2 ] += 1; }\n\t\t\t\t\tif ( x2 < 0.2 ) { uvBuffer[ i + 4 ] += 1; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) { console.warn( 'THREE.TubeGeometry: taper has been removed.' ); }\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar P = new Vector3();\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( var i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin = Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( var j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( var i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\tTubeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) { console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' ); }\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( var j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var j$1 = 1; j$1 <= tubularSegments; j$1 ++ ) {\n\n\t\t\tfor ( var i$1 = 1; i$1 <= radialSegments; i$1 ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j$1 - 1 ) + ( i$1 - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j$1 + ( i$1 - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j$1 + i$1;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j$1 - 1 ) + i$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var j$1 = 1; j$1 <= radialSegments; j$1 ++ ) {\n\n\t\t\tfor ( var i$1 = 1; i$1 <= tubularSegments; i$1 ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j$1 + i$1 - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j$1 - 1 ) + i$1 - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j$1 - 1 ) + i$1;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j$1 + i$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\n\tvar Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\t\tdim = dim || 2;\n\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\t\ttriangles = [];\n\n\t\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) { return triangles; }\n\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\t\tif ( y > maxY ) { maxY = y; }\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tvar i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) { return start; }\n\t\tif ( ! end ) { end = start; }\n\n\t\tvar p = start,\n\t\t\tagain;\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) { break; }\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) { return; }\n\n\t\t// interlink polygon nodes in z-order\n\t\tif ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\n\n\t\tvar stop = ear,\n\t\t\tprev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim );\n\t\t\t\ttriangles.push( ear.i / dim );\n\t\t\t\ttriangles.push( next.i / dim );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\tfunction isEar( ear ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tvar p = ear.next.next;\n\n\t\twhile ( p !== ear.prev ) {\n\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t\t// z-order range for the current triangle bbox;\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t\tvar p = ear.prevZ,\n\t\t\tn = ear.nextZ;\n\n\t\t// look for points inside the triangle in both directions\n\t\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\t// look for remaining points in decreasing z-order\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\t// look for remaining points in increasing z-order\n\t\twhile ( n && n.z <= maxZ ) {\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tvar a = p.prev,\n\t\t\t\tb = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim );\n\t\t\t\ttriangles.push( p.i / dim );\n\t\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t\t// remove two nodes involved\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn filterPoints( p );\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tvar a = start;\n\t\tdo {\n\n\t\t\tvar b = a.next.next;\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tvar queue = [],\n\t\t\ti, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) { list.steiner = true; }\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\teliminateHole( queue[ i ], outerNode );\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\touterNode = findHoleBridge( hole, outerNode );\n\t\tif ( outerNode ) {\n\n\t\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\t\t// filter collinear points around the cuts\n\t\t\tfilterPoints( outerNode, outerNode.next );\n\t\t\tfilterPoints( b, b.next );\n\n\t\t}\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tvar p = outerNode,\n\t\t\thx = hole.x,\n\t\t\thy = hole.y,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\t\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\t\tif ( hy === p.y ) { return p; }\n\t\t\t\t\t\tif ( hy === p.next.y ) { return p.next; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) { return null; }\n\n\t\tif ( hx === qx ) { return m; } // hole touches outer segment; pick leftmost endpoint\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y,\n\t\t\ttanMin = Infinity,\n\t\t\ttan;\n\n\t\tp = m;\n\n\t\tdo {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== stop );\n\n\t\treturn m;\n\n\t}\n\n\t// whether sector in vertex m contains sector in vertex p in the same coordinates\n\tfunction sectorContainsSector( m, p ) {\n\n\t\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tif ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\tfunction sortLinked( list ) {\n\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t\tinSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) { break; }\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) { tail.nextZ = e; }\n\t\t\t\t\telse { list = e; }\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * ( x - minX ) * invSize;\n\t\ty = 32767 * ( y - minY ) * invSize;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\tfunction getLeftmost( start ) {\n\n\t\tvar p = start,\n\t\t\tleftmost = start;\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) { leftmost = p; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n\t}\n\n\t// signed area of a triangle\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tvar o1 = sign( area( p1, q1, p2 ) );\n\t\tvar o2 = sign( area( p1, q1, q2 ) );\n\t\tvar o3 = sign( area( p2, q2, p1 ) );\n\t\tvar o4 = sign( area( p2, q2, q1 ) );\n\n\t\tif ( o1 !== o2 && o3 !== o4 ) { return true; } // general case\n\n\t\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) { return true; } // p1, q1 and p2 are collinear and p2 lies on p1q1\n\t\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) { return true; } // p1, q1 and q2 are collinear and q2 lies on p1q1\n\t\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) { return true; } // p2, q2 and p1 are collinear and p1 lies on p2q2\n\t\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) { return true; } // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\n\t}\n\n\t// for collinear points p, q, r, check if point q lies on segment pr\n\tfunction onSegment( p, q, r ) {\n\n\t\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n\t}\n\n\tfunction sign( num ) {\n\n\t\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tvar p = a;\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\tintersects( p, p.next, a, b ) ) { return true; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\tfunction middleInside( a, b ) {\n\n\t\tvar p = a,\n\t\t\tinside = false,\n\t\t\tpx = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t\t{ inside = ! inside; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\tfunction splitPolygon( a, b ) {\n\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tvar p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\n\t\tif ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertex index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertex nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = null;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tvar sum = 0;\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tvar holeIndices = []; // array of hole indices\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tvar holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( var i$1 = 0; i$1 < triangles.length; i$1 += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i$1, i$1 + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t};\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tvar l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float>, // how far from shape outline does bevel start\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tvar scope = this;\n\n\t\tvar verticesArray = [];\n\t\tvar uvArray = [];\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar placeholder = [];\n\n\t\t\t// options\n\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tvar extrudePath = options.extrudePath;\n\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tvar ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( var h$1 = 0, hl$1 = holes.length; h$1 < hl$1; h$1 ++ ) {\n\n\t\t\t\tvar ahole$1 = holes[ h$1 ];\n\n\t\t\t\tvertices = vertices.concat( ahole$1 );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) { console.error( \"THREE.ExtrudeGeometry: vec does not exist\" ); }\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tvar vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tvar contourMovements = [];\n\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) { j = 0; }\n\t\t\t\tif ( k === il ) { k = 0; }\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tvar holesMovements = [];\n\t\t\tvar oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( var h$2 = 0, hl$2 = holes.length; h$2 < hl$2; h$2 ++ ) {\n\n\t\t\t\tvar ahole$2 = holes[ h$2 ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = ahole$2.length, j$1 = il$1 - 1, k$1 = i$1 + 1; i$1 < il$1; i$1 ++, j$1 ++, k$1 ++ ) {\n\n\t\t\t\t\tif ( j$1 === il$1 ) { j$1 = 0; }\n\t\t\t\t\tif ( k$1 === il$1 ) { k$1 = 0; }\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i$1 ] = getBevelVec( ahole$2[ i$1 ], ahole$2[ j$1 ], ahole$2[ k$1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( var b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tvar t = b / bevelSegments;\n\t\t\t\tvar z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tvar bs$1 = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( var i$2 = 0, il$2 = contour.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\tvar vert = scalePt2( contour[ i$2 ], contourMovements[ i$2 ], bs$1 );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( var h$3 = 0, hl$3 = holes.length; h$3 < hl$3; h$3 ++ ) {\n\n\t\t\t\t\tvar ahole$3 = holes[ h$3 ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h$3 ];\n\n\t\t\t\t\tfor ( var i$3 = 0, il$3 = ahole$3.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\t\t\tvar vert$1 = scalePt2( ahole$3[ i$3 ], oneHoleMovements[ i$3 ], bs$1 );\n\n\t\t\t\t\t\tv( vert$1.x, vert$1.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( var i$4 = 0; i$4 < vlen; i$4 ++ ) {\n\n\t\t\t\tvar vert$2 = bevelEnabled ? scalePt2( vertices[ i$4 ], verticesMovements[ i$4 ], bs ) : vertices[ i$4 ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert$2.x, vert$2.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert$2.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert$2.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( var s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( var i$5 = 0; i$5 < vlen; i$5 ++ ) {\n\n\t\t\t\t\tvar vert$3 = bevelEnabled ? scalePt2( vertices[ i$5 ], verticesMovements[ i$5 ], bs ) : vertices[ i$5 ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert$3.x, vert$3.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert$3.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert$3.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( var b$1 = bevelSegments - 1; b$1 >= 0; b$1 -- ) {\n\n\t\t\t\tvar t$1 = b$1 / bevelSegments;\n\t\t\t\tvar z$1 = bevelThickness * Math.cos( t$1 * Math.PI / 2 );\n\t\t\t\tvar bs$2 = bevelSize * Math.sin( t$1 * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( var i$6 = 0, il$4 = contour.length; i$6 < il$4; i$6 ++ ) {\n\n\t\t\t\t\tvar vert$4 = scalePt2( contour[ i$6 ], contourMovements[ i$6 ], bs$2 );\n\t\t\t\t\tv( vert$4.x, vert$4.y, depth + z$1 );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( var h$4 = 0, hl$4 = holes.length; h$4 < hl$4; h$4 ++ ) {\n\n\t\t\t\t\tvar ahole$4 = holes[ h$4 ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h$4 ];\n\n\t\t\t\t\tfor ( var i$7 = 0, il$5 = ahole$4.length; i$7 < il$5; i$7 ++ ) {\n\n\t\t\t\t\t\tvar vert$5 = scalePt2( ahole$4[ i$7 ], oneHoleMovements[ i$7 ], bs$2 );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert$5.x, vert$5.y, depth + z$1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert$5.x, vert$5.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z$1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( var i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( var i$1 = 0; i$1 < flen; i$1 ++ ) {\n\n\t\t\t\t\t\tvar face$1 = faces[ i$1 ];\n\t\t\t\t\t\tf3( face$1[ 0 ] + offset, face$1[ 1 ] + offset, face$1[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < flen; i$2 ++ ) {\n\n\t\t\t\t\t\tvar face$2 = faces[ i$2 ];\n\t\t\t\t\t\tf3( face$2[ 2 ], face$2[ 1 ], face$2[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( var i$3 = 0; i$3 < flen; i$3 ++ ) {\n\n\t\t\t\t\t\tvar face$3 = faces[ i$3 ];\n\t\t\t\t\t\tf3( face$3[ 0 ] + vlen * steps, face$3[ 1 ] + vlen * steps, face$3[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tvar ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tvar i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tvar j = i;\n\t\t\t\t\tvar k = i - 1;\n\t\t\t\t\tif ( k < 0 ) { k = contour.length - 1; }\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( var s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t//\n\n\tvar WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\tfunction toJSON( shapes, options, data ) {\n\n\t\t//\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( options.extrudePath !== undefined ) { data.options.extrudePath = options.extrudePath.toJSON(); }\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) { parameters.bevelThickness = 10; }\n\t\tif ( parameters.bevelSize === undefined ) { parameters.bevelSize = 8; }\n\t\tif ( parameters.bevelEnabled === undefined ) { parameters.bevelEnabled = false; }\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tvar uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( var ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var iy$1 = 0; iy$1 < heightSegments; iy$1 ++ ) {\n\n\t\t\tfor ( var ix$1 = 0; ix$1 < widthSegments; ix$1 ++ ) {\n\n\t\t\t\tvar a = grid[ iy$1 ][ ix$1 + 1 ];\n\t\t\t\tvar b = grid[ iy$1 ][ ix$1 ];\n\t\t\t\tvar c = grid[ iy$1 + 1 ][ ix$1 ];\n\t\t\t\tvar d = grid[ iy$1 + 1 ][ ix$1 + 1 ];\n\n\t\t\t\tif ( iy$1 !== 0 || thetaStart > 0 ) { indices.push( a, b, d ); }\n\t\t\t\tif ( iy$1 !== heightSegments - 1 || thetaEnd < Math.PI ) { indices.push( b, c, d ); }\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 0.5;\n\t\touterRadius = outerRadius || 1;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( var i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tvar segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var j$1 = 0; j$1 < phiSegments; j$1 ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j$1 * ( thetaSegments + 1 );\n\n\t\t\tfor ( var i$1 = 0; i$1 < thetaSegments; i$1 ++ ) {\n\n\t\t\t\tvar segment$1 = i$1 + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment$1;\n\t\t\t\tvar b = segment$1 + thetaSegments + 1;\n\t\t\t\tvar c = segment$1 + thetaSegments + 2;\n\t\t\t\tvar d = segment$1 + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( var i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( var j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var i$1 = 0; i$1 < segments; i$1 ++ ) {\n\n\t\t\tfor ( var j$1 = 0; j$1 < ( points.length - 1 ); j$1 ++ ) {\n\n\t\t\t\tvar base = j$1 + i$1 * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tvar base$1 = segments * points.length * 3;\n\n\t\t\tfor ( var i$2 = 0, j$2 = 0; i$2 < points.length; i$2 ++, j$2 += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j$2 + 0 ];\n\t\t\t\tn1.y = normals[ j$2 + 1 ];\n\t\t\t\tn1.z = normals[ j$2 + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base$1 + j$2 + 0 ];\n\t\t\t\tn2.y = normals[ base$1 + j$2 + 1 ];\n\t\t\t\tn2.z = normals[ base$1 + j$2 + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j$2 + 0 ] = normals[ base$1 + j$2 + 0 ] = n.x;\n\t\t\t\tnormals[ j$2 + 1 ] = normals[ base$1 + j$2 + 1 ] = n.y;\n\t\t\t\tnormals[ j$2 + 2 ] = normals[ base$1 + j$2 + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\tShapeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tvar shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( var i$1 = 0, l$1 = shapeHoles.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tvar shapeHole$1 = shapeHoles[ i$1 ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole$1 );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( var i$2 = 0, l$2 = shapeVertices.length; i$2 < l$2; i$2 ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i$2 ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( var i$3 = 0, l$3 = faces.length; i$3 < l$3; i$3 ++ ) {\n\n\t\t\t\tvar face = faces[ i$3 ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\tShapeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t//\n\n\tfunction toJSON$1( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {};\n\t\tvar edge1, edge2, key;\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\t\theight = height || 1;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) { generateCap( true ); }\n\t\t\tif ( radiusBottom > 0 ) { generateCap( false ); }\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( var x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( var x$1 = 0; x$1 < radialSegments; x$1 ++ ) {\n\n\t\t\t\tfor ( var y$1 = 0; y$1 < heightSegments; y$1 ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y$1 ][ x$1 ];\n\t\t\t\t\tvar b = indexArray[ y$1 + 1 ][ x$1 ];\n\t\t\t\t\tvar c = indexArray[ y$1 + 1 ][ x$1 + 1 ];\n\t\t\t\t\tvar d = indexArray[ y$1 ][ x$1 + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( var x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( var x$1 = 0; x$1 <= radialSegments; x$1 ++ ) {\n\n\t\t\t\tvar u = x$1 / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( var x$2 = 0; x$2 < radialSegments; x$2 ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x$2;\n\t\t\t\tvar i = centerIndexEnd + x$2;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( var s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var i$1 = 1; i$1 <= segments; i$1 ++ ) {\n\n\t\t\tindices.push( i$1, i$1 + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  clearcoat: <float>,\n\t *  clearcoatMap: new THREE.Texture( <Image> ),\n\t *  clearcoatRoughness: <float>,\n\t *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *  clearcoatNormalScale: <Vector2>,\n\t *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *  reflectivity: <float>,\n\t *\n\t *  sheen: <Color>,\n\t *\n\t *  transparency: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transparency = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transparency = source.transparency;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.MultiplyOperation,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *  gradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( Material.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) { return array; }\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) { result[ i ] = i; }\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) { return; } // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) { return; } // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t},\n\n\t\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\t\tfps = fps || 30;\n\n\t\t\tvar clip = sourceClip.clone();\n\n\t\t\tclip.name = name;\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\tvar track = clip.tracks[ i ];\n\t\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\t\tif ( frame < startFrame || frame >= endFrame ) { continue; }\n\n\t\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( times.length === 0 ) { continue; }\n\n\t\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\t\ttracks.push( track );\n\n\t\t\t}\n\n\t\t\tclip.tracks = tracks;\n\n\t\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tvar minStartTime = Infinity;\n\n\t\t\tfor ( var i$1 = 0; i$1 < clip.tracks.length; ++ i$1 ) {\n\n\t\t\t\tif ( minStartTime > clip.tracks[ i$1 ].times[ 0 ] ) {\n\n\t\t\t\t\tminStartTime = clip.tracks[ i$1 ].times[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// shift all tracks such that clip begins at t=0\n\n\t\t\tfor ( var i$2 = 0; i$2 < clip.tracks.length; ++ i$2 ) {\n\n\t\t\t\tclip.tracks[ i$2 ].shift( - 1 * minStartTime );\n\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\n\t\t\treturn clip;\n\n\t\t},\n\n\t\tmakeClipAdditive: function ( targetClip, referenceFrame, referenceClip, fps ) {\n\n\t\t\tif ( referenceFrame === undefined ) { referenceFrame = 0; }\n\t\t\tif ( referenceClip === undefined ) { referenceClip = targetClip; }\n\t\t\tif ( fps === undefined || fps <= 0 ) { fps = 30; }\n\n\t\t\tvar numTracks = targetClip.tracks.length;\n\t\t\tvar referenceTime = referenceFrame / fps;\n\n\t\t\t// Make each track's values relative to the values at the reference frame\n\t\t\tvar loop = function ( i ) {\n\n\t\t\t\tvar referenceTrack = referenceClip.tracks[ i ];\n\t\t\t\tvar referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t\t// Skip this track if it's non-numeric\n\t\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) { return; }\n\n\t\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\t\tvar targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t\t} );\n\n\t\t\t\tif ( targetTrack === undefined ) { return; }\n\n\t\t\t\tvar valueSize = referenceTrack.getValueSize();\n\t\t\t\tvar lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tvar referenceValue = (void 0);\n\n\t\t\t\t// Find the value to subtract out of the track\n\t\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, 0, referenceTrack.valueSize );\n\n\t\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tvar startIndex = lastIndex * valueSize;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tvar interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\t\treferenceValue = interpolant.resultBuffer;\n\n\t\t\t\t}\n\n\t\t\t\t// Conjugate the quaternion\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\tvar referenceQuat = new Quaternion(\n\t\t\t\t\t\treferenceValue[ 0 ],\n\t\t\t\t\t\treferenceValue[ 1 ],\n\t\t\t\t\t\treferenceValue[ 2 ],\n\t\t\t\t\t\treferenceValue[ 3 ]\n\t\t\t\t\t).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t\t}\n\n\t\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\t\tvar numTimes = targetTrack.times.length;\n\t\t\t\tfor ( var j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\t\tvar valueStart = j * valueSize;\n\n\t\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\t\tvalueStart\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < numTracks; ++ i ) loop( i );\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\t\treturn targetClip;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function ( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) { break forward_scan; }\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt$1 = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt$1 ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function () {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function ( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t// DECLARE ALIAS AFTER assign prototype\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) { throw new Error( 'THREE.KeyframeTrack: track name is undefined' ); }\n\t\tif ( times === undefined || times.length === 0 ) { throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name ); }\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Static methods\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\ttoJSON: function ( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( KeyframeTrack.prototype, {\n\n\t\tconstructor: KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length;\n\n\t\t\tvar from = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) {\n\n\t\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\t\tfrom = to - 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i$1 = 0, n = values.length; i$1 !== n; ++ i$1 ) {\n\n\t\t\t\t\t\tvar value = values[ i$1 ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i$1, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tvar times = AnimationUtils.arraySlice( this.times ),\n\t\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tvar writeIndex = 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j$1 = 0; j$1 !== stride; ++ j$1 ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j$1 ] = values[ readOffset + j$1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset$1 = lastIndex * stride, writeOffset$1 = writeIndex * stride, j$2 = 0; j$2 !== stride; ++ j$2 ) {\n\n\t\t\t\t\tvalues[ writeOffset$1 + j$2 ] = values[ readOffset$1 + j$2 ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t} else {\n\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\t\tvar TypedKeyframeTrack = this.constructor;\n\t\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\t\treturn track;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrack.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tvar offset = i1 * stride;\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks, blendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\t\tthis.blendMode = ( blendMode !== undefined ) ? blendMode : NormalAnimationBlendMode;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks, json.blendMode );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name$1 in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name$1, animationToMorphTargets[ name$1 ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\tvar fps = animation.fps || 30;\n\t\t\tvar blendMode = animation.blendMode;\n\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) { continue; }\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tvar k = (void 0);\n\n\t\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m$1 = 0; m$1 !== animationKeys[ k ].morphTargets.length; ++ m$1 ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks, blendMode );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks;\n\t\t\tvar duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( this.name, this.duration, tracks, this.blendMode );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\t\tvar handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tvar index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) { regex.lastIndex = 0; } // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tObject.assign( Loader.prototype, {\n\n\t\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\t\tloadAsync: function ( url, onProgress ) {\n\n\t\t\tvar scope = this;\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t\t} );\n\n\t\t},\n\n\t\tparse: function ( /* data */ ) {},\n\n\t\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( path ) {\n\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( resourcePath ) {\n\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( requestHeader ) {\n\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar loading = {};\n\n\tfunction FileLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FileLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\t\t\tvar request;\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\t\t\t\tdata = decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) { data = atob( data ); }\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( response ); }\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) { onError( error ); }\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Initialise array for duplicate requests\n\n\t\t\t\tloading[ url ] = [];\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\trequest = new XMLHttpRequest();\n\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = this.response;\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( this.status === 0 ) { console.warn( 'THREE.FileLoader: HTTP Status 0 received.' ); }\n\n\t\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onLoad ) { callback.onLoad( response ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i$1 = 0, il$1 = callbacks.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\t\t\tvar callback$1 = callbacks[ i$1 ];\n\t\t\t\t\t\t\tif ( callback$1.onError ) { callback$1.onError( event ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onProgress ) { callback.onProgress( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) { request.responseType = this.responseType; }\n\t\t\t\tif ( this.withCredentials !== undefined ) { request.withCredentials = this.withCredentials; }\n\n\t\t\t\tif ( request.overrideMimeType ) { request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' ); }\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t */\n\n\tfunction AnimationLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AnimationLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CompressedTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\t{ texture.minFilter = LinearFilter; }\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: DataTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\t\tif ( ! texData ) { return; }\n\n\t\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) { onLoad( texture, texData ); }\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) { onLoad( this ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tif ( onError ) { onError( event ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) { image.crossOrigin = this.crossOrigin; }\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CubeTextureLoader,\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: TextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = this.arcLengthDivisions; }\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( var p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t, optionalTarget ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) { t1 = 0; }\n\t\t\tif ( t2 > 1 ) { t2 = 1; }\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\t\treturn tangent;\n\n\t\t},\n\n\t\tgetTangentAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t, optionalTarget );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( var i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tvar u = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( var i$1 = 1; i$1 <= segments; i$1 ++ ) {\n\n\t\t\t\tnormals[ i$1 ] = normals[ i$1 - 1 ].clone();\n\n\t\t\t\tbinormals[ i$1 ] = binormals[ i$1 - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i$1 - 1 ], tangents[ i$1 ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\tvar theta = Math.acos( MathUtils.clamp( tangents[ i$1 - 1 ].dot( tangents[ i$1 ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i$1 ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i$1 ].crossVectors( tangents[ i$1 ], normals[ i$1 ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\tvar theta$1 = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta$1 /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta$1 = - theta$1;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i$2 = 1; i$2 <= segments; i$2 ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i$2 ].applyMatrix4( mat.makeRotationAxis( tangents[ i$2 ], theta$1 * i$2 ) );\n\t\t\t\t\tbinormals[ i$2 ].crossVectors( tangents[ i$2 ], normals[ i$2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\t\tthis.aClockwise = aClockwise || false;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) { deltaAngle += twoPi; }\n\t\twhile ( deltaAngle > twoPi ) { deltaAngle -= twoPi; }\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t};\n\n\tEllipseCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\n\tEllipseCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points || [];\n\t\tthis.closed = closed || false;\n\t\tthis.curveType = curveType || 'centripetal';\n\t\tthis.tension = tension || 0.5;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) { dt1 = 1.0; }\n\t\t\tif ( dt0 < 1e-4 ) { dt0 = dt1; }\n\t\t\tif ( dt2 < 1e-4 ) { dt2 = dt1; }\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\t\tthis.v3 = v3 || new Vector2();\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\t\tthis.v3 = v3 || new Vector3();\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\t\tvar tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t};\n\n\tLineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points || [];\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar points = this.points;\n\t\tvar p = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar p1 = points[ intPoint ];\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tSplineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tSplineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [];\n\t\t\tvar sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 40; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [];\n\t\t\tvar last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) { continue; } // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurve.prototype.copy.call( this, source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tconstructor: Path,\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape( points ) {\n\n\t\tPath.call( this, points );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tPath.prototype.copy.call( this, source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) { data.object.groundColor = this.groundColor.getHex(); }\n\n\t\t\tif ( this.distance !== undefined ) { data.object.distance = this.distance; }\n\t\t\tif ( this.angle !== undefined ) { data.object.angle = this.angle; }\n\t\t\tif ( this.decay !== undefined ) { data.object.decay = this.decay; }\n\t\t\tif ( this.penumbra !== undefined ) { data.object.penumbra = this.penumbra; }\n\n\t\t\tif ( this.shadow !== undefined ) { data.object.shadow = this.shadow.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\t_projScreenMatrix: new Matrix4(),\n\n\t\t_lightPositionWorld: new Vector3(),\n\n\t\t_lookTarget: new Vector3(),\n\n\t\tgetViewportCount: function () {\n\n\t\t\treturn this._viewportCount;\n\n\t\t},\n\n\t\tgetFrustum: function () {\n\n\t\t\treturn this._frustum;\n\n\t\t},\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar shadowCamera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( lookTarget );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t},\n\n\t\tgetViewport: function ( viewportIndex ) {\n\n\t\t\treturn this._viewports[ viewportIndex ];\n\n\t\t},\n\n\t\tgetFrameExtents: function () {\n\n\t\t\treturn this._frameExtents;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) { object.bias = this.bias; }\n\t\t\tif ( this.normalBias !== 0 ) { object.normalBias = this.normalBias; }\n\t\t\tif ( this.radius !== 1 ) { object.radius = this.radius; }\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) { object.mapSize = this.mapSize.toArray(); }\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = MathUtils.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction PointLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: PointLightShadow,\n\n\t\tisPointLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\t\tif ( viewportIndex === undefined ) { viewportIndex = 0; }\n\n\t\t\tvar camera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tcamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.copy( camera.position );\n\t\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t\tcamera.lookAt( lookTarget );\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = ( left !== undefined ) ? left : - 1;\n\t\tthis.right = ( right !== undefined ) ? right : 1;\n\t\tthis.top = ( top !== undefined ) ? top : 1;\n\t\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow() {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow,\n\n\t\tisDirectionalLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t}\n\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Primary reference:\n\t *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *   https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\n\t// 3-band SH defined by 9 coefficients\n\n\tfunction SphericalHarmonics3() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tObject.assign( SphericalHarmonics3.prototype, {\n\n\t\tisSphericalHarmonics3: true,\n\n\t\tset: function ( coefficients ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tzero: function () {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\tgetAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tadd: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledSH: function ( sh, s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( sh, alpha ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcopy: function ( sh ) {\n\n\t\t\treturn this.set( sh.coefficients );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( SphericalHarmonics3, {\n\n\t\t// evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t// band 0\n\t\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t\t// band 1\n\t\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t\t// band 2\n\t\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * A LightProbe is a source of indirect-diffuse light\n\t */\n\n\tfunction LightProbe( sh, intensity ) {\n\n\t\tLight.call( this, undefined, intensity );\n\n\t\tthis.type = 'LightProbe';\n\n\t\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n\t}\n\n\tLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: LightProbe,\n\n\t\tisLightProbe: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.sh.copy( source.sh );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\t\tthis.sh.fromArray( json.sh );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.sh = this.sh.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: MaterialLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) { material.uuid = json.uuid; }\n\t\t\tif ( json.name !== undefined ) { material.name = json.name; }\n\t\t\tif ( json.color !== undefined ) { material.color.setHex( json.color ); }\n\t\t\tif ( json.roughness !== undefined ) { material.roughness = json.roughness; }\n\t\t\tif ( json.metalness !== undefined ) { material.metalness = json.metalness; }\n\t\t\tif ( json.sheen !== undefined ) { material.sheen = new Color().setHex( json.sheen ); }\n\t\t\tif ( json.emissive !== undefined ) { material.emissive.setHex( json.emissive ); }\n\t\t\tif ( json.specular !== undefined ) { material.specular.setHex( json.specular ); }\n\t\t\tif ( json.shininess !== undefined ) { material.shininess = json.shininess; }\n\t\t\tif ( json.clearcoat !== undefined ) { material.clearcoat = json.clearcoat; }\n\t\t\tif ( json.clearcoatRoughness !== undefined ) { material.clearcoatRoughness = json.clearcoatRoughness; }\n\t\t\tif ( json.fog !== undefined ) { material.fog = json.fog; }\n\t\t\tif ( json.flatShading !== undefined ) { material.flatShading = json.flatShading; }\n\t\t\tif ( json.blending !== undefined ) { material.blending = json.blending; }\n\t\t\tif ( json.combine !== undefined ) { material.combine = json.combine; }\n\t\t\tif ( json.side !== undefined ) { material.side = json.side; }\n\t\t\tif ( json.opacity !== undefined ) { material.opacity = json.opacity; }\n\t\t\tif ( json.transparent !== undefined ) { material.transparent = json.transparent; }\n\t\t\tif ( json.alphaTest !== undefined ) { material.alphaTest = json.alphaTest; }\n\t\t\tif ( json.depthTest !== undefined ) { material.depthTest = json.depthTest; }\n\t\t\tif ( json.depthWrite !== undefined ) { material.depthWrite = json.depthWrite; }\n\t\t\tif ( json.colorWrite !== undefined ) { material.colorWrite = json.colorWrite; }\n\n\t\t\tif ( json.stencilWrite !== undefined ) { material.stencilWrite = json.stencilWrite; }\n\t\t\tif ( json.stencilWriteMask !== undefined ) { material.stencilWriteMask = json.stencilWriteMask; }\n\t\t\tif ( json.stencilFunc !== undefined ) { material.stencilFunc = json.stencilFunc; }\n\t\t\tif ( json.stencilRef !== undefined ) { material.stencilRef = json.stencilRef; }\n\t\t\tif ( json.stencilFuncMask !== undefined ) { material.stencilFuncMask = json.stencilFuncMask; }\n\t\t\tif ( json.stencilFail !== undefined ) { material.stencilFail = json.stencilFail; }\n\t\t\tif ( json.stencilZFail !== undefined ) { material.stencilZFail = json.stencilZFail; }\n\t\t\tif ( json.stencilZPass !== undefined ) { material.stencilZPass = json.stencilZPass; }\n\n\t\t\tif ( json.wireframe !== undefined ) { material.wireframe = json.wireframe; }\n\t\t\tif ( json.wireframeLinewidth !== undefined ) { material.wireframeLinewidth = json.wireframeLinewidth; }\n\t\t\tif ( json.wireframeLinecap !== undefined ) { material.wireframeLinecap = json.wireframeLinecap; }\n\t\t\tif ( json.wireframeLinejoin !== undefined ) { material.wireframeLinejoin = json.wireframeLinejoin; }\n\n\t\t\tif ( json.rotation !== undefined ) { material.rotation = json.rotation; }\n\n\t\t\tif ( json.linewidth !== 1 ) { material.linewidth = json.linewidth; }\n\t\t\tif ( json.dashSize !== undefined ) { material.dashSize = json.dashSize; }\n\t\t\tif ( json.gapSize !== undefined ) { material.gapSize = json.gapSize; }\n\t\t\tif ( json.scale !== undefined ) { material.scale = json.scale; }\n\n\t\t\tif ( json.polygonOffset !== undefined ) { material.polygonOffset = json.polygonOffset; }\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) { material.polygonOffsetFactor = json.polygonOffsetFactor; }\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) { material.polygonOffsetUnits = json.polygonOffsetUnits; }\n\n\t\t\tif ( json.skinning !== undefined ) { material.skinning = json.skinning; }\n\t\t\tif ( json.morphTargets !== undefined ) { material.morphTargets = json.morphTargets; }\n\t\t\tif ( json.morphNormals !== undefined ) { material.morphNormals = json.morphNormals; }\n\t\t\tif ( json.dithering !== undefined ) { material.dithering = json.dithering; }\n\n\t\t\tif ( json.vertexTangents !== undefined ) { material.vertexTangents = json.vertexTangents; }\n\n\t\t\tif ( json.visible !== undefined ) { material.visible = json.visible; }\n\n\t\t\tif ( json.toneMapped !== undefined ) { material.toneMapped = json.toneMapped; }\n\n\t\t\tif ( json.userData !== undefined ) { material.userData = json.userData; }\n\n\t\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) { material.defines = json.defines; }\n\t\t\tif ( json.vertexShader !== undefined ) { material.vertexShader = json.vertexShader; }\n\t\t\tif ( json.fragmentShader !== undefined ) { material.fragmentShader = json.fragmentShader; }\n\n\t\t\tif ( json.extensions !== undefined ) {\n\n\t\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) { material.flatShading = json.shading === 1; } // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) { material.size = json.size; }\n\t\t\tif ( json.sizeAttenuation !== undefined ) { material.sizeAttenuation = json.sizeAttenuation; }\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) { material.map = getTexture( json.map ); }\n\t\t\tif ( json.matcap !== undefined ) { material.matcap = getTexture( json.matcap ); }\n\n\t\t\tif ( json.alphaMap !== undefined ) { material.alphaMap = getTexture( json.alphaMap ); }\n\n\t\t\tif ( json.bumpMap !== undefined ) { material.bumpMap = getTexture( json.bumpMap ); }\n\t\t\tif ( json.bumpScale !== undefined ) { material.bumpScale = json.bumpScale; }\n\n\t\t\tif ( json.normalMap !== undefined ) { material.normalMap = getTexture( json.normalMap ); }\n\t\t\tif ( json.normalMapType !== undefined ) { material.normalMapType = json.normalMapType; }\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) { material.displacementMap = getTexture( json.displacementMap ); }\n\t\t\tif ( json.displacementScale !== undefined ) { material.displacementScale = json.displacementScale; }\n\t\t\tif ( json.displacementBias !== undefined ) { material.displacementBias = json.displacementBias; }\n\n\t\t\tif ( json.roughnessMap !== undefined ) { material.roughnessMap = getTexture( json.roughnessMap ); }\n\t\t\tif ( json.metalnessMap !== undefined ) { material.metalnessMap = getTexture( json.metalnessMap ); }\n\n\t\t\tif ( json.emissiveMap !== undefined ) { material.emissiveMap = getTexture( json.emissiveMap ); }\n\t\t\tif ( json.emissiveIntensity !== undefined ) { material.emissiveIntensity = json.emissiveIntensity; }\n\n\t\t\tif ( json.specularMap !== undefined ) { material.specularMap = getTexture( json.specularMap ); }\n\n\t\t\tif ( json.envMap !== undefined ) { material.envMap = getTexture( json.envMap ); }\n\t\t\tif ( json.envMapIntensity !== undefined ) { material.envMapIntensity = json.envMapIntensity; }\n\n\t\t\tif ( json.reflectivity !== undefined ) { material.reflectivity = json.reflectivity; }\n\t\t\tif ( json.refractionRatio !== undefined ) { material.refractionRatio = json.refractionRatio; }\n\n\t\t\tif ( json.lightMap !== undefined ) { material.lightMap = getTexture( json.lightMap ); }\n\t\t\tif ( json.lightMapIntensity !== undefined ) { material.lightMapIntensity = json.lightMapIntensity; }\n\n\t\t\tif ( json.aoMap !== undefined ) { material.aoMap = getTexture( json.aoMap ); }\n\t\t\tif ( json.aoMapIntensity !== undefined ) { material.aoMapIntensity = json.aoMapIntensity; }\n\n\t\t\tif ( json.gradientMap !== undefined ) { material.gradientMap = getTexture( json.gradientMap ); }\n\n\t\t\tif ( json.clearcoatMap !== undefined ) { material.clearcoatMap = getTexture( json.clearcoatMap ); }\n\t\t\tif ( json.clearcoatRoughnessMap !== undefined ) { material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap ); }\n\t\t\tif ( json.clearcoatNormalMap !== undefined ) { material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap ); }\n\t\t\tif ( json.clearcoatNormalScale !== undefined ) { material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale ); }\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tvar LoaderUtils = {\n\n\t\tdecodeText: function ( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tvar s = '';\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t\t} catch ( e ) { // see #16358\n\n\t\t\t\treturn s;\n\n\t\t\t}\n\n\t\t},\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) { return './'; }\n\n\t\t\treturn url.substr( 0, index + 1 );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\t\tthis.instanceCount = source.instanceCount;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\t\tdata.instanceCount = this.instanceCount;\n\n\t\t\tdata.isInstancedBufferGeometry = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ()\t{\n\n\t\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\tdata.isInstancedBufferAttribute = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: BufferGeometryLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar interleavedBufferMap = {};\n\t\t\tvar arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) { return interleavedBufferMap[ uuid ]; }\n\n\t\t\t\tvar interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tvar interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\t\tvar buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\t\tvar array = new TYPED_ARRAYS[ interleavedBuffer.type ]( buffer );\n\t\t\t\tvar ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\t\treturn ib;\n\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) { return arrayBufferMap[ uuid ]; }\n\n\t\t\t\tvar arrayBuffers = json.arrayBuffers;\n\t\t\t\tvar arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\t\tvar ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\t\treturn ab;\n\n\t\t\t}\n\n\t\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar bufferAttribute = (void 0);\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tvar interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar typedArray$1 = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray$1, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tif ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }\n\t\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\t\tif ( morphAttributes ) {\n\n\t\t\t\tfor ( var key$1 in morphAttributes ) {\n\n\t\t\t\t\tvar attributeArray = morphAttributes[ key$1 ];\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar attribute$1 = attributeArray[ i ];\n\t\t\t\t\t\tvar bufferAttribute$1 = (void 0);\n\n\t\t\t\t\t\tif ( attribute$1.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar interleavedBuffer$1 = getInterleavedBuffer( json.data, attribute$1.data );\n\t\t\t\t\t\t\tbufferAttribute$1 = new InterleavedBufferAttribute( interleavedBuffer$1, attribute$1.itemSize, attribute$1.offset, attribute$1.normalized );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar typedArray$2 = new TYPED_ARRAYS[ attribute$1.type ]( attribute$1.array );\n\t\t\t\t\t\t\tbufferAttribute$1 = new BufferAttribute( typedArray$2, attribute$1.itemSize, attribute$1.normalized );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attribute$1.name !== undefined ) { bufferAttribute$1.name = attribute$1.name; }\n\t\t\t\t\t\tarray.push( bufferAttribute$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[ key$1 ] = array;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i$1 = 0, n = groups.length; i$1 !== n; ++ i$1 ) {\n\n\t\t\t\t\tvar group = groups[ i$1 ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\tif ( json.name ) { geometry.name = json.name; }\n\t\t\tif ( json.userData ) { geometry.userData = json.userData; }\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ObjectLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) { onError( error ); }\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar shapes = this.parseShape( json.shapes );\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseShape: function ( json ) {\n\n\t\t\tvar shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t},\n\n\t\tparseGeometries: function ( json, shapes ) {\n\n\t\t\tvar geometries = {};\n\t\t\tvar geometryShapes;\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry = (void 0);\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j$1 = 0, jl$1 = data.shapes.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape$1 = shapes[ data.shapes[ j$1 ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape$1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { geometry.name = data.name; }\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) { geometry.userData = data.userData; }\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar cache = {}; // MultiMaterial\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\t\tif ( data.uuid !== undefined ) { clip.uuid = data.uuid; }\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tvar loader;\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tloader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tvar path$1 = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) { return value; }\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = (void 0);\n\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { texture.name = data.name; }\n\n\t\t\t\t\tif ( data.mapping !== undefined ) { texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING ); }\n\n\t\t\t\t\tif ( data.offset !== undefined ) { texture.offset.fromArray( data.offset ); }\n\t\t\t\t\tif ( data.repeat !== undefined ) { texture.repeat.fromArray( data.repeat ); }\n\t\t\t\t\tif ( data.center !== undefined ) { texture.center.fromArray( data.center ); }\n\t\t\t\t\tif ( data.rotation !== undefined ) { texture.rotation = data.rotation; }\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) { texture.format = data.format; }\n\t\t\t\t\tif ( data.type !== undefined ) { texture.type = data.type; }\n\t\t\t\t\tif ( data.encoding !== undefined ) { texture.encoding = data.encoding; }\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) { texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.magFilter !== undefined ) { texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.anisotropy !== undefined ) { texture.anisotropy = data.anisotropy; }\n\n\t\t\t\t\tif ( data.flipY !== undefined ) { texture.flipY = data.flipY; }\n\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) { texture.premultiplyAlpha = data.premultiplyAlpha; }\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) { texture.unpackAlignment = data.unpackAlignment; }\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) { return undefined; }\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tvar geometry, material;\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) { object.focus = data.focus; }\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.filmGauge !== undefined ) { object.filmGauge = data.filmGauge; }\n\t\t\t\t\tif ( data.filmOffset !== undefined ) { object.filmOffset = data.filmOffset; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\n\t\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\t\tvar count = data.count;\n\t\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) { object.name = data.name; }\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) { object.matrixAutoUpdate = data.matrixAutoUpdate; }\n\t\t\t\tif ( object.matrixAutoUpdate ) { object.matrix.decompose( object.position, object.quaternion, object.scale ); }\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) { object.position.fromArray( data.position ); }\n\t\t\t\tif ( data.rotation !== undefined ) { object.rotation.fromArray( data.rotation ); }\n\t\t\t\tif ( data.quaternion !== undefined ) { object.quaternion.fromArray( data.quaternion ); }\n\t\t\t\tif ( data.scale !== undefined ) { object.scale.fromArray( data.scale ); }\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) { object.castShadow = data.castShadow; }\n\t\t\tif ( data.receiveShadow !== undefined ) { object.receiveShadow = data.receiveShadow; }\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) { object.shadow.bias = data.shadow.bias; }\n\t\t\t\tif ( data.shadow.normalBias !== undefined ) { object.shadow.normalBias = data.shadow.normalBias; }\n\t\t\t\tif ( data.shadow.radius !== undefined ) { object.shadow.radius = data.shadow.radius; }\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) { object.shadow.mapSize.fromArray( data.shadow.mapSize ); }\n\t\t\t\tif ( data.shadow.camera !== undefined ) { object.shadow.camera = this.parseObject( data.shadow.camera ); }\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) { object.visible = data.visible; }\n\t\t\tif ( data.frustumCulled !== undefined ) { object.frustumCulled = data.frustumCulled; }\n\t\t\tif ( data.renderOrder !== undefined ) { object.renderOrder = data.renderOrder; }\n\t\t\tif ( data.userData !== undefined ) { object.userData = data.userData; }\n\t\t\tif ( data.layers !== undefined ) { object.layers.mask = data.layers; }\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tif ( data.autoUpdate !== undefined ) { object.autoUpdate = data.autoUpdate; }\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\t/**\n\t * @author thespite / http://clicktorelease.com/\n\t */\n\n\n\tfunction ImageBitmapLoader( manager ) {\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageBitmapLoader,\n\n\t\tisImageBitmapLoader: true,\n\n\t\tsetOptions: function setOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tfetch( url ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) { onLoad( imageBitmap ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) { onError( e ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\t{ continue; }\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\t{ continue; }\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\t{ continue; }\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\t{ return\ttrue; }\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) { return []; }\n\n\t\t\tif ( noHoles === true )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\t{ mainIdx ++; }\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\t{ mainIdx ++; }\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx$1 = 0, sLen$1 = newShapes.length; sIdx$1 < sLen$1; sIdx$1 ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx$1 ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx$1 !== s2Idx )\t{ toChange.push( { froms: sIdx$1, tos: s2Idx, hole: hIdx } ); }\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx$1 ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\t{ newShapeHoles = betterShapeHoles; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i$1 = 0, il = newShapes.length; i$1 < il; i$1 ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i$1 ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i$1 ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction Font( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size ) {\n\n\t\t\tif ( size === undefined ) { size = 100; }\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths( text, size, this.data );\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\tfunction createPaths( text, size, data ) {\n\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // workaround for IE11, see #13988\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\tvar paths = [];\n\n\t\tvar offsetX = 0, offsetY = 0;\n\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\tvar char = chars[ i ];\n\n\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\n\t\t\t} else {\n\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn paths;\n\n\t}\n\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) {\n\n\t\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar path = new ShapePath();\n\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif ( glyph.o ) {\n\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FontLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) { onLoad( font ); }\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( _context === undefined ) {\n\n\t\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn _context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\t_context = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AudioLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( skyColor );\n\t\tvar color2 = new Color().set( groundColor );\n\n\t\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tvar c0 = Math.sqrt( Math.PI );\n\t\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n\tHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: HemisphereLightProbe,\n\n\t\tisHemisphereLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction AmbientLightProbe( color, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n\tAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: AmbientLightProbe,\n\n\t\tisAmbientLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\tvar _eyeRight = new Matrix4();\n\tvar _eyeLeft = new Matrix4();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar cache = this._cache;\n\n\t\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tvar ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$2 = new Vector3();\n\tvar _quaternion$3 = new Quaternion();\n\tvar _scale$1 = new Vector3();\n\tvar _orientation = new Vector3();\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaStreamSource: function ( mediaStream ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) { this.play(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function ( delay ) {\n\n\t\t\tif ( delay === undefined ) { delay = 0; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\t\tvar source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\tthis.setDetune( this.detune );\n\t\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\t// update current progress\n\n\t\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) { value = []; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDetune: function ( value ) {\n\n\t\t\tthis.detune = value;\n\n\t\t\tif ( this.source.detune === undefined ) { return; } // only set detune when available\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDetune: function () {\n\n\t\t\treturn this.detune;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopStart: function ( value ) {\n\n\t\t\tthis.loopStart = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopEnd: function ( value ) {\n\n\t\t\tthis.loopEnd = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$3 = new Vector3();\n\tvar _quaternion$4 = new Quaternion();\n\tvar _scale$2 = new Vector3();\n\tvar _orientation$1 = new Vector3();\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) { return; }\n\n\t\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0;\n\t\t\tvar data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride;\n\n\t\t\tvar currentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// accumulate data in the 'incoming' region into 'add'\n\t\taccumulateAdditive: function ( weight ) {\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t\t// add = identity\n\n\t\t\t\tthis._setIdentity();\n\n\t\t\t}\n\n\t\t\t// add := add + incoming * weight\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t\t// accuN := accuN + additive accuN\n\n\t\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\t// Add to identity for additive\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\t\t_setAdditiveIdentityNumeric: function () {\n\n\t\t\tvar startIndex = this._addIndex * this.valueSize;\n\t\t\tvar endIndex = startIndex + this.valueSize;\n\n\t\t\tfor ( var i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\t\tthis.buffer[ i ] = 0;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_setAdditiveIdentityQuaternion: function () {\n\n\t\t\tthis._setAdditiveIdentityNumeric();\n\t\t\tthis.buffer[ this._addIndex * 4 + 3 ] = 1;\n\n\t\t},\n\n\t\t_setAdditiveIdentityOther: function () {\n\n\t\t\tvar startIndex = this._origIndex * this.valueSize;\n\t\t\tvar targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor ( var i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_slerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar workOffset = this._workIndex * stride;\n\n\t\t\t// Store result in intermediate buffer offset\n\t\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t\t// Slerp to the intermediate result\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\tvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\tvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\tvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\tvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\tvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n\t// Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\tvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n\t// Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\tvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\n\tvar _trackRe = new RegExp( ''\n\t\t+ '^'\n\t\t+ _directoryRe\n\t\t+ _nodeRe\n\t\t+ _objectRe\n\t\t+ _propertyRe\n\t\t+ '$'\n\t);\n\n\tvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) { binding.getValue( array, offset ); }\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t\t},\n\n\t\tparseTrackName: function ( trackName ) {\n\n\t\t\tvar matches = _trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t},\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) { return result; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t// DECLARE ALIAS AFTER assign prototype\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup() {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar knownObject = undefined,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tvar index = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j$1 = 0, m$1 = nBindings; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j$1 ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\t\tvar binding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j$1 ], parsedPaths[ j$1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar nCachedObjects = this.nCachedObjects_,\n\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex$1 = -- nObjects,\n\t\t\t\t\t\t\tlastObject$1 = objects[ lastIndex$1 ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject$1.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject$1;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j$1 = 0, m$1 = nBindings; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath$1 = bindings[ j$1 ];\n\n\t\t\t\t\t\t\tbindingsForPath$1[ index ] = bindingsForPath$1[ lastIndex$1 ];\n\t\t\t\t\t\t\tbindingsForPath$1.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) { return bindings[ index ]; }\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot, blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\t\tthis.blendMode = blendMode || clip.blendMode;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function () {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function () {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0; // restart clip\n\t\t\tthis._loopCount = - 1;// forget previous loops\n\t\t\tthis._startTime = null;// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function () {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function () {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function ( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function ( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function ( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function () {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function () {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function () {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function ( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function ( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function ( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer,\n\t\t\t\tnow = mixer.time,\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function () {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function () {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function () {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function () {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tfor ( var j$1 = 0, m$1 = interpolants.length; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\t\tinterpolants[ j$1 ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j$1 ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function ( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function ( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function ( deltaTime ) {\n\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar loopCount = this._loopCount;\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) { return time; }\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\n\t\t\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: AnimationMixer,\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\t\tvar bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name;\n\n\t\t\t\tvar binding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tvar actionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tvar bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\t\tvar interpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot, blendMode ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid;\n\n\t\t\tvar clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\t\tvar clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\t\tvar actionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( blendMode === undefined ) {\n\n\t\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\t{ clipObject = prototypeAction._clip; }\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) { return null; }\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor ( var i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\t\tactions[ i ].stop();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i$1 = 0; i$1 !== nBindings; ++ i$1 ) {\n\n\t\t\t\tbindings[ i$1 ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Allows you to seek to a specific time in an animation.\n\t\tsetTime: function ( timeInSeconds ) {\n\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\t\tfor ( var i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t\t}\n\n\t\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tvar ib = InterleavedBuffer.prototype.clone.call( this, data );\n\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn ib;\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tvar json = InterleavedBuffer.prototype.toJSON.call( this, data );\n\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\t\tobject.raycast( raycaster, intersects );\n\n\t\t}\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function () {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector$7 = new Vector2();\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$7.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$7.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _startP = new Vector3();\n\tvar _startEnd = new Vector3();\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t\t_startP.subVectors( point, this.start );\n\t\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\n\t\tthis.count = 0;\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector$8 = new Vector3();\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$8.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$8 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$9 = new Vector3();\n\tvar _boneMatrix = new Matrix4();\n\tvar _matrixWorldInv = new Matrix4();\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.isSkeletonHelper = true;\n\n\tSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tconst d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$a = new Vector3();\n\tvar _color1 = new Color();\n\tvar _color2 = new Color();\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) { this.material.vertexColors = true; }\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$a.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\t\tconstructor: GridHelper,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\t\tthis.geometry.copy( source.geometry );\n\t\t\tthis.material.copy( source.material );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( var i = 0; i <= radials; i ++ ) {\n\n\t\t\tvar v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tvar x = Math.sin( v ) * radius;\n\t\t\tvar z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tvar color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( var i$1 = 0; i$1 <= circles; i$1 ++ ) {\n\n\t\t\tvar color$1 = ( i$1 & 1 ) ? color1 : color2;\n\n\t\t\tvar r = radius - ( radius / circles * i$1 );\n\n\t\t\tfor ( var j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tvar v$1 = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tvar x$1 = Math.sin( v$1 ) * r;\n\t\t\t\tvar z$1 = Math.cos( v$1 ) * r;\n\n\t\t\t\tvertices.push( x$1, 0, z$1 );\n\t\t\t\tcolors.push( color$1.r, color$1.g, color$1.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv$1 = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx$1 = Math.sin( v$1 ) * r;\n\t\t\t\tz$1 = Math.cos( v$1 ) * r;\n\n\t\t\t\tvertices.push( x$1, 0, z$1 );\n\t\t\t\tcolors.push( color$1.r, color$1.g, color$1.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$5 = new Vector3();\n\tvar _v2$3 = new Vector3();\n\tvar _v3$1 = new Vector3();\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) { size = 1; }\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\t_v1$5.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$3, _v1$5 );\n\n\t\tthis.lightPlane.lookAt( _v2$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$3 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tvar _vector$b = new Vector3();\n\tvar _camera = new Camera();\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) { this.camera.updateProjectionMatrix(); }\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar pointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n\tfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t\t_vector$b.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], _vector$b.x, _vector$b.y, _vector$b.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tvar _box$3 = new Box3();\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = function ( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$3.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$3.isEmpty() ) { return; }\n\n\t\tvar min = _box$3.min;\n\t\tvar max = _box$3.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t};\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.copy = function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, color ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tcolor = color || 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) { return; }\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) { scale = 1e-8; } // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar _axis = new Vector3();\n\tvar _lineGeometry, _coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( dir === undefined ) { dir = new Vector3( 0, 0, 1 ); }\n\t\tif ( origin === undefined ) { origin = new Vector3( 0, 0, 0 ); }\n\t\tif ( length === undefined ) { length = 1; }\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tvar radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t};\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t};\n\n\tArrowHelper.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t};\n\n\tArrowHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxesHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\n\t * @author Emmett Lalish / elalish\n\t *\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t */\n\n\tvar LOD_MIN = 4;\n\tvar LOD_MAX = 8;\n\tvar SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n\t// The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\tvar EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n\tvar TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\t// The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\tvar MAX_SAMPLES = 20;\n\n\tvar ENCODINGS = {};\n\tENCODINGS[ LinearEncoding ] = 0;\n\tENCODINGS[ sRGBEncoding ] = 1;\n\tENCODINGS[ RGBEEncoding ] = 2;\n\tENCODINGS[ RGBM7Encoding ] = 3;\n\tENCODINGS[ RGBM16Encoding ] = 4;\n\tENCODINGS[ RGBDEncoding ] = 5;\n\tENCODINGS[ GammaEncoding ] = 6;\n\n\tvar _flatCamera = new OrthographicCamera();\n\tvar ref = _createPlanes();\n\tvar _lodPlanes = ref._lodPlanes;\n\tvar _sizeLods = ref._sizeLods;\n\tvar _sigmas = ref._sigmas;\n\tvar _oldTarget = null;\n\n\t// Golden Ratio\n\tvar PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar INV_PHI = 1 / PHI;\n\n\t// Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\tvar _axisDirections = [\n\t\tnew Vector3( 1, 1, 1 ),\n\t\tnew Vector3( - 1, 1, 1 ),\n\t\tnew Vector3( 1, 1, - 1 ),\n\t\tnew Vector3( - 1, 1, - 1 ),\n\t\tnew Vector3( 0, PHI, INV_PHI ),\n\t\tnew Vector3( 0, PHI, - INV_PHI ),\n\t\tnew Vector3( INV_PHI, 0, PHI ),\n\t\tnew Vector3( - INV_PHI, 0, PHI ),\n\t\tnew Vector3( PHI, INV_PHI, 0 ),\n\t\tnew Vector3( - PHI, INV_PHI, 0 ) ];\n\n\tfunction PMREMGenerator( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\tPMREMGenerator.prototype = {\n\n\t\tconstructor: PMREMGenerator,\n\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\t\tfromScene: function ( scene, sigma, near, far ) {\n\t\t\tif ( sigma === void 0 ) sigma = 0;\n\t\t\tif ( near === void 0 ) near = 0.1;\n\t\t\tif ( far === void 0 ) far = 100;\n\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\t\tif ( sigma > 0 ) {\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t\t}\n\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromEquirectangular: function ( equirectangular ) {\n\n\t\t\treturn this._fromTexture( equirectangular );\n\n\t\t},\n\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromCubemap: function ( cubemap ) {\n\n\t\t\treturn this._fromTexture( cubemap );\n\n\t\t},\n\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileCubemapShader: function () {\n\n\t\t\tif ( this._cubemapShader === null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileEquirectangularShader: function () {\n\n\t\t\tif ( this._equirectShader === null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\t\tdispose: function () {\n\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif ( this._cubemapShader !== null ) { this._cubemapShader.dispose(); }\n\t\t\tif ( this._equirectShader !== null ) { this._equirectShader.dispose(); }\n\n\t\t\tfor ( var i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// private interface\n\n\t\t_cleanup: function ( outputTarget ) {\n\n\t\t\tthis._pingPongRenderTarget.dispose();\n\t\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\t\toutputTarget.scissorTest = false;\n\t\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t\t},\n\n\t\t_fromTexture: function ( texture ) {\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets( texture );\n\t\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t_allocateTargets: function ( texture ) { // warning: null texture is valid\n\n\t\t\tvar params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false,\n\t\t\t\tstencilBuffer: false\n\t\t\t};\n\n\t\t\tvar cubeUVRenderTarget = _createRenderTarget( params );\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t_compileMaterial: function ( material ) {\n\n\t\t\tvar tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t\t},\n\n\t\t_sceneToCubeUV: function ( scene, near, far, cubeUVRenderTarget ) {\n\n\t\t\tvar fov = 90;\n\t\t\tvar aspect = 1;\n\t\t\tvar cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tvar upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\t\tvar forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tvar outputEncoding = renderer.outputEncoding;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar clearColor = renderer.getClearColor();\n\t\t\tvar clearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\n\t\t\tvar background = scene.background;\n\t\t\tif ( background && background.isColor ) {\n\n\t\t\t\tbackground.convertSRGBToLinear();\n\t\t\t\t// Convert linear to RGBE\n\t\t\t\tvar maxComponent = Math.max( background.r, background.g, background.b );\n\t\t\t\tvar fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t\t\t\tbackground = background.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\t\t\t\tvar alpha = ( fExp + 128.0 ) / 255.0;\n\t\t\t\trenderer.setClearColor( background, alpha );\n\t\t\t\tscene.background = null;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar col = i % 3;\n\t\t\t\tif ( col == 0 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.setClearColor( clearColor, clearAlpha );\n\n\t\t},\n\n\t\t_textureToCubeUV: function ( texture, cubeUVRenderTarget ) {\n\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tvar mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\t\tvar uniforms = material.uniforms;\n\n\t\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t\t}\n\n\t\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\trenderer.render( mesh, _flatCamera );\n\n\t\t},\n\n\t\t_applyPMREM: function ( cubeUVRenderTarget ) {\n\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor ( var i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\t\tvar sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\t\tvar poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\n\t\t},\n\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\t\t_blur: function ( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\t\tvar pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tlodIn,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'latitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t\tthis._halfBlur(\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tlodOut,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'longitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t},\n\n\t\t_halfBlur: function ( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar blurMaterial = this._blurMaterial;\n\n\t\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t\t}\n\n\t\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\t\tvar STANDARD_DEVIATIONS = 3;\n\n\t\t\tvar blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\t\tvar blurUniforms = blurMaterial.uniforms;\n\n\t\t\tvar pixels = _sizeLods[ lodIn ] - 1;\n\t\t\tvar radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\t\tvar sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tvar samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\t\tconsole.warn( (\"sigmaRadians, \" + sigmaRadians + \", is too large and will clip, as it requested \" + samples + \" samples when the maximum is set to \" + MAX_SAMPLES) );\n\n\t\t\t}\n\n\t\t\tvar weights = [];\n\t\t\tvar sum = 0;\n\n\t\t\tfor ( var i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\t\tvar x$1 = i / sigmaPixels;\n\t\t\t\tvar weight = Math.exp( - x$1 * x$1 / 2 );\n\t\t\t\tweights.push( weight );\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\tsum += weight;\n\n\t\t\t\t} else if ( i < samples ) {\n\n\t\t\t\t\tsum += 2 * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0; i$1 < weights.length; i$1 ++ ) {\n\n\t\t\t\tweights[ i$1 ] = weights[ i$1 ] / sum;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\t\tblurUniforms[ 'samples' ].value = samples;\n\t\t\tblurUniforms[ 'weights' ].value = weights;\n\t\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\t\tif ( poleAxis ) {\n\n\t\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\t\tvar outputSize = _sizeLods[ lodOut ];\n\t\t\tvar x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\t\tvar y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\t\trenderer.setRenderTarget( targetOut );\n\t\t\trenderer.render( blurMesh, _flatCamera );\n\n\t\t}\n\n\t};\n\n\tfunction _isLDR( texture ) {\n\n\t\tif ( texture === undefined || texture.type !== UnsignedByteType ) { return false; }\n\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n\t}\n\n\tfunction _createPlanes() {\n\n\t\tvar _lodPlanes = [];\n\t\tvar _sizeLods = [];\n\t\tvar _sigmas = [];\n\n\t\tvar lod = LOD_MAX;\n\n\t\tfor ( var i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tvar sizeLod = Math.pow( 2, lod );\n\t\t\t_sizeLods.push( sizeLod );\n\t\t\tvar sigma = 1.0 / sizeLod;\n\n\t\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t\t} else if ( i == 0 ) {\n\n\t\t\t\tsigma = 0;\n\n\t\t\t}\n\n\t\t\t_sigmas.push( sigma );\n\n\t\t\tvar texelSize = 1.0 / ( sizeLod - 1 );\n\t\t\tvar min = - texelSize / 2;\n\t\t\tvar max = 1 + texelSize / 2;\n\t\t\tvar uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\t\tvar cubeFaces = 6;\n\t\t\tvar vertices = 6;\n\t\t\tvar positionSize = 3;\n\t\t\tvar uvSize = 2;\n\t\t\tvar faceIndexSize = 1;\n\n\t\t\tvar position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\t\tvar uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\t\tvar faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\t\tfor ( var face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\t\tvar x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\t\tvar y = face > 2 ? 0 : - 1;\n\t\t\t\tvar coordinates = [\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y + 1, 0\n\t\t\t\t];\n\t\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\t\tvar fill = [ face, face, face, face, face, face ];\n\t\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t\t}\n\n\t\t\tvar planes = new BufferGeometry();\n\t\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t\t_lodPlanes.push( planes );\n\n\t\t\tif ( lod > LOD_MIN ) {\n\n\t\t\t\tlod --;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { _lodPlanes: _lodPlanes, _sizeLods: _sizeLods, _sigmas: _sigmas };\n\n\t}\n\n\tfunction _createRenderTarget( params ) {\n\n\t\tvar cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\tfunction _setViewport( target, x, y, width, height ) {\n\n\t\ttarget.viewport.set( x, y, width, height );\n\t\ttarget.scissor.set( x, y, width, height );\n\n\t}\n\n\tfunction _getBlurShader( maxSamples ) {\n\n\t\tvar weights = new Float32Array( maxSamples );\n\t\tvar poleAxis = new Vector3( 0, 1, 0 );\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'SphericalGaussianBlur',\n\n\t\t\tdefines: { 'n': maxSamples },\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'samples': { value: 1 },\n\t\t\t\t'weights': { value: weights },\n\t\t\t\t'latitudinal': { value: false },\n\t\t\t\t'dTheta': { value: 0 },\n\t\t\t\t'mipInt': { value: 0 },\n\t\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform sampler2D envMap;\\nuniform int samples;\\nuniform float weights[n];\\nuniform bool latitudinal;\\nuniform float dTheta;\\nuniform float mipInt;\\nuniform vec3 poleAxis;\\n\\n\" + (_getEncodings()) + \"\\n\\n#define ENVMAP_TYPE_CUBE_UV\\n#include <cube_uv_reflection_fragment>\\n\\nvec3 getSample(float theta, vec3 axis) {\\n\\tfloat cosTheta = cos(theta);\\n\\t// Rodrigues' axis-angle rotation\\n\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t+ cross(axis, vOutputDirection) * sin(theta)\\n\\t\\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\\n\\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\\n}\\n\\nvoid main() {\\n\\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\\n\\tif (all(equal(axis, vec3(0.0))))\\n\\t\\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\\n\\taxis = normalize(axis);\\n\\tgl_FragColor = vec4(0.0);\\n\\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\\n\\tfor (int i = 1; i < n; i++) {\\n\\t\\tif (i >= samples)\\n\\t\\t\\tbreak;\\n\\t\\tfloat theta = dTheta * float(i);\\n\\t\\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\\n\\t\\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\\n\\t}\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getEquirectShader() {\n\n\t\tvar texelSize = new Vector2( 1, 1 );\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'EquirectangularToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'texelSize': { value: texelSize },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform sampler2D envMap;\\nuniform vec2 texelSize;\\n\\n\" + (_getEncodings()) + \"\\n\\n#include <common>\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(0.0);\\n\\tvec3 outputDirection = normalize(vOutputDirection);\\n\\tvec2 uv = equirectUv( outputDirection );\\n\\tvec2 f = fract(uv / texelSize - 0.5);\\n\\tuv -= f * texelSize;\\n\\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.x += texelSize.x;\\n\\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.y += texelSize.y;\\n\\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.x -= texelSize.x;\\n\\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tvec3 tm = mix(tl, tr, f.x);\\n\\tvec3 bm = mix(bl, br, f.x);\\n\\tgl_FragColor.rgb = mix(tm, bm, f.y);\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getCubemapShader() {\n\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'CubemapToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform samplerCube envMap;\\n\\n\" + (_getEncodings()) + \"\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(0.0);\\n\\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getCommonVertexShader() {\n\n\t\treturn \"\\nprecision mediump float;\\nprecision mediump int;\\nattribute vec3 position;\\nattribute vec2 uv;\\nattribute float faceIndex;\\nvarying vec3 vOutputDirection;\\n\\n// RH coordinate system; PMREM face-indexing convention\\nvec3 getDirection(vec2 uv, float face) {\\n\\tuv = 2.0 * uv - 1.0;\\n\\tvec3 direction = vec3(uv, 1.0);\\n\\tif (face == 0.0) {\\n\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\t} else if (face == 1.0) {\\n\\t\\tdirection = direction.xzy;\\n\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\t} else if (face == 2.0) {\\n\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\t} else if (face == 3.0) {\\n\\t\\tdirection = direction.zyx;\\n\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\t} else if (face == 4.0) {\\n\\t\\tdirection = direction.xzy;\\n\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\t} else if (face == 5.0) {\\n\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\t}\\n\\treturn direction;\\n}\\n\\nvoid main() {\\n\\tvOutputDirection = getDirection(uv, faceIndex);\\n\\tgl_Position = vec4( position, 1.0 );\\n}\\n\\t\";\n\n\t}\n\n\tfunction _getEncodings() {\n\n\t\treturn \"\\nuniform int inputEncoding;\\nuniform int outputEncoding;\\n\\n#include <encodings_pars_fragment>\\n\\nvec4 inputTexelToLinear(vec4 value){\\n\\tif(inputEncoding == 0){\\n\\t\\treturn value;\\n\\t}else if(inputEncoding == 1){\\n\\t\\treturn sRGBToLinear(value);\\n\\t}else if(inputEncoding == 2){\\n\\t\\treturn RGBEToLinear(value);\\n\\t}else if(inputEncoding == 3){\\n\\t\\treturn RGBMToLinear(value, 7.0);\\n\\t}else if(inputEncoding == 4){\\n\\t\\treturn RGBMToLinear(value, 16.0);\\n\\t}else if(inputEncoding == 5){\\n\\t\\treturn RGBDToLinear(value, 256.0);\\n\\t}else{\\n\\t\\treturn GammaToLinear(value, 2.2);\\n\\t}\\n}\\n\\nvec4 linearToOutputTexel(vec4 value){\\n\\tif(outputEncoding == 0){\\n\\t\\treturn value;\\n\\t}else if(outputEncoding == 1){\\n\\t\\treturn LinearTosRGB(value);\\n\\t}else if(outputEncoding == 2){\\n\\t\\treturn LinearToRGBE(value);\\n\\t}else if(outputEncoding == 3){\\n\\t\\treturn LinearToRGBM(value, 7.0);\\n\\t}else if(outputEncoding == 4){\\n\\t\\treturn LinearToRGBM(value, 16.0);\\n\\t}else if(outputEncoding == 5){\\n\\t\\treturn LinearToRGBD(value, 256.0);\\n\\t}else{\\n\\t\\treturn LinearToGamma(value, 2.2);\\n\\t}\\n}\\n\\nvec4 envMapTexelToLinear(vec4 color) {\\n\\treturn inputTexelToLinear(color);\\n}\\n\\t\";\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\tvar LinePieces = 1;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) { materials = []; }\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tObject.assign( CurvePath.prototype, {\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from equidistant sampling along the path\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Path.prototype, {\n\n\t\tfromPoints: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\t\treturn this.setFromPoints( points );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction AxisHelper( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\treturn new AxesHelper( size );\n\n\t}\n\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tObject.assign( Loader.prototype, {\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t} );\n\n\tLoader.Handlers = {\n\n\t\tadd: function ( /* regex, loader */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t\t},\n\n\t\tget: function ( /* file */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t\t}\n\n\t};\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t\treturn this.setResourcePath( value );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\n\t} );\n\n\tFrustum.prototype.setFromMatrix = function ( m ) {\n\n\t\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\t\treturn this.setFromProjectionMatrix( m );\n\n\t};\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\tObject.assign( MathUtils, {\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\t\treturn MathUtils.floorPowerOfTwo( value );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\t\treturn MathUtils.ceilPowerOfTwo( value );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\t\t\treturn attribute.applyMatrix3( this );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\t\t\treturn attribute.applyMatrix4( this );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tarea: function () {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\t\treturn this.getArea();\n\n\t\t},\n\t\tbarycoordFromPoint: function ( point, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn this.getBarycoord( point, target );\n\n\t\t},\n\t\tmidpoint: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\t\treturn this.getMidpoint( target );\n\n\t\t},\n\t\tnormal: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn this.getNormal( target );\n\n\t\t},\n\t\tplane: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\t\treturn this.getPlane( target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle, {\n\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t\t},\n\t\tnormal: function ( a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\t\treturn this.extractPoints( divisions );\n\n\t\t},\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Geometry.prototype, {\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeLineDistances: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t},\n\t\tgetWorldRotation: function () {\n\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( Mesh.prototype, {\n\n\t\tsetDrawMode: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t},\n\n\t} );\n\n\tObject.defineProperties( Mesh.prototype, {\n\n\t\tdrawMode: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\t\treturn TrianglesDrawMode;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tSkinnedMesh.prototype.initBones = function () {\n\n\t\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n\t};\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) { this.filmGauge = filmGauge; }\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\treturn this.setAttribute( name, attribute );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t},\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\t\treturn this.deleteAttribute( name );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InstancedBufferGeometry.prototype, {\n\n\t\tmaxInstancedCount: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\t\treturn this.instanceCount;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\t\tthis.instanceCount = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Raycaster.prototype, {\n\n\t\tlinePrecision: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\t\treturn this.params.Line.threshold;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\t\tthis.params.Line.threshold = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InterleavedBuffer.prototype, {\n\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( value );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\t\tgetArrays: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t\t},\n\n\t\taddShapeList: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t\t},\n\n\t\taddShape: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\toverdraw: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t},\n\n\t\tstencilMask: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\treturn this.stencilFuncMask;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\tthis.stencilFuncMask = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t},\n\t\tanimate: function ( callback ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\t\tthis.setAnimationLoop( callback );\n\n\t\t},\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\t\tresetGLState: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\t\treturn this.state.reset();\n\n\t\t},\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t},\n\t\tsetFaceCulling: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t\t},\n\t\tallocTextureUnit: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t\t},\n\t\tsetTexture: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t\t},\n\t\tsetTexture2D: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t\t},\n\t\tsetTextureCube: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t\t},\n\t\tgetActiveMipMapLevel: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\t\treturn this.getActiveMipmapLevel();\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\t\treturn this.getContext();\n\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\t\treturn this.xr;\n\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\t\treturn 1.0;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* cullFace */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\t\treturn new WebGLCubeRenderTarget( width, options );\n\n\t}\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Audio.prototype, {\n\n\t\tload: {\n\t\t\tvalue: function ( file ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\t\tvar scope = this;\n\t\t\t\tvar audioLoader = new AudioLoader();\n\t\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t\t} );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t},\n\t\tstartTime: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n\t}\n\n\t//\n\n\tfunction JSONLoader() {\n\n\t\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n\t}\n\n\t//\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tattach: function ( /* child, scene, parent */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction LensFlare() {\n\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n\t}\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\t\trevision: REVISION,\n\t\t} } ) );\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeGeometry = BoxGeometry;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.Face3 = Face3;\n\texports.Face4 = Face4;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GammaEncoding = GammaEncoding;\n\texports.Geometry = Geometry;\n\texports.GeometryUtils = GeometryUtils;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.LightShadow = LightShadow;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.Spline = Spline;\n\texports.SplineCurve = SplineCurve;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}
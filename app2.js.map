{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app2.js","app/js2/2d/render.js","app/js2/2d/somed3.js","app/js2/cube.js","app/js2/main.js","node_modules/d3-array/dist/d3-array.js","node_modules/d3-axis/dist/d3-axis.js","node_modules/d3-brush/dist/d3-brush.js","node_modules/d3-chord/dist/d3-chord.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-contour/dist/d3-contour.js","node_modules/d3-dispatch/dist/d3-dispatch.js","node_modules/d3-drag/dist/d3-drag.js","node_modules/d3-dsv/dist/d3-dsv.js","node_modules/d3-ease/dist/d3-ease.js","node_modules/d3-fetch/dist/d3-fetch.js","node_modules/d3-force/dist/d3-force.js","node_modules/d3-format/dist/d3-format.js","node_modules/d3-geo/dist/d3-geo.js","node_modules/d3-hierarchy/dist/d3-hierarchy.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-path/dist/d3-path.js","node_modules/d3-polygon/dist/d3-polygon.js","node_modules/d3-quadtree/dist/d3-quadtree.js","node_modules/d3-random/dist/d3-random.js","node_modules/d3-scale-chromatic/dist/d3-scale-chromatic.js","node_modules/d3-scale/dist/d3-scale.js","node_modules/d3-selection/dist/d3-selection.js","node_modules/d3-shape/dist/d3-shape.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/d3-timer/dist/d3-timer.js","node_modules/d3-transition/dist/d3-transition.js","node_modules/d3-voronoi/dist/d3-voronoi.js","node_modules/d3-zoom/dist/d3-zoom.js","node_modules/d3/dist/d3.node.js","node_modules/gl-matrix/cjs/common.js","node_modules/gl-matrix/cjs/index.js","node_modules/gl-matrix/cjs/mat2.js","node_modules/gl-matrix/cjs/mat2d.js","node_modules/gl-matrix/cjs/mat3.js","node_modules/gl-matrix/cjs/mat4.js","node_modules/gl-matrix/cjs/quat.js","node_modules/gl-matrix/cjs/quat2.js","node_modules/gl-matrix/cjs/vec2.js","node_modules/gl-matrix/cjs/vec3.js","node_modules/gl-matrix/cjs/vec4.js","node_modules/three/build/three.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","render","_d","_somed","cube","forward","color","rotate","reverse","rotateReverse","rotateFn","window","addEventListener","key","document","querySelectorAll","forEach","d","ev","faceColors","getFaceColors","face","querySelector","concat","svg","drawCube","clientWidth","clientHeight","console","log","append","update","clickMap","white","red","green","blue","yellow","orange","keys","k","select","on","g","event","preventDefault","./somed3","d3","2","_typeof","obj","Symbol","iterator","constructor","prototype","width","height","inData","dim","min","create","attr","cdim","pieceGroup","selectAll","data","buildData","join","path","rect","assign","node","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","_interopRequireWildcard","WeakMap","data2","iter","values","y","x","push","next","3","Cube","_glMatrix","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","toString","slice","name","from","test","_unsupportedIterableToArray","F","s","done","_e","TypeError","err","normalCompletion","didErr","step","_e2","arr","len","arr2","colorMap","w","direction","vec3","fromValues","adjacent","b","#","COLORS","FACES","ColorFace","vector","transform","this","clone","parentTransform","Piece","colorFaces","colors","position","split","map","add","mat4","fromTranslation","csv","_this3","dsvFormat","parse","pieces","Map","v","faceRotations","dir","cw","fromRotation","Math","PI","tr1","scale","tr2","rota","mul","transformMat4","adjacentCenter","max","ret","_this","pos","dot","m","position2","getColors","getFaceColor","_this2","cf","_step","_iterator","_step2","_iterator2","_step3","_iterator3","invert","getByPosition","vec","_step4","_iterator4","equals","getFace","_step5","_iterator5","getFacePiecePositions","faceColor","a1","a2","a3","_i","_a","_step6","c1","_iterator6","_step7","c2","_iterator7","c3","_this4","gl-matrix","4","THREE","_cube","_render","Promise","resolve","reject","then","vh","innerHeight","documentElement","style","setProperty","text","divCube","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","Mesh","z","animate","requestAnimationFrame","rotation","./2d/render","./cube","three","5","global","factory","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pair","number","variance","valueof","delta","mean","sum","isNaN","deviation","array","sqrt","extent","constant","identity","range","start","stop","arguments","ceil","e10","e5","e2","tickIncrement","count","power","floor","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","quantile","i0","value0","transpose","matrix","j","row","bisect","cross","values0","values1","reduce","i1","n0","n1","descending","histogram","domain","threshold","xz","x0","x1","tz","shift","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","random","ticks","isFinite","zip","define","amd","6","translateX","translateY","center","offset","bandwidth","round","entering","__axis","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","context","apply","format","spacing","range0","range1","copy","selection","tick","order","tickExit","exit","tickEnter","enter","line","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","7","d3Dispatch","d3Drag","d3Interpolate","d3Selection","d3Transition","BrushEvent","target","type","nopropagation","stopImmediatePropagation","noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","number1","number2","toucher","identifier","touch","touches","X","handles","input","output","xy","Y","XY","cursors","overlay","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","ctrlKey","button","defaultExtent","ownerSVGElement","hasAttribute","viewBox","baseVal","defaultTouchable","navigator","maxTouchPoints","local","__brush","empty","brush$1","touchending","touchable","listeners","dispatch","handleSize","brush","group","property","initialize","handle","redraw","started","touchmoved","touchended","emitter","that","args","clean","Emitter","state","active","w0","w1","e0","e1","s0","s1","moving","lockX","lockY","__data__","mode","metaKey","altKey","signX","signY","W","N","E","S","dx","dy","shifting","shiftKey","pointer","changedTouches","mouse","point0","point","emit","beforestart","moved","ended","view","keydowned","keyupped","dragDisable","interrupt","point1","move","clearTimeout","setTimeout","dragEnable","end","keyCode","tween","selection0","selection1","interpolate","clear","starting","customEvent","keyModifiers","brushSelection","brushX","brushY","self","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition","8","d3Array","d3Path","cos","sin","pi","halfPi","tau","compareValue","source","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","chord","padAngle","sortGroups","sortSubgroups","sortChords","groupSums","groupIndex","subgroupIndex","chords","groups","subgroups","di","dj","a0","index","subindex","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","moveTo","arc","quadraticCurveTo","closePath","d3-array","d3-path","9","object","createObject","setObject","createMap","setMap","map$$1","Set","entries","size","proto","nest","sortValues","rollup","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","sortKey","10","extend","parent","definition","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","channels","displayable","formatHsl","brighter","darker","deg2rad","rad2deg","t1","t2","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","A","B","C","D","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh","lch","11","contains","ring","hole","ringContains","yi","pj","yj","segmentContains","q","collinear","noop","cases","contours","smooth","smoothLinear","contour","polygons","holes","callback","t0","t3","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","area","polygon","coordinates","v0","xt","yt","v1","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","contourDensity","weight","density","Float32Array","wi","transformPolygon","transformRing","transformPoint","resize","cellSize","12","Dispatch","parseTypenames","typenames","types","indexOf","typename","T","13","nodrag","root","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","defaultContainer","defaultSubject","drag","mousedownx","mousedowny","mousemoving","container","gestures","clickDistance2","mousedowned","touchstarted","gesture","mousemoved","mouseupped","clientX","clientY","sublisteners","p0","clickDistance","14","EOL","EOF","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","I","eof","eol","token","replace","preformatBody","formatValue","formatRow","Date","convert","customConverter","formatBody","formatRows","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","csvFormatRow","csvFormatValue","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsvFormatRow","tsvFormatValue","fixtz","getHours","autoType","match","15","quadInOut","cubicInOut","polyIn","custom","exponent","polyOut","polyInOut","sinInOut","expInOut","circleInOut","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","easeBack","easeBackIn","easeBackInOut","easeBackOut","easeBounce","easeBounceIn","easeBounceInOut","easeBounceOut","easeCircle","easeCircleIn","easeCircleInOut","easeCircleOut","easeCubic","easeCubicIn","easeCubicInOut","easeCubicOut","easeElastic","easeElasticIn","easeElasticInOut","easeElasticOut","easeExp","easeExpIn","easeExpInOut","easeExpOut","easeLinear","easePoly","easePolyIn","easePolyInOut","easePolyOut","easeQuad","easeQuadIn","easeQuadInOut","easeQuadOut","easeSin","easeSinIn","easeSinInOut","easeSinOut","16","d3Dsv","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","init","fetch","dsvParse","undefined","responseJson","json","parser","text$$1","DOMParser","parseFromString","xml","html","image","Image","onerror","onload","src","d3-dsv","17","d3Quadtree","d3Collection","d3Timer","jiggle","vx","vy","find","nodeById","nodeId","x$1","y$1","initialAngle","forceCenter","nodes","force","sx","sy","forceCollide","radii","strength","iterations","tree","ri","ri2","quadtree","visitAfter","prepare","visit","quad","y0","y1","rj","forceLink","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","Infinity","theta2","accumulate","x2","distanceMin","distanceMax","theta","forceRadial","radiuses","forceSimulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","timer","fx","fy","initializeNodes","angle","initializeForce","restart","d2","closest","forceX","forceY","yz","d3-collection","d3-quadtree","d3-timer","18","formatDecimal","toExponential","coefficient","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","formatRounded","formatTypes","%","toFixed","toPrecision","toUpperCase","locale","prefixes","formatLocale","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","formatPrefix","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","19","adder","Adder","reset","temp","valueOf","bv","av","epsilon","quarterPi","degrees","radians","atan","exp","acos","haversin","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","cartesianNormalizeInPlace","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","ranges","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","lambda00$2","phi00$2","z0","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","pointEqual","Intersection","points","other","entry","clipRejoin","segments","compareIntersection","startInside","clip","segment","p1","current","isSubject","longitude","polygonContains","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","q1","c0","v00","point2","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","b1","polygonInside","cleanInside","ax","ay","lambda0$2","sinPhi0$1","cosPhi0$1","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","x00","y00","x0$1","y0$1","areaSum$1","areaRingSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","areaPointFirst$1","areaPoint$1","x00$1","y00$1","x0$3","y0$3","x0$2","y0$2","boundsStream$1","bounds","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lineTo","lengthRing","x00$2","y00$2","x0$4","y0$4","lengthSum$1","lengthStream$1","lengthPointFirst$1","lengthPoint$1","PathString","_string","circle$1","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","translate","fitExtent","fitSize","fitWidth","fitHeight","_circle","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","resampleNone","transformRadians","scaleTranslate","scaleTranslateRotate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cacheStream","preclip","postclip","recenter","transformRotate","clipAngle","reflectX","reflectY","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","equirectangularRaw","conicEquidistantRaw","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","feature","deltaMax","geoCentroid","geoCircle","circle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoContains","geoDistance","geoEqualEarth","geoEqualEarthRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","sa","tx","ty","kx","ky","geoInterpolate","cy1","sy1","kx0","ky0","kx1","ky1","geoLength","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoPath","projectionStream","contextStream","measure","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","20","defaultSeparation","meanXReduce","maxYReduce","children","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","enclose","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r1","r2","x21","y21","r21","x3","y3","r3","b2","b3","d1","xa","xb","ya","yb","place","intersects","score","Node$1","previous","packEnclose","aa","sj","sk","pack","optional","required","constantZero","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","squarify","resquarify","_squarify","cluster","separation","nodeSize","previousNode","meanX","maxY","leafLeft","leafRight","packSiblings","partition","positionNode","stratify","nodeKey","nodeByKey","treeRoot","firstWalk","secondWalk","sizeNode","bottom","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingOuter","treemapBinary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","treemapResquarify","treemapSliceDice","treemapSquarify","21","d3Color","basis","v2","v3","basis$1","basisClosed","linear","hue","gamma","nogamma","exponential","rgbGamma","rgbSpline","spline","rgbBasis","rgbBasisClosed","numberArray","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","setTime","reA","reB","string","am","bm","bs","lastIndex","one","cssNode","cssRoot","cssView","svgNode","skewX","scaleX","scaleY","decompose","interpolateTransform","pxComma","pxParen","degParen","interpolateTransformCss","createElement","defaultView","getComputedStyle","getPropertyValue","removeChild","interpolateTransformSvg","createElementNS","setAttribute","consolidate","rho","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateCubehelix","interpolateCubehelixLong","interpolateDate","interpolateDiscrete","interpolateHcl","interpolateHclLong","interpolateHsl","interpolateHslLong","interpolateHue","interpolateLab","interpolateNumber","interpolateNumberArray","interpolateObject","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateRound","interpolateString","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","duration","piecewise","quantize","interpolator","samples","d3-color","22","tauEpsilon","Path","_x0","_y0","_x1","_y1","bezierCurveTo","arcTo","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","da","23","lexicographicOrder","computeUpperHullIndexes","polygonArea","polygonCentroid","inside","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","polygonLength","perimeter","24","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","Quadtree","addAll","leaf_copy","treeProto","cover","quads","retainer","removeAll","25","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","26","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp","scheme","BrBG","scheme$1","PRGn","scheme$2","PiYG","scheme$3","PuOr","scheme$4","RdBu","scheme$5","RdGy","scheme$6","RdYlBu","scheme$7","RdYlGn","scheme$8","Spectral","scheme$9","BuGn","scheme$a","BuPu","scheme$b","GnBu","scheme$c","OrRd","scheme$d","PuBuGn","scheme$e","PuBu","scheme$f","PuRd","scheme$g","RdPu","scheme$h","YlGnBu","scheme$i","YlGn","scheme$j","YlOrBr","scheme$k","YlOrRd","scheme$l","Blues","scheme$m","Greens","scheme$n","Greys","scheme$o","Purples","scheme$p","Reds","scheme$q","Oranges","warm","cool","c$1","pi_1_3","pi_2_3","ramp$1","viridis","magma","inferno","plasma","interpolateBlues","interpolateBrBG","interpolateBuGn","interpolateBuPu","interpolateCividis","interpolateCool","interpolateCubehelixDefault","interpolateGnBu","interpolateGreens","interpolateGreys","interpolateInferno","interpolateMagma","interpolateOrRd","interpolateOranges","interpolatePRGn","interpolatePiYG","interpolatePlasma","interpolatePuBu","interpolatePuBuGn","interpolatePuOr","interpolatePuRd","interpolatePurples","interpolateRainbow","ts","interpolateRdBu","interpolateRdGy","interpolateRdPu","interpolateRdYlBu","interpolateRdYlGn","interpolateReds","interpolateSinebow","interpolateSpectral","interpolateTurbo","interpolateViridis","interpolateWarm","interpolateYlGn","interpolateYlGnBu","interpolateYlOrBr","interpolateYlOrRd","schemeAccent","schemeBlues","schemeBrBG","schemeBuGn","schemeBuPu","schemeCategory10","schemeDark2","schemeGnBu","schemeGreens","schemeGreys","schemeOrRd","schemeOranges","schemePRGn","schemePaired","schemePastel1","schemePastel2","schemePiYG","schemePuBu","schemePuBuGn","schemePuOr","schemePuRd","schemePurples","schemeRdBu","schemeRdGy","schemeRdPu","schemeRdYlBu","schemeRdYlGn","schemeReds","schemeSet1","schemeSet2","schemeSet3","schemeSpectral","schemeTableau10","schemeYlGn","schemeYlGnBu","schemeYlOrBr","schemeYlOrRd","27","d3Format","d3Time","d3TimeFormat","initRange","initInterpolator","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","pointish","unit","normalize","clamper","bimap","d0","polymap","clamp","untransform","continuous","linearish","nice","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","transformSymlog","log1p","transformSymexp","expm1","symlogish","transformPow","transformSqrt","transformSquare","powish","number$1","calendar","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","durationSecond","durationMinute","durationHour","durationDay","tickInterval","every","transformer$1","k10","copy$1","sequentialPow","transformer$2","k21","divergingPow","scaleBand","scalePoint","scaleIdentity","identity$1","scaleLinear","scaleLog","scaleSymlog","symlog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","invertExtent","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","scaleSequential","sequential","scaleSequentialLog","sequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","sequentialSymlog","scaleSequentialQuantile","sequentialQuantile","scaleDiverging","diverging","scaleDivergingLog","divergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","divergingSymlog","d3-format","d3-time","d3-time-format","28","xhtml","namespaces","xlink","xmlns","namespace","space","creatorInherit","ownerDocument","uri","namespaceURI","creatorFixed","fullname","creator","none","selector","selectorAll","matcher","matches","sparse","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","mouseenter","mouseleave","Selection","parents","_groups","_parents","subnode","subgroup","bind","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","classed","before","deep","nextId","Local","sourceEvent","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","top","clientTop","clientPoint","29","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","dx0","dy0","dx1","dy1","Linear","curveLinear","defined","curve","defined0","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","curveHorizontal","curveVertical","curveRadial$1","p2","p3","draw","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","bundle","point$1","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","series","none$1","stackValue","appearance","peaks","peak","vi","vj","_t0","px","py","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","bx","by","kc","lc","curveBasis","curveBasisClosed","curveBasisOpen","curveBundle","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","linkHorizontal","linkRadial","linkVertical","pie","arcs","pa","radialArea","radialLine","stack","oz","kz","sz","sij","ki","si","stackOffsetDiverging","yn","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAppearance","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","30","localDate","H","L","setFullYear","utcDate","setUTCFullYear","newDate","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseQuarter","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","utcMonday","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","dow","utcSunday","utcThursday","timeParse","formatIso","toISOString","parseIso","isoFormat","isoParse","timeFormatDefaultLocale","timeFormatLocale","31","newInterval","floori","offseti","field","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeDays","timeFriday","timeFridays","timeHours","timeInterval","timeMilliseconds","timeMinutes","timeMondays","timeMonths","timeSaturday","timeSaturdays","timeSeconds","timeSundays","timeThursdays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeWeeks","timeYears","utcMilliseconds","utcSeconds","utcWeeks","32","taskHead","taskTail","frame","timeout","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","clearNow","Timer","_call","_time","delay","timerFlush","wake","sleep","nap","poke","clearInterval","setInterval","total","elapsed","33","d3Ease","emptyOn","emptyTween","schedule","timing","schedules","__transition","ease","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","styleInterpolate","styleTween","textInterpolate","textTween","Transition","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","removeFunction","cancel","defaultTiming","d3-ease","34","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","after","grandpa","uncle","sibling","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2","ha","hc","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","triangles","_found","voronoi","x$$1","y$$1","35","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","__zoom","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultConstrain","translateExtent","zoom","touchstarting","constrain","wheelDelta","scaleExtent","wheeled","dblclicked","__zooming","Gesture","taps","wheel","wheelidled","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","k0","translateBy","translateTo","zoomIdentity","zoomTransform","36","d3Axis","d3Brush","d3Chord","d3Contour","d3Fetch","d3Force","d3Geo","d3Hierarchy","d3Polygon","d3Random","d3Scale","d3ScaleChromatic","d3Shape","d3Voronoi","d3Zoom","enumerable","version","d3-axis","d3-brush","d3-chord","d3-contour","d3-fetch","d3-force","d3-geo","d3-hierarchy","d3-polygon","d3-random","d3-scale","d3-scale-chromatic","d3-shape","d3-voronoi","d3-zoom","37","setMatrixArrayType","ARRAY_TYPE","toRadian","degree","RANDOM","EPSILON","hypot","38","vec4","vec2","quat2","quat","mat3","mat2d","mat2","glMatrix","./common.js","./mat2.js","./mat2d.js","./mat3.js","./mat4.js","./quat.js","./quat2.js","./vec2.js","./vec3.js","./vec4.js","39","m00","m01","m10","m11","det","adjoint","multiply","rad","fromScaling","str","frob","LDU","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","sub","40","ac","ad","atx","aty","a4","a5","b4","b5","41","fromMat4","m02","m12","m20","m21","m22","a02","a12","a20","a21","a22","b01","b11","b21","fromMat2d","fromQuat","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b02","b03","b04","b05","b06","b07","b08","b09","b10","a6","a7","a8","b6","b7","b8","b12","b20","b22","42","m03","m13","m23","m30","m31","m32","m33","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bz","bw","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","near","far","rl","tb","nf","perspective","fovy","aspect","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","up","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","43","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","ln","slerp","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fromEuler","halfToRad","setAxes","sqlerp","rotationTo","sqrLen","squaredLength","lerp","et","omega","cosom","sinom","scale0","scale1","fRoot","fTrace","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","44","dq","w2","fromRotationTranslationValues","outer","getDual","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","qx","qy","qz","qw","rotateByQuatPrepend","rotateAroundAxis","axisLength","mt","sqlen","a_dot_b","setReal","getReal","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","45","divide","scaleAndAdd","squaredDistance","negate","transformMat2","transformMat2d","transformMat3","sinC","cosC","mag","cosine","sqrDist","dist","div","stride","fn","arg","46","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformQuat","uvx","uvy","uvz","uuvx","uuvy","uuvz","mag1","mag2","47","G","J","v4","ix","iy","iz","iw","48","EventDispatcher","isInteger","nextKey","_listeners","hasEventListener","listenerArray","_lut","_canvas","MathUtils","DEG2RAD","RAD2DEG","generateUUID","euclideanModulo","mapLinear","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degToRad","radToDeg","isPowerOfTwo","ceilPowerOfTwo","floorPowerOfTwo","setQuaternionFromProperEuler","c13","s13","c1_3","s1_3","c3_1","s3_1","warn","Vector2","Matrix3","elements","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addVectors","addScalar","addScaledVector","subVectors","subScalar","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","lengthSq","manhattanLength","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","lerpVectors","fromArray","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","b23","b31","b32","b33","getInverse","throwOnDegenerate","t11","t12","t13","detInv","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","ImageUtils","getDataURL","HTMLCanvasElement","canvas","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","Quaternion","_z","_w","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","images","url","dispose","transformUv","uv","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getZ","getW","isWebGLRenderTarget","isWebGLMultisampleRenderTarget","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","sqrSin","tDir","multiplyQuaternionsFlat","_onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","isEuler","setFromAxisAngle","halfAngle","setFromRotationMatrix","s$1","s$2","s$3","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","_vector","Vector3","_quaternion","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyNormalMatrix","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","projectOnVector","denominator","projectOnPlane","planeNormal","setFromSpherical","setFromSphericalCoords","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","_v1","_m1","Matrix4","_zero","_one","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","makeBasis","extractRotation","scaleZ","makeRotationFromEuler","af","bf","ce","de","df","ce$1","cf$1","de$1","df$1","ae$1","af$1","be$1","bf$1","bc","bd","ac$1","ad$1","bc$1","bd$1","makeRotationFromQuaternion","a24","a34","a41","a42","a43","a44","b24","b34","b41","b42","b43","b44","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","invSX","invSY","invSZ","makePerspective","makeOrthographic","_matrix","_quaternion$1","Euler","DefaultOrder","_order","Layers","mask","RotationOrders","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$1","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","DefaultUp","configurable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","background","environment","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","translateOnAxis","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateParents","updateChildren","materials","shapes","serialize","library","element","isInstancedMesh","instanceMatrix","isMesh","isLine","isPoints","parameters","shape","uuids","i$1","l$1","i$2","extractFromCache","shapes$1","recursive","isScene","_points","_vector$1","_box","Box3","_v0","_v1$2","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","satForAxes","axes","extents","isBox3","setFromArray","minX","minY","minZ","maxX","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","expandByVector","expandByScalar","boundingBox","computeBoundingBox","union","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","distanceToPoint","getBoundingSphere","_box$1","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","_vector$2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","extDet","segExtent","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","_colorKeywords","_hslA","_hslB","setRGB","hue2rgb","SRGBToLinear","LinearToSRGB","Face3","materialIndex","vertexNormals","isColor","vertexColors","setHex","setStyle","setHSL","handleAlpha","parseFloat","components","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","normalized","NAMES","il$1","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","isMaterial","onBeforeCompile","customProgramCacheKey","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","usage","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float64BufferAttribute","Float64Array","DirectGeometry","vertices","normals","uvs","uvs2","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","arrayMax","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","computeGroups","faces","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","vertexUvs$1","morphTarget","j$1","morphNormal","_bufferGeometryId","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","drawRange","isBufferGeometry","getIndex","setIndex","deleteAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","positions","lineDistances","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","attribute$1","attribute$2","attribute$3","lineDistancesNeedUpdate","attribute$4","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","il$2","morphAttribute$1","jl","computeFaceNormals","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","vA","vB","vC","normalizeNormals","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","indices","array2","geometry2","newAttribute","name$1","morphArray","newAttribute$1","key$1","attributeData","hasMorphAttributes","key$2","attributeArray","attributeData$1","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","updateMorphTargets","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","isSkinnedMesh","boneTransform","morphTargetDictionary","ml","groupMaterial","faceIndex","a$1","b$1","group$1","groupMaterial$1","jl$1","i$3","il$3","isMultiMaterial","fl","faceMaterial","fvA","fvB","fvC","uvs_f","_geometryId","_m1$3","_obj$1","_offset$1","Geometry","fromBufferGeometry","scope","addFace","areaWeighted","vl","f$1","fl$1","face$1","v$1","vl$1","f$2","fl$2","face$2","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","faceNormal$1","vertexNormals$1","f$3","fl$3","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","j$2","jl$2","uvsCopy","kl","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","newUvs1","newUvs2","uvs1","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","i$4","il$4","i$5","il$5","j$3","jl$3","srcVertexNormal","destVertexNormal","j$4","jl$4","i$6","il$6","i$7","il$7","i$8","il$8","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","__proto__","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy$1","ix$1","cloneUniforms","mergeUniforms","uniforms","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Camera","focus","filmGauge","filmOffset","updateProjectionMatrix","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","stencil","WebGLCubeRenderTarget","dummy","DataTexture","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","fromEquirectangularTexture","shader","tEquirect","isDataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","UniformsLib","common","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","createBuffer","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","toneMapping","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","buffer$1","type$1","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","array$1","previousAttribute","_bufferGeometry","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","MAX_SAFE_INTEGER","morphInfluencesSum","influence$1","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","physical","transparency","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","getShaderParameter","getShaderInfoLog","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","prefixVertex","prefixFragment","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","shaderName","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","cachedUniforms","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","nClipPlanes","nClipIntersection","isMeshStandardMaterial","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","shaderobject","getShaderObject","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","onSceneDispose","cameras","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","normalBias","mapSize","isSpotLight","uniforms$1","penumbra","shadow$1","shadowUniforms$1","isRectAreaLight","uniforms$2","isPointLight","uniforms$3","shadow$2","shadowUniforms$2","isHemisphereLight","uniforms$4","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","depthMaterial","depthMaterial$1","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","pars$1","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","100","101","102","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","mipmapImage","mipmap$2","setTextureCubeDynamic","wrappingToGL","1000","1001","1002","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","samples$1","glInternalFormat$1","samples$2","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","Group","WebXRController","_targetRay","_grip","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","disconnect","setFramebuffer","animation","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","inputSource$1","controller$1","getController","getTargetRaySpace","getControllerGrip","getGripSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","sortObjects","toneMappingExposure","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","rangeMin","rangeMax","message","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","projectObject","isGroup","isLOD","isImmediateRenderObject","geometry$1","material$1","renderObjects","isArrayCamera","camera2","renderObjectImmediate","materialProperties","lightsStateVersion","programCacheKey","programChange","numSupportedMorphTargets","numSupportedMorphNormals","needsLights","materialNeedsLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","ltc_1","LTC_1","ltc_2","LTC_2","opaqueObjects","transparentObjects","_webglFramebuffer","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","WebGL1Renderer","FogExp2","Fog","InterleavedBuffer","inputPose","gripPose","targetRay","grip","getPose","targetRaySpace","gripSpace","isInterleavedBuffer","arrayBuffers","_uuid","ib","_geometry","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","basePosition","skinIndex","skinWeight","_v1$4","_v2$2","LOD","_currentLevel","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","addLevel","getCurrentLevel","getObjectForDistance","calculateInverses","normalizeSkinWeights","boneIndex","boneInverses","_offsetMatrix","_identityMatrix","Skeleton","Bone","bone","bone$1","isBone","getBoneByName","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","linecap","linejoin","getMatrixAt","raycastTimes","instanceId","setMatrixAt","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","lineDistances$1","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distance$1","nbVertices","distance$2","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge1","edge2","vertex$1","ol","edge1$1","edge2$1","key$3","e$1","position$1","l$2","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","EPS","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","applyRadius","uvA","uvB","uvC","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","TorusBufferGeometry","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","invSize","hasHoles","outerLen","outerNode","linkedList","prev","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","middleInside","q2","o1","o2","o3","o4","onSegment","num","an","bp","ShapeUtils","isClockWise","pts","triangulateShape","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","ahole","h$1","hl$1","ahole$1","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","h$2","hl$2","ahole$2","k$1","bs$1","vert","h$3","hl$3","ahole$3","vert$1","vert$2","vert$3","t$1","z$1","bs$2","vert$4","h$4","hl$4","ahole$4","vert$5","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","face$3","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","thetaSegments","phiSegments","RingBufferGeometry","radiusStep","thetaSegmentLevel","segment$1","LatheGeometry","LatheBufferGeometry","inverseSegments","base$1","ShapeGeometry","ShapeBufferGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","shapeHole$1","l$3","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","x$2","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","referenceValue","interpolant","createInterpolant","evaluate","resultBuffer","numTimes","valueStart","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","parseKeyframeTrack","trackType","typeName","getTrackTypeForValueTypeName","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","giveUpAt$1","beforeStart_","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","readOffset$1","writeOffset$1","TypedKeyframeTrack","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","morphTargetNames","morphTargetName","m$1","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setPath","setResourcePath","setRequestHeader","loading","FileLoader","AnimationLoader","CompressedTextureLoader","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","initCatmullRom","initNonuniformCatmullRom","dt0","dt1","dt2","calc","cached","request","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","responseType","Blob","header","XMLHttpRequest","open","callbacks","callback$1","withCredentials","overrideMimeType","send","setResponseType","setWithCredentials","setMimeType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","texData","onImageLoad","onImageError","substr","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","pt2","getTangentAt","MAX_VALUE","theta$1","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","LightProbe","MaterialLoader","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","scaleW","scaleH","isDirectionalLightShadow","isSphericalHarmonics3","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","TYPED_ARRAYS","typedArray","bufferAttribute","typedArray$1","bufferAttribute$1","drawcalls","offsets","ObjectLoader","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","geometryShapes","bufferGeometryLoader","details","shape$1","loadImage","currentUrl","path$1","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","ImageBitmapLoader","createImageBitmap","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","_cachedOutline","familyName","FontLoader","isImageBitmapLoader","setOptions","res","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","toChange","sIdx","sLen","sIdx$1","sLen$1","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","createPaths","AudioContext","webkitAudioContext","AudioLoader","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","Clock","autoStart","oldTime","elapsedTime","running","xmin","xmax","eyeSepHalf","eyeSepOnProjection","ymax","getElapsedTime","getDelta","newTime","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","Audio","getInput","autoplay","detune","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","filters","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_reservedRe","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_initMemoryManager","_accuIndex","Uniform","InstancedInterleavedBuffer","Raycaster","PointCloud","ascSort","intersectObject","Spherical","Cylindrical","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","lastIndex$1","lastObject$1","bindingsForPath$1","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","makeSafe","setFromCartesianCoords","_vector$7","Box2","_startP","_startEnd","Line3","ImmediateRenderObject","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_vector$8","SpotLightHelper","cone","coneLength","coneWidth","_vector$9","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","isSkeletonHelper","_vector$a","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","color$1","_v1$5","_v2$3","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$b","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_lineGeometry","_coneGeometry","_axis","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","setColor","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","ENCODINGS","3000","3001","3002","3004","3005","3006","3007","_flatCamera","ref","_lodPlanes","_sizeLods","_sigmas","lod","sizeLod","texelSize","positionSize","uvSize","faceIndexSize","_createPlanes","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","weights","poleAxis","_pingPongRenderTarget","_blurMaterial","latitudinal","dTheta","mipInt","inputEncoding","_equirectShader","_cubemapShader","_compileMaterial","_isLDR","_createRenderTarget","cubeUVRenderTarget","_setViewport","_getEquirectShader","_getCubemapShader","ClosedSplineCurve3","SplineCurve3","Spline","fromScene","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","cubemap","compileCubemapShader","compileEquirectangularShader","outputTarget","_textureToCubeUV","tmpMesh","cubeCamera","upSign","forwardSign","maxComponent","fExp","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","outputSize","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","Handlers","setTexturePath","isIntersectionBox","isIntersectionSphere","setFromMatrix","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","applyMatrix","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","revision","ACESFilmicToneMapping","AddEquation","AddOperation","AdditiveAnimationBlendMode","AdditiveBlending","AlphaFormat","AlwaysDepth","AlwaysStencilFunc","AxisHelper","BackSide","BasicDepthPacking","BasicShadowMap","BinaryTextureLoader","BoundingBoxHelper","ByteType","CanvasRenderer","CineonToneMapping","CubeGeometry","CullFaceBack","CullFaceFront","CullFaceFrontBack","CullFaceNone","CustomBlending","CustomToneMapping","DecrementStencilOp","DecrementWrapStencilOp","DepthFormat","DepthStencilFormat","DoubleSide","DstAlphaFactor","DstColorFactor","DynamicBufferAttribute","DynamicCopyUsage","DynamicDrawUsage","DynamicReadUsage","EdgesHelper","EqualDepth","EqualStencilFunc","Face4","FaceColors","FlatShading","Float32Attribute","Float64Attribute","FloatType","FrontFaceDirectionCCW","FrontFaceDirectionCW","FrontSide","GammaEncoding","GreaterDepth","GreaterEqualDepth","GreaterEqualStencilFunc","GreaterStencilFunc","HalfFloatType","IncrementStencilOp","IncrementWrapStencilOp","Int16Attribute","Int32Attribute","Int8Attribute","IntType","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","InvertStencilOp","JSONLoader","KeepStencilOp","LensFlare","LessDepth","LessEqualDepth","LessEqualStencilFunc","LessStencilFunc","LinePieces","LineStrip","LinearEncoding","LinearMipMapLinearFilter","LinearMipMapNearestFilter","LinearToneMapping","LogLuvEncoding","LoopOnce","LoopPingPong","LoopRepeat","LuminanceAlphaFormat","LuminanceFormat","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","MaxEquation","MeshFaceMaterial","MinEquation","MixOperation","MultiMaterial","MultiplyBlending","MultiplyOperation","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverDepth","NeverStencilFunc","NoBlending","NoColors","NoToneMapping","NormalAnimationBlendMode","NormalBlending","NotEqualDepth","NotEqualStencilFunc","ObjectSpaceNormalMap","OneFactor","OneMinusDstAlphaFactor","OneMinusDstColorFactor","OneMinusSrcAlphaFactor","OneMinusSrcColorFactor","PCFShadowMap","PCFSoftShadowMap","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","PointCloudMaterial","REVISION","RGBADepthPacking","RGBAFormat","RGBAIntegerFormat","RGBA_ASTC_10x10_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_BPTC_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGBDEncoding","RGBEEncoding","RGBEFormat","RGBFormat","RGBIntegerFormat","RGBM16Encoding","RGBM7Encoding","RGB_ETC1_Format","RGB_ETC2_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGB_S3TC_DXT1_Format","RGFormat","RGIntegerFormat","RedFormat","RedIntegerFormat","ReinhardToneMapping","ReplaceStencilOp","ReverseSubtractEquation","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","ShortType","SmoothShading","SrcAlphaFactor","SrcAlphaSaturateFactor","SrcColorFactor","StaticCopyUsage","StaticDrawUsage","StaticReadUsage","StreamCopyUsage","StreamDrawUsage","StreamReadUsage","SubtractEquation","SubtractiveBlending","TOUCH","DOLLY_PAN","DOLLY_ROTATE","TangentSpaceNormalMap","TriangleFanDrawMode","TriangleStripDrawMode","TrianglesDrawMode","Uint16Attribute","Uint32Attribute","Uint8Attribute","Uint8ClampedAttribute","UnsignedByteType","UnsignedInt248Type","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedShortType","VSMShadowMap","Vertex","VertexColors","WebGLRenderTargetCube","WireframeHelper","WrapAroundEnding","XHRLoader","ZeroCurvatureEnding","ZeroFactor","ZeroSlopeEnding","ZeroStencilOp","sRGBEncoding"],"mappings":"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","file":"app2.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"\nimport {event, select} from 'd3';\nimport {drawCube} from './somed3';\n\nconst render = (cube) => {\n\n    let forward = (color) => {\n        cube.rotate(color);\n    };\n\n    let reverse = (color) => {\n        cube.rotateReverse(color);\n    };\n\n    let rotateFn = forward;\n\n    window.addEventListener('keydown', (e) => {\n        if (e.key === \"Shift\") {\n            rotateFn = reverse;\n        }\n    });\n\n    window.addEventListener('keyup', (e) => {\n        if (e.key === \"Shift\") {\n            rotateFn = forward;\n        }\n    });\n\n    document.querySelectorAll(\".invert\").forEach(d => {\n\n        d.addEventListener(\"touchstart\", (ev) => {\n            rotateFn = reverse;\n        }, false);\n\n        d.addEventListener(\"touchend\", (ev) => {\n            rotateFn = forward;\n        }, false);\n\n        d.addEventListener(\"touchcancel\", (ev) => {\n            rotateFn = forward;\n        }, false);\n\n    });\n    /*\n    el.addEventListener(\"touchmove\", (ev) => {\n        ev.preventDefault();\n    }, false);\n    */\n\n\n    let renderCube = () => {\n        /*\n        let scramble = parser.SequenceParser(\"B L2 B' D' U' L' D' L2 B D B F' L2 R U' B2 F' D R2 B F D2 L R' B' L' F2 D F D'\");\n        scramble(cube);\n        */\n\n        [\n            \"white\", \"red\", \"green\",\n            \"blue\", \"yellow\", \"orange\",\n        ].forEach(color => {\n\n            let faceColors = cube.getFaceColors(color);\n            const face = document.querySelector(`.faces .${color}`);\n            const svg = drawCube(face.clientWidth, face.clientHeight, faceColors);\n            console.log(svg);\n            face.append(svg);\n\n        });\n\n    };\n\n    renderCube();\n\n    let update = () => {\n        [\n            \"white\", \"red\", \"green\",\n            \"blue\", \"yellow\", \"orange\",\n        ].forEach(color => {\n\n            let faceColors = cube.getFaceColors(color);\n            const face = document.querySelector(`.faces .${color} > svg`);\n            face.update(faceColors);\n\n        });\n    };\n\n    let clickMap = {\n        \"white\": \".up\",\n        \"red\": \".right\",\n        \"green\": \".front\",\n        \"blue\": \".back\",\n        \"yellow\": \".down\",\n        \"orange\": \".left\",\n    };\n\n    Object.keys(clickMap).forEach(k => {\n        let dir = clickMap[k];\n        select(`.faces .${k}`)\n            .on(\"touchstart\", (d, i, g) => {\n                event.preventDefault();\n                rotateFn(k);\n                update();\n            })\n            .on(\"click\", (d, i, g) => {\n                rotateFn(k);\n                update();\n            });\n    });\n};\n\nexport {\n    render\n};","\nimport * as d3 from 'd3';\n\nfunction buildData(inData) {\n    let data2 = [];\n    let iter = inData.values();\n    for (let y = 0; y < 3; y++) {\n        for (let x = 0; x < 3; x++) {\n            let d = [];\n            d.push(x);\n            d.push(y);\n            d.push(iter.next().value);\n            data2.push(d);\n        }\n    }\n\n    return data2;\n}\n\nfunction drawCube(width, height, inData) {\n\n    let dim = d3.min([width, height]) * 0.9;\n\n    const svg = d3.create(\"svg\")\n        .attr(\"viewBox\", [0, 0, dim, dim])\n        .attr(\"height\", dim);\n\n    let cdim = (dim/3.0);\n\n\n    let pieceGroup = svg.append(\"g\")\n        .selectAll(\"g\")\n        .data(buildData(inData))\n        .join(\"g\")\n        .call(g => {\n\n            g.append(\"path\")\n                .attr(\"d\", d => {\n                    let p = d3.path();\n                    //p.rect(d[0] * dim / 3.0, d[1] * dim / 3.0, dim / 3.0, dim / 3.0);\n                    p.rect(d[0] * cdim, d[1] * cdim, cdim, cdim);\n                    return p;\n                })\n                .attr(\"fill\", d => d[2]);\n\n            g.append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"x1\", d => d[0] * cdim)\n                .attr(\"x2\", d => (d[0] + 1) * cdim)\n                .attr(\"y1\", d => d[1] * cdim)\n                .attr(\"y2\", d => (d[1]) * cdim);\n\n            g.append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"x1\", d => d[0] * cdim)\n                .attr(\"x2\", d => (d[0]) * cdim)\n                .attr(\"y1\", d => d[1] * cdim)\n                .attr(\"y2\", d => (d[1] + 1) * cdim);\n\n        });\n\n    return Object.assign(svg.node(), {\n        update: (data) => {\n            pieceGroup.data(buildData(data))\n            .select(\"path\")\n            .attr(\"fill\", d => d[2]);\n        }\n    });\n}\n\nexport {drawCube};","/* eslint no-console:0 consistent-return:0 */\n\"use strict\";\n//const d3 = require(\"d3\");\n//const glm = require(\"gl-matrix\");\n\nimport {vec3, mat4} from \"gl-matrix\";\nimport {dsvFormat} from \"d3\";\n\nconst WHITE=0;\nconst RED=1;\nconst GREEN=2;\nconst BLUE=3;\nconst ORANGE=4;\nconst YELLOW=5;\n\nlet colorMap = {\n    w: {\n        value: \"white\",\n        key: \"w\",\n        code: WHITE,\n        direction: vec3.fromValues(0,0,1),\n        adjacent: [\"b\", \"g\", \"o\", \"r\"],\n    },\n    r: {\n        value: \"red\",\n        key: \"r\",\n        code: RED,\n        direction: vec3.fromValues(1,0,0),\n        adjacent: [\"w\", \"y\", \"g\", \"b\"],\n    },\n    g: {\n        value: \"green\",\n        key: \"g\",\n        code: GREEN,\n        direction: vec3.fromValues(0,-1,0),\n        adjacent: [\"w\", \"y\", \"o\", \"r\"],\n    },\n    b: {\n        value: \"blue\",\n        key: \"b\",\n        code: BLUE,\n        direction: vec3.fromValues(0,1,0),\n        adjacent: [\"w\", \"y\", \"r\", \"o\"],\n    },\n    o: {\n        value: \"orange\",\n        key: \"o\",\n        code: ORANGE,\n        direction: vec3.fromValues(-1,0,0),\n        adjacent: [\"w\", \"y\", \"b\", \"g\"],\n    },\n    y: {\n        value: \"yellow\",\n        key: \"y\",\n        code: YELLOW,\n        direction: vec3.fromValues(0,0,-1),\n        adjacent: [\"g\", \"b\", \"o\", \"r\"],\n    },\n    '#': {\n        value: \"#\",\n        key: \"#\",\n        direction: vec3.fromValues(0,0,0)\n    }\n};\n\nconst COLORS = new Array(6);\nCOLORS[WHITE] = colorMap.w; \nCOLORS[GREEN] = colorMap.g; \nCOLORS[RED] = colorMap.r; \nCOLORS[BLUE] = colorMap.b; \nCOLORS[ORANGE] = colorMap.o; \nCOLORS[YELLOW] = colorMap.y; \n\nlet FACES = {\n    white: colorMap.w,\n    red: colorMap.r,\n    green: colorMap.g,\n    blue: colorMap.b,\n    orange: colorMap.o,\n    yellow: colorMap.y\n};\n\nfunction ColorFace(cube, color, vector, transform) {\n    Object.assign(this, {\n        color: color,\n        vector: vec3.clone(vector),\n        parentTransform: transform,\n        cube: cube\n    });\n}\n\nColorFace.prototype.position = function() {\n    return vec3.transformMat4(vec3.create(), this.vector, this.parentTransform);\n};\n\nColorFace.prototype.toString = function() {\n    return `${this.color}: ${this.position()}`; \n};\n\nColorFace.prototype.adjacentCenter = function() {\n\n    let pos = this.position();\n    let max;\n    let ret;\n\n    Object.keys(FACES).forEach(k => {\n        let f = FACES[k];\n        let p = this.cube.get(f.key);\n        let dot = vec3.dot(p.get(f.value), pos);\n\n        if (!max || max < dot) {\n            max = dot;\n            ret = p; \n        }\n    });\n\n    return ret;\n};\n\nfunction Piece(cube, s) {\n\n    let i = 0;\n    let colorFaces = {};\n    let colors = [];\n\n    let position = vec3.create();\n    s.split(\",\").map(c => {\n        if (c !== '#') {\n            colors.push(c);\n            i++;\n        }\n        vec3.add(position, position, colorMap[c].direction);\n    });\n\n    let transform = mat4.fromTranslation(mat4.create(), position);\n    s.split(\",\").map(c => {\n\n        let color = colorMap[c].value;\n        colorFaces[color] = new ColorFace(cube, color, colorMap[c].direction, transform);\n    });\n\n    let key = colors.join(\"\");\n\n    Object.assign(this, {\n        colorFaces: colorFaces,\n        colors: colors,\n        vector: vec3.fromValues(0,0,0),\n        position: position, //to be calculated on the fly from transform\n        transform: transform,\n        key: key,\n        cube: cube\n    });\n}\n\nPiece.prototype.rotate = function (m) {\n    mat4.mul(this.transform, m, this.transform);\n};\n\nPiece.prototype.toString = function() {\n\n    return `\nColors: ${this.colors}\nPosition: ${this.position2()}\nKey: ${this.key}\nColor Faces: ${this.colorFaces}\n`;\n\n};\n\nPiece.prototype.position2 = function() {\n    return vec3.transformMat4(vec3.create(), this.vector, this.transform);\n};\n\nPiece.prototype.get = function(color) {\n    return this.colorFaces[color].position();\n};\n\nPiece.prototype.getColors = function() {\n    return this.colorFaces; \n};\n\nPiece.prototype.getFaceColor = function(color) {\n\n    let colorValue = colorMap[color].value;\n    let ret;\n    Object.keys(this.colorFaces).forEach(k => {\n        let cf = this.colorFaces[k]; \n\n        if (cf.color !== \"#\" && cf.adjacentCenter().key === color) {\n            console.log(cf);\n            ret = cf.color;\n        }\n    });\n\n    return ret;\n};\n\nfunction Cube(csv) {\n\n    let parser = dsvFormat(\"|\");\n    let data = parser.parse(csv);\n\n    this.pieces = new Map();\n\n    data.forEach(r => {\n        let v = new Piece(this, r.data);\n        this.pieces.set(v.key, v);\n    });\n\n    this.faceRotations = {};\n\n    Object.keys(FACES).forEach(f => {\n\n        let dir = FACES[f].direction;\n        let cw = mat4.fromRotation(mat4.create(), -Math.PI/2.0, dir);\n\n        let tr1 = mat4.fromTranslation(mat4.create(), vec3.scale(vec3.create(), dir, -1));  \n        let tr2 = mat4.fromTranslation(mat4.create(), dir); \n\n        let rota = mat4.mul(mat4.create(), \n            cw, tr1\n        );\n\n        mat4.mul(rota, tr2, rota);\n\n        this.faceRotations[f] = rota;\n    });\n}\n\nCube.prototype.toString = function() {\n\n    let ret = \"\";\n\n    for (const p of this.pieces.keys()) {\n       ret += `${this.pieces.get(p)}\n`;\n    }\n\n    return ret;\n};\n\nCube.prototype.rotate = function(face) {\n\n    console.log(`Rotate: ${face}`);\n    for (const k of this.pieces.keys()) {\n\n        let p = this.pieces.get(k); \n        let rota = this.faceRotations[face];\n        let dir = FACES[face].direction; \n        if (vec3.dot(p.position2(), dir) === 1) {\n            console.log(p.toString());\n            p.rotate(rota);\n            console.log(p.toString());\n        }\n    }\n\n};\n\nCube.prototype.rotateReverse = function(face) {\n\n    console.log(`Rotate: ${face}`);\n    for (const k of this.pieces.keys()) {\n\n        let p = this.pieces.get(k); \n        let rota = mat4.invert(mat4.create(), this.faceRotations[face]);\n        let dir = FACES[face].direction; \n        if (vec3.dot(p.position2(), dir) === 1) {\n            console.log(p.toString());\n            p.rotate(rota);\n            console.log(p.toString());\n        }\n    }\n\n};\n\nCube.prototype.get = function(key) {\n    return this.pieces.get(key);\n};\n\nCube.prototype.getByPosition = function(key) {\n\n    let vec = vec3.create();\n    key.split(\"\").forEach(c => {\n        vec3.add(vec, vec, colorMap[c].direction);\n    });\n\n    for (const k of this.pieces.keys()) {\n        let p = this.pieces.get(k);\n        if (vec3.equals(p.position2(), vec)) {\n            return p;\n        }\n    }\n\n    return undefined;\n};\n\nCube.prototype.getFace = function(color) {\n\n    let dir = FACES[color].direction;\n\n    let ret = [];\n    for (const k of this.pieces.keys()) {\n        let p = this.pieces.get(k);\n        if (vec3.dot(p.position2(), dir) === 1) {\n            ret.push(p);\n        }\n    }\n\n    return ret;\n};\n\nCube.prototype.getFacePiecePositions = function(faceColor)\n{\n    let a1 = [faceColor];\n    let a2 = [\n        colorMap[faceColor].adjacent[0], \n        \"\",\n        colorMap[faceColor].adjacent[1], \n    ];\n    let a3 = [\n        colorMap[faceColor].adjacent[2], \n        \"\",\n        colorMap[faceColor].adjacent[3], \n    ];\n\n    let ret = [];\n    for(const c1 of a1) {\n        for(const c2 of a2) {\n            for (const c3 of a3) {\n                ret.push(`${c1}${c3}${c2}`);\n            }\n        }\n    } \n    return ret;\n};\n\nCube.prototype.getFaceColors = function(face) {\n\n    if (!(face in colorMap)) {\n        face = FACES[face].key;\n    }\n\n    return this.getFacePiecePositions(face)\n        .map(p => this.getByPosition(p))\n        .map(pos => pos.getFaceColor(face));\n\n};\n\nexport {Cube};\n","import * as THREE from 'three';\nimport {Cube} from \"./cube\";\nimport {render} from \"./2d/render\";\nimport {text} from 'd3';\n\nconst onload = () => {\n\treturn new Promise(function (resolve, reject) {\n\t\twindow.addEventListener('load', resolve);\n\t});\n};\n\nonload().then(() => {\n\n\t// First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n\tlet vh = window.innerHeight * 0.01;\n\t// Then we set the value in the --vh custom property to the root of the document\n\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n\t// We listen to the resize event\n\twindow.addEventListener('resize', () => {\n\t\t// We execute the same script as before\n\t\tlet vh = window.innerHeight * 0.01;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t});\n\n\ttext(\"default3.csv\").then((d) => {\n\t\tconsole.log(Cube);\n\t\tlet cube = new Cube(d);\n\t\trender(cube);\n\t});\n\n\n\t//move to 3d rendering...\n\tconst divCube = document.querySelector(\"div.cube\");\n\n\tvar scene = new THREE.Scene();\n\tvar camera = new THREE.PerspectiveCamera(75, divCube.clientWidth / divCube.clientHeight, 0.1, 1000);\n\n\tvar renderer = new THREE.WebGLRenderer();\n\trenderer.setSize(divCube.clientWidth, divCube.clientHeight);\n\n\n\tdivCube.appendChild(renderer.domElement);\n\n\tvar geometry = new THREE.BoxGeometry(1, 1, 1);\n\tvar material = new THREE.MeshBasicMaterial({\n\t\tcolor: 0x00ff00\n\t});\n\tvar cube = new THREE.Mesh(geometry, material);\n\tscene.add(cube);\n\n\tcamera.position.z = 5;\n\n\tvar animate = function () {\n\t\trequestAnimationFrame(animate);\n\n\t\tcube.rotation.x += 0.01;\n\t\tcube.rotation.y += 0.01;\n\n\t\trenderer.render(scene, camera);\n\t};\n\n\tanimate();\n});","// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-axis/ v1.0.12 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nfunction identity(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-brush/ v1.1.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function(target) {\n    return d3Selection.touch(target, d3Selection.event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = d3Dispatch.dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return (!clean && that.__brush.emitter) || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      else this.emit(\"brush\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !d3Selection.event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (keys && d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        pointer = d3Selection.event.touches ? toucher(d3Selection.event.changedTouches[0].identifier) : d3Selection.mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushSelection = brushSelection;\nexports.brushX = brushX;\nexports.brushY = brushY;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-chord/ v1.0.6 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-path'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Path) { 'use strict';\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = pi * 2;\nvar max = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = d3Array.range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(d3Array.range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice = Array.prototype.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = d3Path.path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexports.chord = chord;\nexports.ribbon = ribbon;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.4.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.cubehelix = cubehelix;\nexports.gray = gray;\nexports.hcl = hcl;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.lch = lch;\nexports.rgb = rgb;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-contour/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold = d3Array.thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\n      tz = d3Array.tickStep(start, stop, tz);\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = d3Array.max(values0);\n      tz = d3Array.tickStep(0, stop, tz);\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nexports.contours = contours;\nexports.contourDensity = density;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-dispatch/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-drag/ v1.2.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction nodrag(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-dsv/ v1.2.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear()) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatBody = csv.formatBody;\nvar csvFormatRows = csv.formatRows;\nvar csvFormatRow = csv.formatRow;\nvar csvFormatValue = csv.formatValue;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatBody = tsv.formatBody;\nvar tsvFormatRows = tsv.formatRows;\nvar tsvFormatRow = tsv.formatRow;\nvar tsvFormatValue = tsv.formatValue;\n\nfunction autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nvar fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();\n\nexports.autoType = autoType;\nexports.csvFormat = csvFormat;\nexports.csvFormatBody = csvFormatBody;\nexports.csvFormatRow = csvFormatRow;\nexports.csvFormatRows = csvFormatRows;\nexports.csvFormatValue = csvFormatValue;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.dsvFormat = dsv;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatBody = tsvFormatBody;\nexports.tsvFormatRow = tsvFormatRow;\nexports.tsvFormatRows = tsvFormatRows;\nexports.tsvFormatValue = tsvFormatValue;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-ease/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackInOut = backInOut;\nexports.easeBackOut = backOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBounceOut = bounceOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleInOut = circleInOut;\nexports.easeCircleOut = circleOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicInOut = cubicInOut;\nexports.easeCubicOut = cubicOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticInOut = elasticInOut;\nexports.easeElasticOut = elasticOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpInOut = expInOut;\nexports.easeExpOut = expOut;\nexports.easeLinear = linear;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyInOut = polyInOut;\nexports.easePolyOut = polyOut;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadInOut = quadInOut;\nexports.easeQuadOut = quadOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinInOut = sinInOut;\nexports.easeSinOut = sinOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv;\nexports.tsv = tsv;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-force/ v1.2.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-quadtree'), require('d3-collection'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-collection', 'd3-dispatch', 'd3-timer'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Quadtree,d3Collection,d3Dispatch,d3Timer) { 'use strict';\n\nfunction center(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = d3Collection.map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = d3Collection.map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-format/ v1.4.4 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\nexports.FormatSpecifier = FormatSpecifier;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-geo/ v1.12.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, (function (exports, d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nfunction polygonContains(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y]);\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$1;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-hierarchy/ v1.1.9 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice = Array.prototype.slice;\n\nfunction shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$1() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packEnclose = enclose;\nexports.packSiblings = siblings;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapResquarify = resquarify;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-interpolate/ v1.4.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction numberArray(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\nfunction array(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateHue = hue$1;\nexports.interpolateLab = lab;\nexports.interpolateNumber = number;\nexports.interpolateNumberArray = numberArray;\nexports.interpolateObject = object;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-path/ v1.0.9 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-polygon/ v1.0.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction area(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonContains = contains;\nexports.polygonHull = hull;\nexports.polygonLength = length;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-quadtree/ v1.0.7 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-random/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction defaultSource() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n\nvar exponential = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-scale-chromatic/ v1.5.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-interpolate'), require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-interpolate', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Interpolate, d3Color) { 'use strict';\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nvar Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\nfunction ramp(scheme) {\n  return d3Interpolate.interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$a = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$a);\n\nvar scheme$b = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$b);\n\nvar scheme$c = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$c);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$d);\n\nvar scheme$e = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$e);\n\nvar scheme$f = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$f);\n\nvar scheme$g = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$g);\n\nvar scheme$h = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$h);\n\nvar scheme$i = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$i);\n\nvar scheme$j = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$j);\n\nvar scheme$k = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$k);\n\nvar scheme$l = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$l);\n\nvar scheme$m = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$m);\n\nvar scheme$n = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$n);\n\nvar scheme$o = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$o);\n\nvar scheme$p = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$p);\n\nvar scheme$q = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$q);\n\nfunction cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n\nvar cubehelix = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar c = d3Color.cubehelix();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n\nvar c$1 = d3Color.rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c$1.r = 255 * (x = Math.sin(t)) * x;\n  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c$1 + \"\";\n}\n\nfunction turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nexports.interpolateBlues = Blues;\nexports.interpolateBrBG = BrBG;\nexports.interpolateBuGn = BuGn;\nexports.interpolateBuPu = BuPu;\nexports.interpolateCividis = cividis;\nexports.interpolateCool = cool;\nexports.interpolateCubehelixDefault = cubehelix;\nexports.interpolateGnBu = GnBu;\nexports.interpolateGreens = Greens;\nexports.interpolateGreys = Greys;\nexports.interpolateInferno = inferno;\nexports.interpolateMagma = magma;\nexports.interpolateOrRd = OrRd;\nexports.interpolateOranges = Oranges;\nexports.interpolatePRGn = PRGn;\nexports.interpolatePiYG = PiYG;\nexports.interpolatePlasma = plasma;\nexports.interpolatePuBu = PuBu;\nexports.interpolatePuBuGn = PuBuGn;\nexports.interpolatePuOr = PuOr;\nexports.interpolatePuRd = PuRd;\nexports.interpolatePurples = Purples;\nexports.interpolateRainbow = rainbow;\nexports.interpolateRdBu = RdBu;\nexports.interpolateRdGy = RdGy;\nexports.interpolateRdPu = RdPu;\nexports.interpolateRdYlBu = RdYlBu;\nexports.interpolateRdYlGn = RdYlGn;\nexports.interpolateReds = Reds;\nexports.interpolateSinebow = sinebow;\nexports.interpolateSpectral = Spectral;\nexports.interpolateTurbo = turbo;\nexports.interpolateViridis = viridis;\nexports.interpolateWarm = warm;\nexports.interpolateYlGn = YlGn;\nexports.interpolateYlGnBu = YlGnBu;\nexports.interpolateYlOrBr = YlOrBr;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeAccent = Accent;\nexports.schemeBlues = scheme$l;\nexports.schemeBrBG = scheme;\nexports.schemeBuGn = scheme$9;\nexports.schemeBuPu = scheme$a;\nexports.schemeCategory10 = category10;\nexports.schemeDark2 = Dark2;\nexports.schemeGnBu = scheme$b;\nexports.schemeGreens = scheme$m;\nexports.schemeGreys = scheme$n;\nexports.schemeOrRd = scheme$c;\nexports.schemeOranges = scheme$q;\nexports.schemePRGn = scheme$1;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemePiYG = scheme$2;\nexports.schemePuBu = scheme$e;\nexports.schemePuBuGn = scheme$d;\nexports.schemePuOr = scheme$3;\nexports.schemePuRd = scheme$f;\nexports.schemePurples = scheme$o;\nexports.schemeRdBu = scheme$4;\nexports.schemeRdGy = scheme$5;\nexports.schemeRdPu = scheme$g;\nexports.schemeRdYlBu = scheme$6;\nexports.schemeRdYlGn = scheme$7;\nexports.schemeReds = scheme$p;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.schemeSpectral = scheme$8;\nexports.schemeTableau10 = Tableau10;\nexports.schemeYlGn = scheme$i;\nexports.schemeYlGnBu = scheme$h;\nexports.schemeYlOrBr = scheme$j;\nexports.schemeYlOrRd = scheme$k;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-scale/ v2.2.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n\nvar array = Array.prototype;\n\nvar map = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal() {\n  var index = d3Collection.map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3Interpolate.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = d3Array.tickStep(start, stop, count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity$1(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity$1(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$1() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$1()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((d3Array.bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer$2() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer$2()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer$2()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity$1;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleSymlog = symlog;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.tickFormat = tickFormat;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-selection/ v1.4.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nfunction matcher(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_join(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\nfunction selection_merge(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nexports.clientPoint = point;\nexports.create = create;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-shape/ v1.3.7 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$1 = x,\n      y$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$1 = x,\n      y$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$1.apply(this, (argv[0] = s, argv)), +y$1.apply(this, argv), +x$1.apply(this, (argv[0] = t, argv)), +y$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction appearance(series) {\n  var peaks = series.map(peak);\n  return none$1(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.areaRadial = areaRadial;\nexports.curveBasis = basis;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBundle = bundle;\nexports.curveCardinal = cardinal;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveLinear = curveLinear;\nexports.curveLinearClosed = linearClosed;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.line = line;\nexports.lineRadial = lineRadial$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkRadial = linkRadial;\nexports.linkVertical = linkVertical;\nexports.pie = pie;\nexports.pointRadial = pointRadial;\nexports.radialArea = areaRadial;\nexports.radialLine = lineRadial$1;\nexports.stack = stack;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAppearance = appearance;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.symbol = symbol;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.symbols = symbols;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-time-format/ v2.2.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-time/ v1.1.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-timer/ v1.0.10 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.interval = interval$1;\nexports.now = now;\nexports.timeout = timeout$1;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-transition/ v1.3.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Selection, d3Dispatch, d3Timer, d3Interpolate, d3Color, d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        string1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_textTween(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nfunction transition_end() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-voronoi/ v1.1.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x(d) {\n  return d[0];\n}\n\nfunction y(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x,\n      y$$1 = y,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon) * epsilon, Math.round(y$$1(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nexports.voronoi = voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-zoom/ v1.8.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -d3Selection.event.deltaY * (d3Selection.event.deltaMode === 1 ? 0.05 : d3Selection.event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = d3Interpolate.interpolateZoom,\n      listeners = d3Dispatch.dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function(selection, k, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = d3Selection.mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      d3Transition.interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = d3Selection.select(d3Selection.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = d3Selection.mouse(this),\n        x0 = d3Selection.event.clientX,\n        y0 = d3Selection.event.clientY;\n\n    d3Drag.dragDisable(d3Selection.event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    d3Transition.interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = d3Selection.event.clientX - x0, dy = d3Selection.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = d3Selection.mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      d3Drag.dragEnable(d3Selection.event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = d3Selection.mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (d3Selection.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) d3Selection.select(this).transition().duration(duration).call(schedule, t1, p0);\n    else d3Selection.select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, d3Selection.event.changedTouches.length === n),\n        started, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      d3Transition.interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = d3Selection.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = d3Selection.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        var p = d3Selection.select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.zoom = zoom;\nexports.zoomIdentity = identity;\nexports.zoomTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar d3Array = require('d3-array');\nvar d3Axis = require('d3-axis');\nvar d3Brush = require('d3-brush');\nvar d3Chord = require('d3-chord');\nvar d3Collection = require('d3-collection');\nvar d3Color = require('d3-color');\nvar d3Contour = require('d3-contour');\nvar d3Dispatch = require('d3-dispatch');\nvar d3Drag = require('d3-drag');\nvar d3Dsv = require('d3-dsv');\nvar d3Ease = require('d3-ease');\nvar d3Fetch = require('d3-fetch');\nvar d3Force = require('d3-force');\nvar d3Format = require('d3-format');\nvar d3Geo = require('d3-geo');\nvar d3Hierarchy = require('d3-hierarchy');\nvar d3Interpolate = require('d3-interpolate');\nvar d3Path = require('d3-path');\nvar d3Polygon = require('d3-polygon');\nvar d3Quadtree = require('d3-quadtree');\nvar d3Random = require('d3-random');\nvar d3Scale = require('d3-scale');\nvar d3ScaleChromatic = require('d3-scale-chromatic');\nvar d3Selection = require('d3-selection');\nvar d3Shape = require('d3-shape');\nvar d3Time = require('d3-time');\nvar d3TimeFormat = require('d3-time-format');\nvar d3Timer = require('d3-timer');\nvar d3Transition = require('d3-transition');\nvar d3Voronoi = require('d3-voronoi');\nvar d3Zoom = require('d3-zoom');\n\nvar version = \"5.16.0\";\n\nObject.keys(d3Array).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Array[k];\n\t\t}\n\t});\n});\nObject.keys(d3Axis).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Axis[k];\n\t\t}\n\t});\n});\nObject.keys(d3Brush).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Brush[k];\n\t\t}\n\t});\n});\nObject.keys(d3Chord).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Chord[k];\n\t\t}\n\t});\n});\nObject.keys(d3Collection).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Collection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Color).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Color[k];\n\t\t}\n\t});\n});\nObject.keys(d3Contour).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Contour[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dispatch).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dispatch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Drag).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Drag[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dsv).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dsv[k];\n\t\t}\n\t});\n});\nObject.keys(d3Ease).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Ease[k];\n\t\t}\n\t});\n});\nObject.keys(d3Fetch).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Fetch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Force).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Force[k];\n\t\t}\n\t});\n});\nObject.keys(d3Format).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Format[k];\n\t\t}\n\t});\n});\nObject.keys(d3Geo).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Geo[k];\n\t\t}\n\t});\n});\nObject.keys(d3Hierarchy).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Hierarchy[k];\n\t\t}\n\t});\n});\nObject.keys(d3Interpolate).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Interpolate[k];\n\t\t}\n\t});\n});\nObject.keys(d3Path).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Path[k];\n\t\t}\n\t});\n});\nObject.keys(d3Polygon).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Polygon[k];\n\t\t}\n\t});\n});\nObject.keys(d3Quadtree).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Quadtree[k];\n\t\t}\n\t});\n});\nObject.keys(d3Random).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Random[k];\n\t\t}\n\t});\n});\nObject.keys(d3Scale).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Scale[k];\n\t\t}\n\t});\n});\nObject.keys(d3ScaleChromatic).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3ScaleChromatic[k];\n\t\t}\n\t});\n});\nObject.keys(d3Selection).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Selection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Shape).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Shape[k];\n\t\t}\n\t});\n});\nObject.keys(d3Time).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Time[k];\n\t\t}\n\t});\n});\nObject.keys(d3TimeFormat).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3TimeFormat[k];\n\t\t}\n\t});\n});\nObject.keys(d3Timer).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Timer[k];\n\t\t}\n\t});\n});\nObject.keys(d3Transition).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Transition[k];\n\t\t}\n\t});\n});\nObject.keys(d3Voronoi).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Voronoi[k];\n\t\t}\n\t});\n});\nObject.keys(d3Zoom).forEach(function (k) {\n\tif (k !== 'default') Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Zoom[k];\n\t\t}\n\t});\n});\nexports.version = version;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( 'name' in Function.prototype === false ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t}\n\n\tvar REVISION = '118';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\tvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar VSMShadowMap = 3;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar CineonToneMapping = 3;\n\tvar ACESFilmicToneMapping = 4;\n\tvar CustomToneMapping = 5;\n\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipmapNearestFilter = 1004;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipmapLinearFilter = 1005;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipmapNearestFilter = 1007;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipmapLinearFilter = 1008;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RedIntegerFormat = 1029;\n\tvar RGFormat = 1030;\n\tvar RGIntegerFormat = 1031;\n\tvar RGBIntegerFormat = 1032;\n\tvar RGBAIntegerFormat = 1033;\n\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGB_ETC2_Format = 37492;\n\tvar RGBA_ETC2_EAC_Format = 37496;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar RGBA_BPTC_Format = 36492;\n\tvar SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tvar SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tvar SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tvar SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tvar SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tvar SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tvar SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tvar SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tvar SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tvar SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tvar SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tvar SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tvar SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tvar SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar NormalAnimationBlendMode = 2500;\n\tvar AdditiveAnimationBlendMode = 2501;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\n\tvar ZeroStencilOp = 0;\n\tvar KeepStencilOp = 7680;\n\tvar ReplaceStencilOp = 7681;\n\tvar IncrementStencilOp = 7682;\n\tvar DecrementStencilOp = 7683;\n\tvar IncrementWrapStencilOp = 34055;\n\tvar DecrementWrapStencilOp = 34056;\n\tvar InvertStencilOp = 5386;\n\n\tvar NeverStencilFunc = 512;\n\tvar LessStencilFunc = 513;\n\tvar EqualStencilFunc = 514;\n\tvar LessEqualStencilFunc = 515;\n\tvar GreaterStencilFunc = 516;\n\tvar NotEqualStencilFunc = 517;\n\tvar GreaterEqualStencilFunc = 518;\n\tvar AlwaysStencilFunc = 519;\n\n\tvar StaticDrawUsage = 35044;\n\tvar DynamicDrawUsage = 35048;\n\tvar StreamDrawUsage = 35040;\n\tvar StaticReadUsage = 35045;\n\tvar DynamicReadUsage = 35049;\n\tvar StreamReadUsage = 35041;\n\tvar StaticCopyUsage = 35046;\n\tvar DynamicCopyUsage = 35050;\n\tvar StreamCopyUsage = 35042;\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { this._listeners = {}; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return false; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author thezwap\n\t */\n\n\tvar _lut = [];\n\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t}\n\n\tvar MathUtils = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t},\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * MathUtils.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tceilPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tfloorPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t\t// angles are in radians\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c2 = cos( b / 2 );\n\t\t\tvar s2 = sin( b / 2 );\n\n\t\t\tvar c13 = cos( ( a + c ) / 2 );\n\t\t\tvar s13 = sin( ( a + c ) / 2 );\n\n\t\t\tvar c1_3 = cos( ( a - c ) / 2 );\n\t\t\tvar s1_3 = sin( ( a - c ) / 2 );\n\n\t\t\tvar c3_1 = cos( ( c - a ) / 2 );\n\t\t\tvar s3_1 = sin( ( c - a ) / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYX':\n\t\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZY':\n\t\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXZ':\n\t\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZX':\n\t\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXY':\n\t\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYZ':\n\t\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tcross: function ( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp;\n\t\t\tvar m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tvar c = Math.cos( rotation );\n\t\t\tvar s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t},\n\n\t\tscale: function ( sx, sy ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotate: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta );\n\t\t\tvar s = Math.sin( theta );\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\t\tte[ 0 ] = c * a11 + s * a21;\n\t\t\tte[ 3 ] = c * a12 + s * a22;\n\t\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( tx, ty ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar _canvas;\n\n\tvar ImageUtils = {\n\n\t\tgetDataURL: function ( image ) {\n\n\t\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tif ( _canvas === undefined ) { _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); }\n\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tvar output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY,\n\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// process single image\n\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) { return uv; }\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( w === void 0 ) w = 1;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tObject.defineProperties( Vector4.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.z = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.w = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z; // variables for result\n\t\t\tvar epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) { s = 1; }\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: WebGLRenderTarget,\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\t\tconstructor: WebGLMultisampleRenderTarget,\n\n\t\tisWebGLMultisampleRenderTarget: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\t\tthis.samples = source.samples;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( w === void 0 ) w = 1;\n\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tvar x1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t},\n\n\t\tmultiplyQuaternionsFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\t\tvar x0 = src0[ srcOffset0 ];\n\t\t\tvar y0 = src0[ srcOffset0 + 1 ];\n\t\t\tvar z0 = src0[ srcOffset0 + 2 ];\n\t\t\tvar w0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tvar x1 = src1[ srcOffset1 ];\n\t\t\tvar y1 = src1[ srcOffset1 + 1 ];\n\t\t\tvar z1 = src1[ srcOffset1 + 2 ];\n\t\t\tvar w1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\t\treturn dst;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tisQuaternion: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\tvar s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\tvar s$1 = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s$1;\n\t\t\t\tthis._x = 0.25 * s$1;\n\t\t\t\tthis._y = ( m12 + m21 ) / s$1;\n\t\t\t\tthis._z = ( m13 + m31 ) / s$1;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\tvar s$2 = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s$2;\n\t\t\t\tthis._x = ( m12 + m21 ) / s$2;\n\t\t\t\tthis._y = 0.25 * s$2;\n\t\t\t\tthis._z = ( m23 + m32 ) / s$2;\n\n\t\t\t} else {\n\n\t\t\t\tvar s$3 = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s$3;\n\t\t\t\tthis._x = ( m13 + m31 ) / s$3;\n\t\t\t\tthis._y = ( m23 + m32 ) / s$3;\n\t\t\t\tthis._z = 0.25 * s$3;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tangleTo: function ( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t},\n\n\t\trotateTowards: function ( q, step ) {\n\n\t\t\tvar angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) { return this; }\n\n\t\t\tvar t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tinverse: function () {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) { return this; }\n\t\t\tif ( t === 1 ) { return this.copy( qb ); }\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\tthis.normalize();\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\t\tthis._x = attribute.getX( index );\n\t\t\tthis._y = attribute.getY( index );\n\t\t\tthis._z = attribute.getZ( index );\n\t\t\tthis._w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector = new Vector3();\n\tvar _quaternion = new Quaternion();\n\n\tfunction Vector3( x, y, z ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t\t},\n\n\t\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyNormalMatrix: function ( m ) {\n\n\t\t\treturn this.applyMatrix3( m ).normalize();\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t},\n\n\t\tunproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( v ) {\n\n\t\t\tvar denominator = v.lengthSq();\n\n\t\t\tif ( denominator === 0 ) { return this.set( 0, 0, 0 ); }\n\n\t\t\tvar scalar = v.dot( this ) / denominator;\n\n\t\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( _vector );\n\n\t\t},\n\n\t\treflect: function ( normal ) {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t},\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\t\tif ( denominator === 0 ) { return Math.PI / 2; }\n\n\t\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t},\n\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t},\n\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tsetFromMatrix3Column: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trandom: function () {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar _v1 = new Vector3();\n\tvar _m1 = new Matrix4();\n\tvar _zero = new Vector3( 0, 0, 0 );\n\tvar _one = new Vector3( 1, 1, 1 );\n\tvar _x = new Vector3();\n\tvar _y = new Vector3();\n\tvar _z = new Vector3();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function ( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce$1 = c * e, cf$1 = c * f, de$1 = d * e, df$1 = d * f;\n\n\t\t\t\tte[ 0 ] = ce$1 - df$1 * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de$1 + cf$1 * b;\n\n\t\t\t\tte[ 1 ] = cf$1 + de$1 * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df$1 - ce$1 * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae$1 = a * e, af$1 = a * f, be$1 = b * e, bf$1 = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be$1 * d - af$1;\n\t\t\t\tte[ 8 ] = ae$1 * d + bf$1;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf$1 * d + ae$1;\n\t\t\t\tte[ 9 ] = af$1 * d - be$1;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac$1 = a * c, ad$1 = a * d, bc$1 = b * c, bd$1 = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac$1 * f + bd$1;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad$1 * f - bc$1;\n\n\t\t\t\tte[ 2 ] = bc$1 * f - ad$1;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd$1 * f + ac$1;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\treturn this.compose( _zero, q, _one );\n\n\t\t},\n\n\t\tlookAt: function ( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\t_z.subVectors( eye, target );\n\n\t\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t_z.z = 1;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t_z.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_z.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\t\t\t\t_x.crossVectors( up, _z );\n\n\t\t\t}\n\n\t\t\t_x.normalize();\n\t\t\t_y.crossVectors( _z, _x );\n\n\t\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( x, y, z ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tte[ 12 ] = x.x;\n\t\t\t\tte[ 13 ] = x.y;\n\t\t\t\tte[ 14 ] = x.z;\n\n\t\t\t} else {\n\n\t\t\t\tte[ 12 ] = x;\n\t\t\t\tte[ 13 ] = y;\n\t\t\t\tte[ 14 ] = z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t\t}\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = position.x;\n\t\t\tte[ 13 ] = position.y;\n\t\t\tte[ 14 ] = position.z;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) { sx = - sx; }\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\t_m1.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t_m1.elements[ 0 ] *= invSX;\n\t\t\t_m1.elements[ 1 ] *= invSX;\n\t\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t\t_m1.elements[ 4 ] *= invSY;\n\t\t\t_m1.elements[ 5 ] *= invSY;\n\t\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _matrix = new Matrix4();\n\tvar _quaternion$1 = new Quaternion();\n\n\tfunction Euler( x, y, z, order ) {\n\t\tif ( x === void 0 ) x = 0;\n\t\tif ( y === void 0 ) y = 0;\n\t\tif ( z === void 0 ) z = 0;\n\t\tif ( order === void 0 ) order = Euler.DefaultOrder;\n\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = MathUtils.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\n\t\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\n\t\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\n\t\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\n\t\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\n\t\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\n\t\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t\t},\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function ( newOrder ) {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\t_quaternion$1.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t\t},\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) { this._order = array[ 3 ]; }\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\tenableAll: function () {\n\n\t\t\tthis.mask = 0xffffffff | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\tdisableAll: function () {\n\n\t\t\tthis.mask = 0;\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\tvar _object3DId = 0;\n\n\tvar _v1$1 = new Vector3();\n\tvar _q1 = new Quaternion();\n\tvar _m1$1 = new Matrix4();\n\tvar _target = new Vector3();\n\n\tvar _position = new Vector3();\n\tvar _scale = new Vector3();\n\tvar _quaternion$2 = new Quaternion();\n\n\tvar _xAxis = new Vector3( 1, 0, 0 );\n\tvar _yAxis = new Vector3( 0, 1, 0 );\n\tvar _zAxis = new Vector3( 0, 0, 1 );\n\n\tvar _addedEvent = { type: 'added' };\n\tvar _removedEvent = { type: 'removed' };\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Object3D,\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tthis.matrix.premultiply( matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t\t},\n\n\t\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslateX: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t\t},\n\n\t\ttranslateY: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t\t},\n\n\t\ttranslateZ: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t\t},\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t\t},\n\n\t\tlookAt: function ( x, y, z ) {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t\t}\n\n\t\t},\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push( object );\n\n\t\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tattach: function ( object ) {\n\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix4( _m1$1 );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) { return this; }\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldScale: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) { return; }\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { object.name = this.name; }\n\t\t\tif ( this.castShadow === true ) { object.castShadow = true; }\n\t\t\tif ( this.receiveShadow === true ) { object.receiveShadow = true; }\n\t\t\tif ( this.visible === false ) { object.visible = false; }\n\t\t\tif ( this.frustumCulled === false ) { object.frustumCulled = false; }\n\t\t\tif ( this.renderOrder !== 0 ) { object.renderOrder = this.renderOrder; }\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { object.userData = this.userData; }\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) { object.matrixAutoUpdate = false; }\n\n\t\t\t// object specific properties\n\n\t\t\tif ( this.isInstancedMesh ) {\n\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i$1 = 0, l$1 = this.material.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i$1 ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i$2 = 0; i$2 < this.children.length; i$2 ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i$2 ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\t\t\t\tvar shapes$1 = extractFromCache( meta.shapes );\n\n\t\t\t\tif ( geometries.length > 0 ) { output.geometries = geometries; }\n\t\t\t\tif ( materials.length > 0 ) { output.materials = materials; }\n\t\t\t\tif ( textures.length > 0 ) { output.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { output.images = images; }\n\t\t\t\tif ( shapes$1.length > 0 ) { output.shapes = shapes$1; }\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) { recursive = true; }\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tisScene: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) { this.background = source.background.clone(); }\n\t\t\tif ( source.environment !== null ) { this.environment = source.environment.clone(); }\n\t\t\tif ( source.fog !== null ) { this.fog = source.fog.clone(); }\n\n\t\t\tif ( source.overrideMaterial !== null ) { this.overrideMaterial = source.overrideMaterial.clone(); }\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) { data.object.background = this.background.toJSON( meta ); }\n\t\t\tif ( this.environment !== null ) { data.object.environment = this.environment.toJSON( meta ); }\n\t\t\tif ( this.fog !== null ) { data.object.fog = this.fog.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar _points = [\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3()\n\t];\n\n\tvar _vector$1 = new Vector3();\n\n\tvar _box = new Box3();\n\n\t// triangle centered vertices\n\n\tvar _v0 = new Vector3();\n\tvar _v1$2 = new Vector3();\n\tvar _v2 = new Vector3();\n\n\t// triangle edge vectors\n\n\tvar _f0 = new Vector3();\n\tvar _f1 = new Vector3();\n\tvar _f2 = new Vector3();\n\n\tvar _center = new Vector3();\n\tvar _extents = new Vector3();\n\tvar _triangleNormal = new Vector3();\n\tvar _testAxis = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function ( object ) {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box );\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, _vector$1 );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t},\n\n\t\tintersectsTriangle: function ( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( _center );\n\t\t\t_extents.subVectors( this.max, _center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\t_v0.subVectors( triangle.a, _center );\n\t\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\n\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tgetBoundingSphere: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) { this.makeEmpty(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) { return this; }\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( _points );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\tfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\t\tfor ( var i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t_testAxis.fromArray( axes, i );\n\t\t\t// project the aabb onto the seperating axis\n\t\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\tvar p0 = v0.dot( _testAxis );\n\t\t\tvar p1 = v1.dot( _testAxis );\n\t\t\tvar p2 = v2.dot( _testAxis );\n\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tvar _box$1 = new Box3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\treturn ( this.radius < 0 );\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.center.set( 0, 0, 0 );\n\t\t\tthis.radius = - 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\t\ttarget = new Box3();\n\n\t\t\t}\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\tvar _vector$2 = new Vector3();\n\tvar _segCenter = new Vector3();\n\tvar _segDir = new Vector3();\n\tvar _diff = new Vector3();\n\n\tvar _edge1 = new Vector3();\n\tvar _edge2 = new Vector3();\n\tvar _normal = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, _vector$2 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tvar directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function ( point ) {\n\n\t\t\tvar directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\t_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn _vector$2.distanceToSquared( point );\n\n\t\t},\n\n\t\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( _segDir );\n\t\t\tvar b0 = _diff.dot( this.direction );\n\t\t\tvar b1 = - _diff.dot( _segDir );\n\t\t\tvar c = _diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t},\n\n\t\tintersectSphere: function ( sphere, target ) {\n\n\t\t\t_vector$2.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = _vector$2.dot( this.direction );\n\t\t\tvar d2 = _vector$2.dot( _vector$2 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) { return null; }\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) { return null; }\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) { return this.at( t1, target ); }\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, target ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, target ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) { return null; }\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) { tmin = tymin; }\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) { tmax = tymax; }\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) { return null; }\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) { tmin = tzmin; }\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) { tmax = tzmax; }\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) { return null; }\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn this.intersectBox( box, _vector$2 ) !== null;\n\n\t\t},\n\n\t\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t_edge1.subVectors( b, a );\n\t\t\t_edge2.subVectors( c, a );\n\t\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( _normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) { return null; }\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t_diff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector1 = new Vector3();\n\tvar _vector2 = new Vector3();\n\tvar _normalMatrix = new Matrix3();\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tisPlane: true,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function ( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( _vector1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t},\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v0$1 = new Vector3();\n\tvar _v1$3 = new Vector3();\n\tvar _v2$1 = new Vector3();\n\tvar _v3 = new Vector3();\n\n\tvar _vab = new Vector3();\n\tvar _vac = new Vector3();\n\tvar _vbc = new Vector3();\n\tvar _vap = new Vector3();\n\tvar _vbp = new Vector3();\n\tvar _vcp = new Vector3();\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tgetNormal: function ( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\t_v0$1.subVectors( a, b );\n\t\t\ttarget.cross( _v0$1 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t},\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t\t_v0$1.subVectors( c, a );\n\t\t\t_v1$3.subVectors( b, a );\n\t\t\t_v2$1.subVectors( point, a );\n\n\t\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t\t},\n\n\t\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t\t_v0$1.subVectors( c, b );\n\t\t\t_v1$3.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetArea: function () {\n\n\t\t\t_v0$1.subVectors( this.c, this.b );\n\t\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t\t},\n\n\t\tgetMidpoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tgetNormal: function ( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetPlane: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\t\ttarget = new Plane();\n\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetBarycoord: function ( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tisFrontFacing: function ( direction ) {\n\n\t\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors( b, a );\n\t\t\t_vac.subVectors( c, a );\n\t\t\t_vap.subVectors( p, a );\n\t\t\tvar d1 = _vab.dot( _vap );\n\t\t\tvar d2 = _vac.dot( _vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\t_vbp.subVectors( p, b );\n\t\t\tvar d3 = _vab.dot( _vbp );\n\t\t\tvar d4 = _vac.dot( _vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t\t}\n\n\t\t\t_vcp.subVectors( p, c );\n\t\t\tvar d5 = _vab.dot( _vcp );\n\t\t\tvar d6 = _vac.dot( _vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t_vbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t\t},\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tvar _hslA = { h: 0, s: 0, l: 0 };\n\tvar _hslB = { h: 0, s: 0, l: 0 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tfunction hue2rgb( p, q, t ) {\n\n\t\tif ( t < 0 ) { t += 1; }\n\t\tif ( t > 1 ) { t -= 1; }\n\t\tif ( t < 1 / 6 ) { return p + ( q - p ) * 6 * t; }\n\t\tif ( t < 1 / 2 ) { return q; }\n\t\tif ( t < 2 / 3 ) { return p + ( q - p ) * 6 * ( 2 / 3 - t ); }\n\t\treturn p;\n\n\t}\n\n\tfunction SRGBToLinear( c ) {\n\n\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t}\n\n\tfunction LinearToSRGB( c ) {\n\n\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function ( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) { return; }\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\treturn this.setColorName( style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetColorName: function ( style ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = _colorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopySRGBToLinear: function ( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToSRGB: function ( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertSRGBToLinear: function () {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToSRGB: function () {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( target ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tthis.getHSL( _hslA );\n\n\t\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpHSL: function ( color, alpha ) {\n\n\t\t\tthis.getHSL( _hslA );\n\t\t\tcolor.getHSL( _hslB );\n\n\t\t\tvar h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\t\tvar s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\t\tvar l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\t\tthis.r = attribute.getX( index );\n\t\t\tthis.g = attribute.getY( index );\n\t\t\tthis.b = attribute.getZ( index );\n\n\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t// assuming Uint8Array\n\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\tColor.NAMES = _colorKeywords;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0, il$1 = source.vertexColors.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tthis.vertexColors[ i$1 ] = source.vertexColors[ i$1 ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\t\tcustomProgramCacheKey: function () {\n\n\t\t\treturn this.onBeforeCompile.toString();\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) { return; }\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.color && this.color.isColor ) { data.color = this.color.getHex(); }\n\n\t\t\tif ( this.roughness !== undefined ) { data.roughness = this.roughness; }\n\t\t\tif ( this.metalness !== undefined ) { data.metalness = this.metalness; }\n\n\t\t\tif ( this.sheen && this.sheen.isColor ) { data.sheen = this.sheen.getHex(); }\n\t\t\tif ( this.emissive && this.emissive.isColor ) { data.emissive = this.emissive.getHex(); }\n\t\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) { data.emissiveIntensity = this.emissiveIntensity; }\n\n\t\t\tif ( this.specular && this.specular.isColor ) { data.specular = this.specular.getHex(); }\n\t\t\tif ( this.shininess !== undefined ) { data.shininess = this.shininess; }\n\t\t\tif ( this.clearcoat !== undefined ) { data.clearcoat = this.clearcoat; }\n\t\t\tif ( this.clearcoatRoughness !== undefined ) { data.clearcoatRoughness = this.clearcoatRoughness; }\n\n\t\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.map && this.map.isTexture ) { data.map = this.map.toJSON( meta ).uuid; }\n\t\t\tif ( this.matcap && this.matcap.isTexture ) { data.matcap = this.matcap.toJSON( meta ).uuid; }\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) { data.alphaMap = this.alphaMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) { data.lightMap = this.lightMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) { data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) { data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) { data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) { data.specularMap = this.specularMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\t\tif ( this.combine !== undefined ) { data.combine = this.combine; }\n\t\t\t\tif ( this.envMapIntensity !== undefined ) { data.envMapIntensity = this.envMapIntensity; }\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) { data.size = this.size; }\n\t\t\tif ( this.sizeAttenuation !== undefined ) { data.sizeAttenuation = this.sizeAttenuation; }\n\n\t\t\tif ( this.blending !== NormalBlending ) { data.blending = this.blending; }\n\t\t\tif ( this.flatShading === true ) { data.flatShading = this.flatShading; }\n\t\t\tif ( this.side !== FrontSide ) { data.side = this.side; }\n\t\t\tif ( this.vertexColors ) { data.vertexColors = true; }\n\n\t\t\tif ( this.opacity < 1 ) { data.opacity = this.opacity; }\n\t\t\tif ( this.transparent === true ) { data.transparent = this.transparent; }\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation && this.rotation !== 0 ) { data.rotation = this.rotation; }\n\n\t\t\tif ( this.polygonOffset === true ) { data.polygonOffset = true; }\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) { data.polygonOffsetFactor = this.polygonOffsetFactor; }\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) { data.polygonOffsetUnits = this.polygonOffsetUnits; }\n\n\t\t\tif ( this.linewidth && this.linewidth !== 1 ) { data.linewidth = this.linewidth; }\n\t\t\tif ( this.dashSize !== undefined ) { data.dashSize = this.dashSize; }\n\t\t\tif ( this.gapSize !== undefined ) { data.gapSize = this.gapSize; }\n\t\t\tif ( this.scale !== undefined ) { data.scale = this.scale; }\n\n\t\t\tif ( this.dithering === true ) { data.dithering = true; }\n\n\t\t\tif ( this.alphaTest > 0 ) { data.alphaTest = this.alphaTest; }\n\t\t\tif ( this.premultipliedAlpha === true ) { data.premultipliedAlpha = this.premultipliedAlpha; }\n\n\t\t\tif ( this.wireframe === true ) { data.wireframe = this.wireframe; }\n\t\t\tif ( this.wireframeLinewidth > 1 ) { data.wireframeLinewidth = this.wireframeLinewidth; }\n\t\t\tif ( this.wireframeLinecap !== 'round' ) { data.wireframeLinecap = this.wireframeLinecap; }\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) { data.wireframeLinejoin = this.wireframeLinejoin; }\n\n\t\t\tif ( this.morphTargets === true ) { data.morphTargets = true; }\n\t\t\tif ( this.morphNormals === true ) { data.morphNormals = true; }\n\t\t\tif ( this.skinning === true ) { data.skinning = true; }\n\n\t\t\tif ( this.visible === false ) { data.visible = false; }\n\n\t\t\tif ( this.toneMapped === false ) { data.toneMapped = false; }\n\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { data.userData = this.userData; }\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) { data.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { data.images = images; }\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\t\tvar srcPlanes = source.clippingPlanes;\n\t\t\tvar dstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.toneMapped = source.toneMapped;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _vector$3 = new Vector3();\n\tvar _vector2$1 = new Vector2();\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tif ( this.itemSize === 2 ) {\n\n\t\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = this.count; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\t_vector$3.fromBufferAttribute( this, i$1 );\n\t\t\t\t\t_vector$3.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXYZ( i$1, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyNormalMatrix: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.applyNormalMatrix( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.x = this.getX( i );\n\t\t\t\t_vector$3.y = this.getY( i );\n\t\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t\t_vector$3.transformDirection( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar groups = [];\n\n\t\t\tvar group, i;\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < morphNormalsLength; i$1 ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i$1 ] = {\n\t\t\t\t\t\tname: morphNormals[ i$1 ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t\t}\n\n\t\t\tfor ( var i$2 = 0; i$2 < faces.length; i$2 ++ ) {\n\n\t\t\t\tvar face = faces[ i$2 ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i$2 ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i$2 );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs$1 = faceVertexUvs[ 1 ][ i$2 ];\n\n\t\t\t\t\tif ( vertexUvs$1 !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs$1[ 0 ], vertexUvs$1[ 1 ], vertexUvs$1[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i$2 );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j$1 = 0; j$1 < morphNormalsLength; j$1 ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j$1 ].vertexNormals[ i$2 ];\n\n\t\t\t\t\tmorphTargetsNormal[ j$1 ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) { return - Infinity; }\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) { max = array[ i ]; }\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n\tvar _m1$2 = new Matrix4();\n\tvar _obj = new Object3D();\n\tvar _offset = new Vector3();\n\tvar _box$2 = new Box3();\n\tvar _boxMorphTargets = new Box3();\n\tvar _vector$4 = new Vector3();\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: BufferGeometry,\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tsetAttribute: function ( name, attribute ) {\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeleteAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar tangent = this.attributes.tangent;\n\n\t\t\tif ( tangent !== undefined ) {\n\n\t\t\t\ttangent.transformDirection( matrix );\n\n\t\t\t\ttangent.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$2.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$2.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$2.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$2.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj.lookAt( vector );\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tvar position = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tvar attribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tvar attribute$1 = this.attributes.normal;\n\n\t\t\t\tif ( attribute$1 !== undefined ) {\n\n\t\t\t\t\tattribute$1.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute$1.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tvar attribute$2 = this.attributes.color;\n\n\t\t\t\tif ( attribute$2 !== undefined ) {\n\n\t\t\t\t\tattribute$2.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute$2.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tvar attribute$3 = this.attributes.uv;\n\n\t\t\t\tif ( attribute$3 !== undefined ) {\n\n\t\t\t\t\tattribute$3.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute$3.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tvar attribute$4 = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute$4 !== undefined ) {\n\n\t\t\t\t\tattribute$4.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute$4.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_box$2.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = position.count; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\t_vector$4.fromBufferAttribute( position, i$1 );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = morphAttributesPosition.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute$1 = morphAttributesPosition[ i$2 ];\n\t\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute$1.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute$1, j );\n\n\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar positionAttribute = this.getAttribute( 'position' );\n\n\t\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\t\tvar normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tfor ( var i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tfor ( var i$1 = 0, il$1 = index.count; i$1 < il$1; i$1 += 3 ) {\n\n\t\t\t\t\t\tvar vA = index.getX( i$1 + 0 );\n\t\t\t\t\t\tvar vB = index.getX( i$1 + 1 );\n\t\t\t\t\t\tvar vC = index.getX( i$1 + 2 );\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\t\tnA.add( cb );\n\t\t\t\t\t\tnB.add( cb );\n\t\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = positionAttribute.count; i$2 < il$2; i$2 += 3 ) {\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i$2 + 0 );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i$2 + 1 );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i$2 + 2 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i$2 + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) {\n\n\t\t\t\toffset = 0;\n\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) { continue; }\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( normals, i );\n\n\t\t\t\t_vector$4.normalize();\n\n\t\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\t\t\t\tvar normalized = attribute.normalized;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\t// attributes\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = this.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar morphArray = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name$1 ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute$1 = morphAttribute[ i ];\n\n\t\t\t\t\tvar newAttribute$1 = convertBufferAttribute( attribute$1, indices );\n\n\t\t\t\t\tmorphArray.push( newAttribute$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[ name$1 ] = morphArray;\n\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor ( var i$1 = 0, l = groups.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tvar group = groups[ i$1 ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) { data.userData = this.userData; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key$1 in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key$1 ];\n\n\t\t\t\tvar attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) { attributeData.name = attribute.name; }\n\n\t\t\t\tdata.data.attributes[ key$1 ] = attributeData;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = {};\n\t\t\tvar hasMorphAttributes = false;\n\n\t\t\tfor ( var key$2 in this.morphAttributes ) {\n\n\t\t\t\tvar attributeArray = this.morphAttributes[ key$2 ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute$1 = attributeArray[ i ];\n\n\t\t\t\t\tvar attributeData$1 = attribute$1.toJSON( data.data );\n\n\t\t\t\t\tif ( attribute$1.name !== '' ) { attributeData$1.name = attribute$1.name; }\n\n\t\t\t\t\tarray.push( attributeData$1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\t\tmorphAttributes[ key$2 ] = array;\n\n\t\t\t\t\thasMorphAttributes = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphAttributes ) {\n\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t const parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t const values = [];\n\n\t\t\t for ( const key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// used for storing cloned, shared data\n\n\t\t\tvar data = {};\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name$1 ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name$1 ] = array;\n\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i$1 = 0, l$1 = groups.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tvar group = groups[ i$1 ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tvar _inverseMatrix = new Matrix4();\n\tvar _ray = new Ray();\n\tvar _sphere = new Sphere();\n\n\tvar _vA = new Vector3();\n\tvar _vB = new Vector3();\n\tvar _vC = new Vector3();\n\n\tvar _tempA = new Vector3();\n\tvar _tempB = new Vector3();\n\tvar _tempC = new Vector3();\n\n\tvar _morphA = new Vector3();\n\tvar _morphB = new Vector3();\n\tvar _morphC = new Vector3();\n\n\tvar _uvA = new Vector2();\n\tvar _uvB = new Vector2();\n\tvar _uvC = new Vector2();\n\n\tvar _intersectionPoint = new Vector3();\n\tvar _intersectionPointWorld = new Vector3();\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) { return; }\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere.copy( geometry.boundingSphere );\n\t\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) { return; }\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tvar start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tvar end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( var j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\tvar a = index.getX( j );\n\t\t\t\t\t\t\t\tvar b = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tvar c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar start$1 = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tvar end$1 = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( var i$1 = start$1, il$1 = end$1; i$1 < il$1; i$1 += 3 ) {\n\n\t\t\t\t\t\t\tvar a$1 = index.getX( i$1 );\n\t\t\t\t\t\t\tvar b$1 = index.getX( i$1 + 1 );\n\t\t\t\t\t\t\tvar c$1 = index.getX( i$1 + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$1, b$1, c$1 );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i$1 / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i$2 = 0, il$2 = groups.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\t\tvar group$1 = groups[ i$2 ];\n\t\t\t\t\t\t\tvar groupMaterial$1 = material[ group$1.materialIndex ];\n\n\t\t\t\t\t\t\tvar start$2 = Math.max( group$1.start, drawRange.start );\n\t\t\t\t\t\t\tvar end$2 = Math.min( ( group$1.start + group$1.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( var j$1 = start$2, jl$1 = end$2; j$1 < jl$1; j$1 += 3 ) {\n\n\t\t\t\t\t\t\t\tvar a$2 = j$1;\n\t\t\t\t\t\t\t\tvar b$2 = j$1 + 1;\n\t\t\t\t\t\t\t\tvar c$2 = j$1 + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial$1, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$2, b$2, c$2 );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j$1 / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group$1.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar start$3 = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tvar end$3 = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( var i$3 = start$3, il$3 = end$3; i$3 < il$3; i$3 += 3 ) {\n\n\t\t\t\t\t\t\tvar a$3 = i$3;\n\t\t\t\t\t\t\tvar b$3 = i$3 + 1;\n\t\t\t\t\t\t\tvar c$3 = i$3 + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a$3, b$3, c$3 );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i$3 / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) { uvs = faceVertexUvs; }\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) { continue; }\n\n\t\t\t\t\tvar fvA = vertices[ face.a ];\n\t\t\t\t\tvar fvB = vertices[ face.b ];\n\t\t\t\t\tvar fvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\tvar intersect;\n\n\t\tif ( material.side === BackSide ) {\n\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t} else {\n\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t}\n\n\t\tif ( intersect === null ) { return null; }\n\n\t\t_intersectionPointWorld.copy( point );\n\t\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return null; }\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\n\t}\n\n\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t\t_vA.fromBufferAttribute( position, a );\n\t\t_vB.fromBufferAttribute( position, b );\n\t\t_vC.fromBufferAttribute( position, c );\n\n\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) { continue; }\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.boneTransform( a, _vA );\n\t\t\tobject.boneTransform( b, _vB );\n\t\t\tobject.boneTransform( c, _vC );\n\n\t\t}\n\n\t\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\t\tif ( intersection ) {\n\n\t\t\tif ( uv ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( uv2 ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tvar face = new Face3( a, b, c );\n\t\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\t\tintersection.face = face;\n\n\t\t}\n\n\t\treturn intersection;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _geometryId = 0; // Geometry uses even numbers as Id\n\tvar _m1$3 = new Matrix4();\n\tvar _obj$1 = new Object3D();\n\tvar _offset$1 = new Vector3();\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Geometry,\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.faces.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$3.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$3.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$3.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$3.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj$1.lookAt( vector );\n\n\t\t\t_obj$1.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj$1.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar index = geometry.index !== null ? geometry.index : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( attributes.position === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar position = attributes.position;\n\t\t\tvar normal = attributes.normal;\n\t\t\tvar color = attributes.color;\n\t\t\tvar uv = attributes.uv;\n\t\t\tvar uv2 = attributes.uv2;\n\n\t\t\tif ( uv2 !== undefined ) { this.faceVertexUvs[ 1 ] = []; }\n\n\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\tscope.vertices.push( new Vector3().fromBufferAttribute( position, i ) );\n\n\t\t\t\tif ( color !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color().fromBufferAttribute( color, i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexColors = ( color === undefined ) ? [] : [\n\t\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\t\tscope.colors[ c ].clone()\n\t\t\t\t];\n\n\t\t\t\tvar vertexNormals = ( normal === undefined ) ? [] : [\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, a ),\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, b ),\n\t\t\t\t\tnew Vector3().fromBufferAttribute( normal, c )\n\t\t\t\t];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uv !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, a ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, b ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv, c )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uv2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, a ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, b ),\n\t\t\t\t\t\tnew Vector2().fromBufferAttribute( uv2, c )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < groups.length; i$1 ++ ) {\n\n\t\t\t\t\tvar group = groups[ i$1 ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( index.getX( j ), index.getX( j + 1 ), index.getX( j + 2 ), group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < index.count; i$2 += 3 ) {\n\n\t\t\t\t\t\taddFace( index.getX( i$2 ), index.getX( i$2 + 1 ), index.getX( i$2 + 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$3 = 0; i$3 < position.count; i$3 += 3 ) {\n\n\t\t\t\t\t\taddFace( i$3, i$3 + 1, i$3 + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) { areaWeighted = true; }\n\n\t\t\tvar vertices = new Array( this.vertices.length );\n\n\t\t\tfor ( var v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( var f$1 = 0, fl$1 = this.faces.length; f$1 < fl$1; f$1 ++ ) {\n\n\t\t\t\t\tvar face$1 = this.faces[ f$1 ];\n\n\t\t\t\t\tvertices[ face$1.a ].add( face$1.normal );\n\t\t\t\t\tvertices[ face$1.b ].add( face$1.normal );\n\t\t\t\t\tvertices[ face$1.c ].add( face$1.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var v$1 = 0, vl$1 = this.vertices.length; v$1 < vl$1; v$1 ++ ) {\n\n\t\t\t\tvertices[ v$1 ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var f$2 = 0, fl$2 = this.faces.length; f$2 < fl$2; f$2 ++ ) {\n\n\t\t\t\tvar face$2 = this.faces[ f$2 ];\n\n\t\t\t\tvar vertexNormals = face$2.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face$2.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face$2.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face$2.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face$2.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face$2.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face$2.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) { face.__originalVertexNormals = []; }\n\n\t\t\t\tfor ( var i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.morphTargets.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i$1 ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i$1 ] = {};\n\t\t\t\t\tthis.morphNormals[ i$1 ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i$1 ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i$1 ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i$1 ].vertexNormals;\n\n\t\t\t\t\tfor ( var f$1 = 0, fl$1 = this.faces.length; f$1 < fl$1; f$1 ++ ) {\n\n\t\t\t\t\t\tvar faceNormal = new Vector3();\n\t\t\t\t\t\tvar vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i$1 ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i$1 ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tfor ( var f$2 = 0, fl$2 = this.faces.length; f$2 < fl$2; f$2 ++ ) {\n\n\t\t\t\t\tvar face$1 = this.faces[ f$2 ];\n\n\t\t\t\t\tvar faceNormal$1 = morphNormals.faceNormals[ f$2 ];\n\t\t\t\t\tvar vertexNormals$1 = morphNormals.vertexNormals[ f$2 ];\n\n\t\t\t\t\tfaceNormal$1.copy( face$1.normal );\n\n\t\t\t\t\tvertexNormals$1.a.copy( face$1.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals$1.b.copy( face$1.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals$1.c.copy( face$1.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( var f$3 = 0, fl$3 = this.faces.length; f$3 < fl$3; f$3 ++ ) {\n\n\t\t\t\tvar face$2 = this.faces[ f$3 ];\n\n\t\t\t\tface$2.normal = face$2.__originalFaceNormal;\n\t\t\t\tface$2.vertexNormals = face$2.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) { materialIndexOffset = 0; }\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) { vertexCopy.applyMatrix4( matrix ); }\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i$1 = 0, il$1 = colors2.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i$1 ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( var i$2 = 0, il$2 = faces2.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\tvar face = faces2[ i$2 ], faceCopy = (void 0), normal = (void 0), color = (void 0),\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j$1 = 0, jl$1 = faceVertexColors.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j$1 ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( var i$3 = 0, il$3 = geometry.faceVertexUvs.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i$3 ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i$3 ] === undefined ) { this.faceVertexUvs[ i$3 ] = []; }\n\n\t\t\t\tfor ( var j$2 = 0, jl$2 = faceVertexUvs2.length; j$2 < jl$2; j$2 ++ ) {\n\n\t\t\t\t\tvar uvs2 = faceVertexUvs2[ j$2 ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( mesh.matrixAutoUpdate ) { mesh.updateMatrix(); }\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar v = this.vertices[ i ];\n\t\t\t\tvar key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.faces.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i$1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i$2 = faceIndicesToRemove.length - 1; i$2 >= 0; i$2 -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i$2 ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( var j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.vertices = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) { newUvs1 = []; }\n\t\t\tif ( uvs2 && uvs2.length === length ) { newUvs2 = []; }\n\n\t\t\tfor ( var i$1 = 0; i$1 < length; i$1 ++ ) {\n\n\t\t\t\tvar id = faces[ i$1 ]._id;\n\n\t\t\t\tif ( newUvs1 ) { newUvs1.push( uvs1[ id ] ); }\n\t\t\t\tif ( newUvs2 ) { newUvs2.push( uvs2[ id ] ); }\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) { this.faceVertexUvs[ 0 ] = newUvs1; }\n\t\t\tif ( newUvs2 ) { this.faceVertexUvs[ 1 ] = newUvs2; }\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i$1 = 0; i$1 < this.faces.length; i$1 ++ ) {\n\n\t\t\t\tvar face = this.faces[ i$1 ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i$1 ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i$1 ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) { data.data.colors = colors; }\n\t\t\tif ( uvs.length > 0 ) { data.data.uvs = [ uvs ]; } // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t const parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t const values = [];\n\n\t\t\t for ( const key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( var i$1 = 0, il$1 = colors.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i$1 ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i$2 = 0, il$2 = faces.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i$2 ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( var i$3 = 0, il$3 = source.faceVertexUvs.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i$3 ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i$3 ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i$3 ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( var i$4 = 0, il$4 = morphTargets.length; i$4 < il$4; i$4 ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i$4 ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i$4 ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( var j$1 = 0, jl$1 = morphTargets[ i$4 ].vertices.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i$4 ].vertices[ j$1 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i$4 ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( var j$2 = 0, jl$2 = morphTargets[ i$4 ].normals.length; j$2 < jl$2; j$2 ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i$4 ].normals[ j$2 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( var i$5 = 0, il$5 = morphNormals.length; i$5 < il$5; i$5 ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i$5 ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( var j$3 = 0, jl$3 = morphNormals[ i$5 ].vertexNormals.length; j$3 < jl$3; j$3 ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i$5 ].vertexNormals[ j$3 ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i$5 ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( var j$4 = 0, jl$4 = morphNormals[ i$5 ].faceNormals.length; j$4 < jl$4; j$4 ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i$5 ].faceNormals[ j$4 ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( var i$6 = 0, il$6 = skinWeights.length; i$6 < il$6; i$6 ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i$6 ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( var i$7 = 0, il$7 = skinIndices.length; i$7 < il$7; i$7 ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i$7 ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( var i$8 = 0, il$8 = lineDistances.length; i$8 < il$8; i$8 ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i$8 ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tvar BoxGeometry = /*@__PURE__*/(function (Geometry) {\n\t\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tGeometry.call(this);\n\n\t\t\tthis.type = 'BoxGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\t\tthis.mergeVertices();\n\n\t\t}\n\n\t\tif ( Geometry ) BoxGeometry.__proto__ = Geometry;\n\t\tBoxGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n\t\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t\treturn BoxGeometry;\n\t}(Geometry));\n\n\t// BoxBufferGeometry\n\n\tvar BoxBufferGeometry = /*@__PURE__*/(function (BufferGeometry) {\n\t\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tBufferGeometry.call(this);\n\n\t\t\tthis.type = 'BoxBufferGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tvar scope = this;\n\n\t\t\twidth = width || 1;\n\t\t\theight = height || 1;\n\t\t\tdepth = depth || 1;\n\n\t\t\t// segments\n\n\t\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t\t// buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tvar numberOfVertices = 0;\n\t\t\tvar groupStart = 0;\n\n\t\t\t// build each side of the box geometry\n\n\t\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\t\tvar segmentWidth = width / gridX;\n\t\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\t\tvar widthHalf = width / 2;\n\t\t\t\tvar heightHalf = height / 2;\n\t\t\t\tvar depthHalf = depth / 2;\n\n\t\t\t\tvar gridX1 = gridX + 1;\n\t\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\t\tvar vertexCounter = 0;\n\t\t\t\tvar groupCount = 0;\n\n\t\t\t\tvar vector = new Vector3();\n\n\t\t\t\t// generate vertices, normals and uvs\n\n\t\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// uvs\n\n\t\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t\t// counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// indices\n\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\t\tfor ( var iy$1 = 0; iy$1 < gridY; iy$1 ++ ) {\n\n\t\t\t\t\tfor ( var ix$1 = 0; ix$1 < gridX; ix$1 ++ ) {\n\n\t\t\t\t\t\tvar a = numberOfVertices + ix$1 + gridX1 * iy$1;\n\t\t\t\t\t\tvar b = numberOfVertices + ix$1 + gridX1 * ( iy$1 + 1 );\n\t\t\t\t\t\tvar c = numberOfVertices + ( ix$1 + 1 ) + gridX1 * ( iy$1 + 1 );\n\t\t\t\t\t\tvar d = numberOfVertices + ( ix$1 + 1 ) + gridX1 * iy$1;\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t\t// increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t\t// update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( BufferGeometry ) BoxBufferGeometry.__proto__ = BufferGeometry;\n\t\tBoxBufferGeometry.prototype = Object.create( BufferGeometry && BufferGeometry.prototype );\n\t\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t\treturn BoxBufferGeometry;\n\t}(BufferGeometry));\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tfunction cloneUniforms( src ) {\n\n\t\tvar dst = {};\n\n\t\tfor ( var u in src ) {\n\n\t\t\tdst[ u ] = {};\n\n\t\t\tfor ( var p in src[ u ] ) {\n\n\t\t\t\tvar property = src[ u ][ p ];\n\n\t\t\t\tif ( property && ( property.isColor ||\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction mergeUniforms( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t}\n\n\t// Legacy\n\n\tvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = {};\n\n\t\tfor ( var name in this.uniforms ) {\n\n\t\t\tvar uniform = this.uniforms[ name ];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) { data.defines = this.defines; }\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tvar extensions = {};\n\n\t\tfor ( var key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) { extensions[ key ] = true; }\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) { data.extensions = extensions; }\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   const w = 1920;\n\t\t *   const h = 1080;\n\t\t *   const fullWidth = w * 3;\n\t\t *   const fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) { left += near * skew / this.getFilmWidth(); }\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar fov = 90, aspect = 1;\n\n\tfunction CubeCamera( near, far, renderTarget ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) { this.updateMatrixWorld(); }\n\n\t\t\tvar currentXrEnabled = renderer.xr.enabled;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.xr.enabled = false;\n\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\t\trenderer.render( scene, cameraPX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\t\trenderer.render( scene, cameraNX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\t\trenderer.render( scene, cameraPY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\t\trenderer.render( scene, cameraNY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\t\trenderer.render( scene, cameraPZ );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\t\trenderer.render( scene, cameraNZ );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction WebGLCubeRenderTarget( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tWebGLRenderTarget.call( this, size, size, options );\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tWebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = texture.format;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tvar scene = new Scene();\n\n\t\tvar shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"#include <common>\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\t\"\tvec2 sampleUV = equirectUv( direction );\",\n\n\t\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\t\t};\n\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\t\tscene.add( mesh );\n\n\t\tvar camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, scene );\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _sphere$1 = new Sphere();\n\tvar _vector$5 = new Vector3();\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromProjectionMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSprite: function ( sprite ) {\n\n\t\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tuv2Transform: { value: new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 },\n\t\t\tmaxMipLevel: { value: 0 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tlightProbe: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {}\n\t\t\t} },\n\n\t\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {}\n\t\t\t} },\n\n\t\t\tspotLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {}\n\t\t\t} },\n\n\t\t\tpointLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAnimation() {\n\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\t\tvar requestId = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) { return; }\n\t\t\t\tif ( animationLoop === null ) { return; }\n\n\t\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.usage;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = 5126;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = 5126;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = 5122;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = 5125;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = 5124;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = 5120;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = 5121;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var iy$1 = 0; iy$1 < gridY; iy$1 ++ ) {\n\n\t\t\tfor ( var ix$1 = 0; ix$1 < gridX; ix$1 ++ ) {\n\n\t\t\t\tvar a = ix$1 + gridX1 * iy$1;\n\t\t\t\tvar b = ix$1 + gridX1 * ( iy$1 + 1 );\n\t\t\t\tvar c = ( ix$1 + 1 ) + gridX1 * ( iy$1 + 1 );\n\t\t\t\tvar d = ( ix$1 + 1 ) + gridX1 * iy$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_maxMipLevel 8.0\\n#define cubeUV_minMipLevel 4.0\\n#define cubeUV_maxTileSize 256.0\\n#define cubeUV_minTileSize 16.0\\nfloat getFace(vec3 direction) {\\n    vec3 absDirection = abs(direction);\\n    float face = -1.0;\\n    if (absDirection.x > absDirection.z) {\\n      if (absDirection.x > absDirection.y)\\n        face = direction.x > 0.0 ? 0.0 : 3.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    } else {\\n      if (absDirection.z > absDirection.y)\\n        face = direction.z > 0.0 ? 2.0 : 5.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    }\\n    return face;\\n}\\nvec2 getUV(vec3 direction, float face) {\\n    vec2 uv;\\n    if (face == 0.0) {\\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\\n    return 0.5 * (uv + 1.0);\\n}\\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\\n  float face = getFace(direction);\\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\\n  mipInt = max(mipInt, cubeUV_minMipLevel);\\n  float faceSize = exp2(mipInt);\\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\\n  vec2 f = fract(uv);\\n  uv += 0.5 - f;\\n  if (face > 2.0) {\\n    uv.y += faceSize;\\n    face -= 3.0;\\n  }\\n  uv.x += face * faceSize;\\n  if(mipInt < cubeUV_maxMipLevel){\\n    uv.y += 2.0 * cubeUV_maxTileSize;\\n  }\\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\\n  uv *= texelSize;\\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x += texelSize;\\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.y += texelSize;\\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x -= texelSize;\\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  vec3 tm = mix(tl, tr, f.x);\\n  vec3 bm = mix(bl, br, f.x);\\n  return mix(tm, bm, f.y);\\n}\\n#define r0 1.0\\n#define v0 0.339\\n#define m0 -2.0\\n#define r1 0.8\\n#define v1 0.276\\n#define m1 -1.0\\n#define r4 0.4\\n#define v4 0.046\\n#define m4 2.0\\n#define r5 0.305\\n#define v5 0.016\\n#define m5 3.0\\n#define r6 0.21\\n#define v6 0.0038\\n#define m6 4.0\\nfloat roughnessToMip(float roughness) {\\n  float mip = 0.0;\\n  if (roughness >= r1) {\\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\\n  } else if (roughness >= r4) {\\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\\n  } else if (roughness >= r5) {\\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\\n  } else if (roughness >= r6) {\\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\\n  } else {\\n    mip = -2.0 * log2(1.16 * roughness);  }\\n  return mip;\\n}\\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\\n  float mipF = fract(mip);\\n  float mipInt = floor(mip);\\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\\n  if (mipF == 0.0) {\\n    return vec4(color0, 1.0);\\n  } else {\\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\\n    return vec4(mix(color0, color1, mipF), 1.0);\\n  }\\n}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec2 sampleUV = equirectUv( reflectVec );\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV = equirectUv( reflectVec );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3\\tdiffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 1.0 },\n\t\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\ttoon: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\t\tt2D: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t} ] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearcoat: { value: 0 },\n\t\t\t\tclearcoatMap: { value: null },\n\t\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t\tclearcoatNormalMap: { value: null },\n\t\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\t\ttransparency: { value: 0 },\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\n\t\tvar currentBackground = null;\n\t\tvar currentBackgroundVersion = 0;\n\t\tvar currentTonemapping = null;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.isScene === true ? scene.background : null;\n\n\t\t\t// Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\t\t\tvar xr = renderer.xr;\n\t\t\tvar session = xr.getSession && xr.getSession();\n\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\t\tbackground = null;\n\n\t\t\t}\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = background.isWebGLCubeRenderTarget ? background.texture : background;\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = texture;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== texture.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = texture.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tbackground.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Takahiro / https://github.com/takahirox\n\t */\n\n\tfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\t\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\n\t\tvar extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\t\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\t\tvar bindingStates = {};\n\n\t\tvar defaultState = createBindingState( null );\n\t\tvar currentState = defaultState;\n\n\t\tfunction setup( object, material, program, geometry, index ) {\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( vaoAvailable ) {\n\n\t\t\t\tvar state = getBindingState( geometry, program, material );\n\n\t\t\t\tif ( currentState !== state ) {\n\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\t\tif ( updateBuffers ) { saveCache( geometry ); }\n\n\t\t\t} else {\n\n\t\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\t\tupdateBuffers = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, 34963 );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.createVertexArray(); }\n\n\t\t\treturn extension.createVertexArrayOES();\n\n\t\t}\n\n\t\tfunction bindVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.bindVertexArray( vao ); }\n\n\t\t\treturn extension.bindVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction deleteVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) { return gl.deleteVertexArray( vao ); }\n\n\t\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction getBindingState( geometry, program, material ) {\n\n\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\t\tif ( programMap === undefined ) {\n\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t\t}\n\n\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\tif ( stateMap === undefined ) {\n\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t\t}\n\n\t\t\tvar state = stateMap[ wireframe ];\n\n\t\t\tif ( state === undefined ) {\n\n\t\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\t\tstateMap[ wireframe ] = state;\n\n\t\t\t}\n\n\t\t\treturn state;\n\n\t\t}\n\n\t\tfunction createBindingState( vao ) {\n\n\t\t\tvar newAttributes = [];\n\t\t\tvar enabledAttributes = [];\n\t\t\tvar attributeDivisors = [];\n\n\t\t\tfor ( var i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\t\t\t\tenabledAttributes[ i ] = 0;\n\t\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction needsUpdate( geometry ) {\n\n\t\t\tvar cachedAttributes = currentState.attributes;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) { return true; }\n\n\t\t\tfor ( var key in geometryAttributes ) {\n\n\t\t\t\tvar cachedAttribute = cachedAttributes[ key ];\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) { return true; }\n\n\t\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) { return true; }\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction saveCache( geometry ) {\n\n\t\t\tvar cache = {};\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ key ] = data;\n\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\n\t\t\tfor ( var i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\t\tvar attributeDivisors = currentState.attributeDivisors;\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor ( var i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\t\tgl.vertexAttribIPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t} else {\n\n\t\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) { return; }\n\n\t\t\t}\n\n\t\t\tinitAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\t\tvar attribute$1 = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute$1 === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer$1 = attribute$1.buffer;\n\t\t\t\t\t\tvar type$1 = attribute$1.type;\n\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer$1 );\n\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type$1, false, 64, 0 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type$1, false, 64, 16 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type$1, false, 64, 32 );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type$1, false, 64, 48 );\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\treset();\n\n\t\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\t\tif ( bindingStates[ geometry.id ] === undefined ) { return; }\n\n\t\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometry.id ];\n\n\t\t}\n\n\t\tfunction releaseStatesOfProgram( program ) {\n\n\t\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\t\tif ( programMap[ program.id ] === undefined ) { continue; }\n\n\t\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ program.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\tresetDefaultState();\n\n\t\t\tif ( currentState === defaultState ) { return; }\n\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\t// for backward-compatilibity\n\n\t\tfunction resetDefaultState() {\n\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) { return maxAnisotropy; }\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\t/* eslint-disable no-undef */\n\t\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t\t/* eslint-enable no-undef */\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tvar maxTextures = gl.getParameter( 34930 );\n\t\tvar maxVertexTextures = gl.getParameter( 35660 );\n\t\tvar maxTextureSize = gl.getParameter( 3379 );\n\t\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\t\tvar maxAttributes = gl.getParameter( 34921 );\n\t\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\t\tvar maxVaryings = gl.getParameter( 36348 );\n\t\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\t\tmaxSamples: maxSamples\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this;\n\n\t\tvar globalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false;\n\n\t\tvar plane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\t\tvar dstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\t\tvar geometries = new WeakMap();\n\t\tvar wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tgeometries.delete( geometry );\n\n\t\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry ) { return buffergeometry; }\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries.set( geometry, buffergeometry );\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name$1 in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name$1 ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateWireframeAttribute( geometry ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryPosition = geometry.attributes.position;\n\t\t\tvar version = 0;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array$1 = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = ( array$1.length / 3 ) - 1; i$1 < l$1; i$1 += 3 ) {\n\n\t\t\t\t\tvar a$1 = i$1 + 0;\n\t\t\t\t\tvar b$1 = i$1 + 1;\n\t\t\t\t\tvar c$1 = i$1 + 2;\n\n\t\t\t\t\tindices.push( a$1, b$1, b$1, c$1, c$1, a$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t\tattribute.version = version;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t\t//\n\n\t\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( previousAttribute ) { attributes.remove( previousAttribute ); }\n\n\t\t\t//\n\n\t\t\twireframeAttributes.set( geometry, attribute );\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( currentAttribute ) {\n\n\t\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get( geometry );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\tinstanceCount = instanceCount || 1;\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 4:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction numericalSort( a, b ) {\n\n\t\treturn a[ 0 ] - b[ 0 ];\n\n\t}\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar workInfluences = [];\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t\t}\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tvar length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i$1 = 0; i$1 < length; i$1 ++ ) {\n\n\t\t\t\tvar influence = influences[ i$1 ];\n\n\t\t\t\tinfluence[ 0 ] = i$1;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i$1 ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( var i$2 = 0; i$2 < 8; i$2 ++ ) {\n\n\t\t\t\tif ( i$2 < length && influences[ i$2 ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i$2 ][ 0 ] = influences[ i$2 ][ 0 ];\n\t\t\t\t\tworkInfluences[ i$2 ][ 1 ] = influences[ i$2 ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i$2 ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i$2 ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\tvar morphInfluencesSum = 0;\n\n\t\t\tfor ( var i$3 = 0; i$3 < 8; i$3 ++ ) {\n\n\t\t\t\tvar influence$1 = workInfluences[ i$3 ];\n\t\t\t\tvar index = influence$1[ 0 ];\n\t\t\t\tvar value = influence$1[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i$3 ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i$3, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i$3 ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i$3, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i$3 ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i$3 ) !== undefined ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i$3 ) !== undefined ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i$3 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\t\tvar updateMap = new WeakMap();\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateMap = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction DataTexture2DArray( data, width, height, depth ) {\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture2DArray.prototype = Object.create( Texture.prototype );\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\t/**\n\t * @author Artur Trzesiok\n\t */\n\n\tfunction DataTexture3D( data, width, height, depth ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\n\t}\n\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture2dArray = new DataTexture2DArray();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\tvar mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) { return array; }\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) { return false; }\n\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) { return false; }\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( textures, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValueV1f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValueM2( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM3( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM4( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT2DArray1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValueV1i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\tfunction setValueV2i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV3i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV4i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// uint\n\n\tfunction setValueV1ui( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1ui( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\tfunction setValueV1fArray( gl, v ) {\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\tfunction setValueV1iArray( gl, v ) {\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV2iArray( gl, v ) {\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3iArray( gl, v ) {\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4iArray( gl, v ) {\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t}\n\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 2 );\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV3fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 3 );\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV4fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM3Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 9 );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM4Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 16 );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\t\tthis.cache = new Float32Array( data.length );\n\n\t\t}\n\n\t\tcopyArray( cache, data );\n\n\t};\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\t\tvar id = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) { id = id | 0; } // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map;\n\t\t\t\tvar next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) { u.setValue( gl, value, textures ); }\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) { this.setValue( gl, name, v ); }\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) { r.push( u ); }\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE', '( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\n\t\t}\n\n\t}\n\n\tfunction getShaderErrors( gl, shader, type ) {\n\n\t\tvar status = gl.getShaderParameter( shader, 35713 );\n\t\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\t\tif ( status && log === '' ) { return ''; }\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tvar source = gl.getShaderSource( shader );\n\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\t\ttoneMappingName = 'Linear';\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( parameters ) {\n\n\t\tvar chunks = [\n\t\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) { continue; }\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35721 );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\t// Resolve Includes\n\n\tvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes( string ) {\n\n\t\treturn string.replace( includePattern, includeReplacer );\n\n\t}\n\n\tfunction includeReplacer( match, include ) {\n\n\t\tvar string = ShaderChunk[ include ];\n\n\t\tif ( string === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn resolveIncludes( string );\n\n\t}\n\n\t// Unroll Loops\n\n\tvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tvar unrollLoopPattern = /#pragma unroll_loop_start[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}[\\s]+?#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops( string ) {\n\n\t\treturn string\n\t\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n\t}\n\n\tfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\t\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\t\treturn loopReplacer( match, start, end, snippet );\n\n\t}\n\n\tfunction loopReplacer( match, start, end, snippet ) {\n\n\t\tvar string = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tstring += snippet\n\t\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t\t}\n\n\t\treturn string;\n\n\t}\n\n\t//\n\n\tfunction generatePrecision( parameters ) {\n\n\t\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\t\tif ( parameters.precision === \"highp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t\t}\n\n\t\treturn precisionstring;\n\n\t}\n\n\tfunction generateShadowMapTypeDefine( parameters ) {\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapTypeDefine( parameters ) {\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapModeDefine( parameters ) {\n\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapModeDefine;\n\n\t}\n\n\tfunction generateEnvMapBlendingDefine( parameters ) {\n\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\n\t}\n\n\tfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t\tvar gl = renderer.getContext();\n\n\t\tvar defines = parameters.defines;\n\n\t\tvar vertexShader = parameters.vertexShader;\n\t\tvar fragmentShader = parameters.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\t\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\t\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\t\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( parameters.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = resolveIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = resolveIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {\n\n\t\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\t\tif ( parameters.isShaderMaterial &&\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t\t}\n\n\t\t\t// GLSL 3.0 conversion\n\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t//\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount ++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities, bindingStates ) {\n\n\t\tvar programs = [];\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\t\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tvar vertexTextures = capabilities.vertexTextures;\n\n\t\tvar precision = capabilities.precision;\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\",\n\t\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatMap\", \"clearcoatRoughnessMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\t\"sheen\"\n\t\t];\n\n\t\tfunction getShaderObject( material, shaderID ) {\n\n\t\t\tvar shaderobject;\n\n\t\t\tif ( shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ shaderID ];\n\n\t\t\t\tshaderobject = {\n\t\t\t\t\tname: material.name || material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tshaderobject = {\n\t\t\t\t\tname: material.name || material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn shaderobject;\n\n\t\t}\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tfunction getParameters( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\t\tvar envMap = material.envMap || environment;\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar shaderobject = getShaderObject( material, shaderID );\n\t\t\tmaterial.onBeforeCompile( shaderobject, renderer );\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tisWebGL2: isWebGL2,\n\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: shaderobject.name,\n\n\t\t\t\tuniforms: shaderobject.uniforms,\n\t\t\t\tvertexShader: shaderobject.vertexShader,\n\t\t\t\tfragmentShader: shaderobject.fragmentShader,\n\t\t\t\tdefines: material.defines,\n\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial,\n\t\t\t\tisShaderMaterial: material.isShaderMaterial,\n\n\t\t\t\tprecision: precision,\n\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\t\tmatcap: !! material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\t\tenvMap: !! envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tsheen: !! material.sheen,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,\n\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t}\n\n\t\tfunction getProgramCacheKey( parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( parameters.fragmentShader );\n\t\t\t\tarray.push( parameters.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in parameters.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parameters.isRawShaderMaterial === undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t\t}\n\n\t\t\t\tarray.push( renderer.outputEncoding );\n\t\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t\t}\n\n\t\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\t\treturn array.join();\n\n\t\t}\n\n\t\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction releaseProgram( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tvar map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tvar defaultProgram = { id: - 1 };\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\trenderItemsIndex ++;\n\n\t\t\treturn renderItem;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t}\n\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t\t}\n\n\t\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\t\tif ( opaque.length > 1 ) { opaque.sort( customOpaqueSort || painterSortStable ); }\n\t\t\tif ( transparent.length > 1 ) { transparent.sort( customTransparentSort || reversePainterSortStable ); }\n\n\t\t}\n\n\t\tfunction finish() {\n\n\t\t\t// Clear references from inactive renderItems in the list\n\n\t\t\tfor ( var i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\t\tvar renderItem = renderItems[ i ];\n\n\t\t\t\tif ( renderItem.id === null ) { break; }\n\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\tlists.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar cameras = lists.get( scene );\n\t\t\tvar list;\n\n\t\t\tif ( cameras === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set( scene, new WeakMap() );\n\t\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tlist = cameras.get( camera );\n\t\t\t\tif ( list === undefined ) {\n\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tcameras.set( camera, list );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction ShadowUniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n\n\tvar nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\t\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar shadowCache = ShadowUniformsCache();\n\n\t\tvar state = {\n\n\t\t\tversion: 0,\n\n\t\t\thash: {\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\n\t\t\t\tnumDirectionalShadows: - 1,\n\t\t\t\tnumPointShadows: - 1,\n\t\t\t\tnumSpotShadows: - 1\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\n\t\t};\n\n\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe.push( new Vector3() ); }\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe[ i ].set( 0, 0, 0 ); }\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar numDirectionalShadows = 0;\n\t\t\tvar numPointShadows = 0;\n\t\t\tvar numSpotShadows = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t\tfor ( var i$1 = 0, l = lights.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tvar light = lights[ i$1 ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms$1 = cache.get( light );\n\n\t\t\t\t\tuniforms$1.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$1.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms$1.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms$1.distance = distance;\n\n\t\t\t\t\tuniforms$1.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms$1.direction.sub( vector3 );\n\t\t\t\t\tuniforms$1.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms$1.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms$1.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms$1.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow$1 = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms$1 = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms$1.shadowBias = shadow$1.bias;\n\t\t\t\t\t\tshadowUniforms$1.shadowNormalBias = shadow$1.normalBias;\n\t\t\t\t\t\tshadowUniforms$1.shadowRadius = shadow$1.radius;\n\t\t\t\t\t\tshadowUniforms$1.shadowMapSize = shadow$1.mapSize;\n\n\t\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms$1;\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms$1;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms$2 = cache.get( light );\n\n\t\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\t\tuniforms$2.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms$2.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$2.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms$2.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms$2.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms$2.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms$2.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms$2;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms$3 = cache.get( light );\n\n\t\t\t\t\tuniforms$3.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$3.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms$3.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms$3.distance = light.distance;\n\t\t\t\t\tuniforms$3.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow$2 = light.shadow;\n\n\t\t\t\t\t\tvar shadowUniforms$2 = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms$2.shadowBias = shadow$2.bias;\n\t\t\t\t\t\tshadowUniforms$2.shadowNormalBias = shadow$2.normalBias;\n\t\t\t\t\t\tshadowUniforms$2.shadowRadius = shadow$2.radius;\n\t\t\t\t\t\tshadowUniforms$2.shadowMapSize = shadow$2.mapSize;\n\t\t\t\t\t\tshadowUniforms$2.shadowCameraNear = shadow$2.camera.near;\n\t\t\t\t\t\tshadowUniforms$2.shadowCameraFar = shadow$2.camera.far;\n\n\t\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms$2;\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[ pointLength ] = uniforms$3;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms$4 = cache.get( light );\n\n\t\t\t\t\tuniforms$4.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms$4.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms$4.direction.normalize();\n\n\t\t\t\t\tuniforms$4.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms$4.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms$4;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tvar hash = state.hash;\n\n\t\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\t\thash.pointLength !== pointLength ||\n\t\t\t\thash.spotLength !== spotLength ||\n\t\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\t\thash.hemiLength !== hemiLength ||\n\t\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\t\tstate.version = nextVersion ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLRenderState() {\n\n\t\tvar lights = new WebGLLights();\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( camera ) {\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates() {\n\n\t\tvar renderStates = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\trenderStates.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar renderState;\n\n\t\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum();\n\n\t\tvar _shadowMapSize = new Vector2(),\n\t\t\t_viewportSize = new Vector2(),\n\n\t\t\t_viewport = new Vector4(),\n\n\t\t\t_depthMaterials = [],\n\t\t\t_distanceMaterials = [],\n\n\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\t\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: { value: null },\n\t\t\t\tresolution: { value: new Vector2() },\n\t\t\t\tradius: { value: 4.0 }\n\t\t\t},\n\n\t\t\tvertexShader: vsm_vert,\n\n\t\t\tfragmentShader: vsm_frag\n\n\t\t} );\n\n\t\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\t\tvar fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute(\n\t\t\t\"position\",\n\t\t\tnew BufferAttribute(\n\t\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) { return; }\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) { return; }\n\n\t\t\tif ( lights.length === 0 ) { return; }\n\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.setBlending( NoBlending );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) { continue; }\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars$1 = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars$1 );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t\t_viewport.set(\n\t\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t\t);\n\n\t\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t\t}\n\n\t\t\t\t// do blur pass for VSM\n\n\t\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t\t};\n\n\t\tfunction VSMPass( shadow, camera ) {\n\n\t\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t\t// vertical pass\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t\t// horizonal pass\n\n\t\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t\t}\n\n\t\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _depthMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_depthMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _distanceMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\t\tvar result = null;\n\n\t\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( light.isPointLight === true ) {\n\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( customMaterial === undefined ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = false;\n\n\t\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif ( type === VSMShadowMap ) {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t\t} else {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial$1 = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial$1, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar enabledCapabilities = {};\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( 35661 );\n\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter( 7938 );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, 10241, 9728 );\n\t\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\t\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( 2929 );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( 2884 );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvar equationToGL = {};\n\t\tequationToGL[ AddEquation ] = 32774;\n\t\tequationToGL[ SubtractEquation ] = 32778;\n\t\tequationToGL[ ReverseSubtractEquation ] = 32779;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\tequationToGL[ MinEquation ] = 32775;\n\t\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar factorToGL = {};\n\t\tfactorToGL[ ZeroFactor ] = 0;\n\t\tfactorToGL[ OneFactor ] = 1;\n\t\tfactorToGL[ SrcColorFactor ] = 768;\n\t\tfactorToGL[ SrcAlphaFactor ] = 770;\n\t\tfactorToGL[ SrcAlphaSaturateFactor ] = 776;\n\t\tfactorToGL[ DstColorFactor ] = 774;\n\t\tfactorToGL[ DstAlphaFactor ] = 772;\n\t\tfactorToGL[ OneMinusSrcColorFactor ] = 769;\n\t\tfactorToGL[ OneMinusSrcAlphaFactor ] = 771;\n\t\tfactorToGL[ OneMinusDstColorFactor ] = 775;\n\t\tfactorToGL[ OneMinusDstAlphaFactor ] = 773;\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\t\tdisable( 3042 );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\t\tenable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( 2884 )\n\t\t\t\t: enable( 2884 );\n\n\t\t\tvar flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) { flipSided = ! flipSided; }\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tvar stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest( stencilWrite );\n\t\t\tif ( stencilWrite ) {\n\n\t\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t\t}\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( 2884 );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 2884 );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) { gl.lineWidth( width ); }\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( 32823 );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 32823 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( 3089 );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 3089 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) { webglSlot = 33984 + maxTextures - 1; }\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unbindTexture() {\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar maxTextures = capabilities.maxTextures;\n\t\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\t\tvar maxTextureSize = capabilities.maxTextureSize;\n\t\tvar maxSamples = capabilities.maxSamples;\n\n\t\tvar _videoTextures = new WeakMap();\n\t\tvar _canvas;\n\n\t\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\t\tvar useOffscreenCanvas = false;\n\n\t\ttry {\n\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t\t} catch ( err ) {\n\n\t\t\t// Ignore any errors\n\n\t\t}\n\n\t\tfunction createCanvas( width, height ) {\n\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\t\treturn useOffscreenCanvas ?\n\t\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t}\n\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\t\tvar scale = 1;\n\n\t\t\t// handle case if texture exceeds max size\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t}\n\n\t\t\t// only perform resize if necessary\n\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t\t// only perform resize for certain image types\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\t\tvar floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\t\tif ( _canvas === undefined ) { _canvas = createCanvas( width, height ); }\n\n\t\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\t\treturn canvas;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( isWebGL2 ) { return false; }\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\t}\n\n\t\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\t\tif ( isWebGL2 === false ) { return glFormat; }\n\n\t\t\tif ( internalFormatName !== null ) {\n\n\t\t\t\tif ( _gl[ internalFormatName ] !== undefined ) { return _gl[ internalFormatName ]; }\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t\t}\n\n\t\t\tvar internalFormat = glFormat;\n\n\t\t\tif ( glFormat === 6403 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 33326; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 33325; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 33321; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6407 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34837; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34843; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32849; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6408 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34836; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34842; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32856; }\n\n\t\t\t}\n\n\t\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\t\treturn 9728;\n\n\t\t\t}\n\n\t\t\treturn 9729;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\t_videoTextures.delete( texture );\n\n\t\t\t}\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) { return; }\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) { return; }\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] ); }\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) { _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer ); }\n\t\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer ); }\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tvar textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\n\t\t\ttextureUnits = 0;\n\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\n\t\t\tvar textureUnit = textureUnits;\n\n\t\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) { updateVideoTexture( texture ); }\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture2DArray( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tif ( texture.image.length !== 6 ) { return; }\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tvar mipmaps;\n\n\t\t\t\tif ( isCompressed ) {\n\n\t\t\t\t\tfor ( var i$1 = 0; i$1 < 6; i$1 ++ ) {\n\n\t\t\t\t\t\tmipmaps = cubeImage[ i$1 ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i$1, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$1, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < 6; i$2 ++ ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, 0, glInternalFormat, cubeImage[ i$2 ].width, cubeImage[ i$2 ].height, 0, glFormat, glType, cubeImage[ i$2 ].data );\n\n\t\t\t\t\t\t\tfor ( var j$1 = 0; j$1 < mipmaps.length; j$1 ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap$1 = mipmaps[ j$1 ];\n\t\t\t\t\t\t\t\tvar mipmapImage = mipmap$1.image[ i$2 ].image;\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, j$1 + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, 0, glInternalFormat, glFormat, glType, cubeImage[ i$2 ] );\n\n\t\t\t\t\t\t\tfor ( var j$2 = 0; j$2 < mipmaps.length; j$2 ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap$2 = mipmaps[ j$2 ];\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i$2, j$2 + 1, glInternalFormat, glFormat, glType, mipmap$2.image[ i$2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tvar wrappingToGL = {};\n\t\twrappingToGL[ RepeatWrapping ] = 10497;\n\t\twrappingToGL[ ClampToEdgeWrapping ] = 33071;\n\t\twrappingToGL[ MirroredRepeatWrapping ] = 33648;\n\n\t\tvar filterToGL = {};\n\t\tfilterToGL[ NearestFilter ] = 9728;\n\t\tfilterToGL[ NearestMipmapNearestFilter ] = 9984;\n\t\tfilterToGL[ NearestMipmapLinearFilter ] = 9986;\n\t\tfilterToGL[ LinearFilter ] = 9729;\n\t\tfilterToGL[ LinearMipmapNearestFilter ] = 9985;\n\t\tfilterToGL[ LinearMipmapLinearFilter ] = 9987;\n\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\t\tif ( supportsMips ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) { return; }\n\t\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) { return; }\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initTexture( textureProperties, texture ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tvar textureType = 3553;\n\n\t\t\tif ( texture.isDataTexture2DArray ) { textureType = 35866; }\n\t\t\tif ( texture.isDataTexture3D ) { textureType = 32879; }\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format );\n\n\t\t\tvar glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tvar mipmap;\n\t\t\tvar mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = mipmaps.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i$1 ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i$1, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, i$1, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i$2 = 0, il$2 = mipmaps.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i$2 ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i$2, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\tvar glInternalFormat = 33189;\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples$1 = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples$1, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\tvar glInternalFormat$1 = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples$2 = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples$2, glInternalFormat$1, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat$1, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\t\tif ( isCube ) { throw new Error( 'Depth Texture with cube render targets is not supported' ); }\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) { throw new Error( 'target.depthTexture not supported in Cube render targets' ); }\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t\t}\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < 6; i$1 ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i$1 ], renderTarget, 36064, 34069 + i$1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 34067, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 3553, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar mask = 16384;\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) { mask |= 256; }\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) { mask |= 1024; }\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t\t_videoTextures.set( texture, frame );\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// backwards compatibility\n\n\t\tvar warnedTexture2D = false;\n\t\tvar warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTexture2D = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( texture, slot );\n\n\t\t}\n\n\t\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTextureCube = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\tsetTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === UnsignedByteType ) { return 5121; }\n\t\t\tif ( p === UnsignedShort4444Type ) { return 32819; }\n\t\t\tif ( p === UnsignedShort5551Type ) { return 32820; }\n\t\t\tif ( p === UnsignedShort565Type ) { return 33635; }\n\n\t\t\tif ( p === ByteType ) { return 5120; }\n\t\t\tif ( p === ShortType ) { return 5122; }\n\t\t\tif ( p === UnsignedShortType ) { return 5123; }\n\t\t\tif ( p === IntType ) { return 5124; }\n\t\t\tif ( p === UnsignedIntType ) { return 5125; }\n\t\t\tif ( p === FloatType ) { return 5126; }\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 5131; }\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) { return 6406; }\n\t\t\tif ( p === RGBFormat ) { return 6407; }\n\t\t\tif ( p === RGBAFormat ) { return 6408; }\n\t\t\tif ( p === LuminanceFormat ) { return 6409; }\n\t\t\tif ( p === LuminanceAlphaFormat ) { return 6410; }\n\t\t\tif ( p === DepthFormat ) { return 6402; }\n\t\t\tif ( p === DepthStencilFormat ) { return 34041; }\n\t\t\tif ( p === RedFormat ) { return 6403; }\n\n\t\t\t// WebGL2 formats.\n\n\t\t\tif ( p === RedIntegerFormat ) { return 36244; }\n\t\t\tif ( p === RGFormat ) { return 33319; }\n\t\t\tif ( p === RGIntegerFormat ) { return 33320; }\n\t\t\tif ( p === RGBIntegerFormat ) { return 36248; }\n\t\t\tif ( p === RGBAIntegerFormat ) { return 36249; }\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGB_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_ETC2_Format ) { return extension.COMPRESSED_RGB8_ETC2; }\n\t\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) { return extension.COMPRESSED_RGBA8_ETC2_EAC; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 34042; }\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group,\n\n\t\tisGroup: true\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebXRController() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\n\t}\n\n\tObject.assign( WebXRController.prototype, {\n\n\t\tconstructor: WebXRController,\n\n\t\tgetTargetRaySpace: function () {\n\n\t\t\tif ( this._targetRay === null ) {\n\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\n\t\t},\n\n\t\tgetGripSpace: function () {\n\n\t\t\tif ( this._grip === null ) {\n\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this._grip;\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function ( inputSource ) {\n\n\t\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\t\tvar inputPose = null;\n\t\t\tvar gripPose = null;\n\n\t\t\tvar targetRay = this._targetRay;\n\t\t\tvar grip = this._grip;\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t\t}\n\n\t\t\tif ( grip !== null ) {\n\n\t\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebXRManager( renderer, gl ) {\n\n\t\tvar scope = this;\n\n\t\tvar session = null;\n\n\t\tvar framebufferScaleFactor = 1.0;\n\n\t\tvar referenceSpace = null;\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tvar pose = null;\n\n\t\tvar controllers = [];\n\t\tvar inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tvar cameras = [ cameraL, cameraR ];\n\n\t\tvar cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tvar _currentDepthNear = null;\n\t\tvar _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tvar controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tvar controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tvar controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t//\n\n\t\t\trenderer.setFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tfunction onRequestReferenceSpace( value ) {\n\n\t\t\treferenceSpace = value;\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.isPresenting = true;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t\tvar attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tgl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tvar layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tvar baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t\t//\n\n\t\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction updateInputSources( event ) {\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( var i$1 = 0; i$1 < event.removed.length; i$1 ++ ) {\n\n\t\t\t\tvar inputSource = event.removed[ i$1 ];\n\t\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( var i$2 = 0; i$2 < event.added.length; i$2 ++ ) {\n\n\t\t\t\tvar inputSource$1 = event.added[ i$2 ];\n\t\t\t\tvar controller$1 = inputSourcesMap.get( inputSource$1 );\n\n\t\t\t\tif ( controller$1 ) {\n\n\t\t\t\t\tcontroller$1.dispatchEvent( { type: 'connected', data: inputSource$1 } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar cameraLPos = new Vector3();\n\t\tvar cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * @author jsantell / https://www.jsantell.com/\n\t\t *\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tvar left = near * leftFov;\n\t\t\tvar right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tvar near2 = near + zOffset;\n\t\t\tvar far2 = far + zOffset;\n\t\t\tvar left2 = left - xOffset;\n\t\t\tvar right2 = right + ( ipd - xOffset );\n\t\t\tvar top2 = topFov * far / far2 * near2;\n\t\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i$1 = 0, l = children.length; i$1 < l; i$1 ++ ) {\n\n\t\t\t\tchildren[ i$1 ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tvar views = pose.views;\n\t\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tvar cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tvar view = views[ i ];\n\t\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tvar camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\tfor ( var i$1 = 0; i$1 < controllers.length; i$1 ++ ) {\n\n\t\t\t\tvar controller = controllers[ i$1 ];\n\t\t\t\tvar inputSource = inputSources[ i$1 ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time, frame ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n\tObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLMaterials( properties ) {\n\n\t\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshMaterialUniforms( uniforms, material, environment, pixelRatio, height ) {\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material, environment );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( uniforms, material, environment );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tuniforms.color.value.copy( material.color );\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsCommon( uniforms, material, environment ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tvar envMap = material.envMap || environment;\n\n\t\t\tif ( envMap ) {\n\n\t\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( envMap ).__maxMipLevel;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\t\t\tvar uv2ScaleMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t\t} else if ( material.lightMap ) {\n\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material, environment ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap || environment ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material, environment ) {\n\n\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif ( material.sheen ) { uniforms.sheen.value.copy( material.sheen ); }\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniforms.transparency.value = material.transparency;\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null;\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.outputEncoding = LinearEncoding;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this;\n\n\t\tvar _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tvar _framebuffer = null;\n\n\t\tvar _currentActiveCubeFace = 0;\n\t\tvar _currentActiveMipmapLevel = 0;\n\t\tvar _currentRenderTarget = null;\n\t\tvar _currentFramebuffer = null;\n\t\tvar _currentMaterialId = - 1;\n\n\t\tvar _currentCamera = null;\n\t\tvar _currentArrayCamera = null;\n\n\t\tvar _currentViewport = new Vector4();\n\t\tvar _currentScissor = new Vector4();\n\t\tvar _currentScissorTest = null;\n\n\t\t//\n\n\t\tvar _width = _canvas.width;\n\t\tvar _height = _canvas.height;\n\n\t\tvar _pixelRatio = 1;\n\t\tvar _opaqueSort = null;\n\t\tvar _transparentSort = null;\n\n\t\tvar _viewport = new Vector4( 0, 0, _width, _height );\n\t\tvar _scissor = new Vector4( 0, 0, _width, _height );\n\t\tvar _scissorTest = false;\n\n\t\t// frustum\n\n\t\tvar _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tvar _clipping = new WebGLClipping();\n\t\tvar _clippingEnabled = false;\n\t\tvar _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tvar _projScreenMatrix = new Matrix4();\n\n\t\tvar _vector3 = new Vector3();\n\n\t\tvar _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl = _context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( var i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tvar contextName = contextNames[ i ];\n\t\t\t\tvar context = _canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) { return context; }\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t};\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tvar contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, attributes, geometries, objects;\n\t\tvar programCache, materials, renderLists, renderStates;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tvar utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, bindingStates );\n\t\t\tmaterials = new WebGLMaterials( properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates();\n\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tvar xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.loseContext(); }\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.restoreContext(); }\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) { return; }\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\t\ttarget = new Vector4();\n\n\t\t\t}\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn background.getClearColor();\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) { bits |= 16384; }\n\t\t\tif ( depth === undefined || depth ) { bits |= 256; }\n\t\t\tif ( stencil === undefined || stencil ) { bits |= 1024; }\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\t\tbindingStates.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) { buffers.position = _gl.createBuffer(); }\n\t\t\tif ( object.hasNormals && ! buffers.normal ) { buffers.normal = _gl.createBuffer(); }\n\t\t\tif ( object.hasUvs && ! buffers.uv ) { buffers.uv = _gl.createBuffer(); }\n\t\t\tif ( object.hasColors && ! buffers.color ) { buffers.color = _gl.createBuffer(); }\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) { scene = _emptyScene; } // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tif ( index === null ) {\n\n\t\t\t\tif ( position === undefined || position.count === 0 ) { return; }\n\n\t\t\t} else if ( index.count === 0 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t}\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) { return; }\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) { lineWidth = 1; } // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( 0 );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tvar instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tvar compiled = new WeakMap();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tvar material2 = material[ i ];\n\n\t\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( xr.isPresenting ) { return; }\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof window !== 'undefined' ) { animation.setContext( window ); }\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tvar renderTarget, forceClear;\n\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t\t}\n\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\t\tforceClear = arguments[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) { return; }\n\n\t\t\t// reset caching for this frame\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) { scene.updateMatrixWorld(); }\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) { camera.updateMatrixWorld(); }\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tcamera = xr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) { scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget ); }\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled === true ) { _clipping.beginShadows(); }\n\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tif ( _clippingEnabled === true ) { _clipping.endShadows(); }\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) { this.info.reset(); }\n\n\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( opaqueObjects.length > 0 ) { renderObjects( opaqueObjects, scene, camera ); }\n\t\t\tif ( transparentObjects.length > 0 ) { renderObjects( transparentObjects, scene, camera ); }\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) { scene.onAfterRender( _this, scene, camera ); }\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\t// _gl.finish();\n\n\t\t\tcurrentRenderList = null;\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) { object.update( camera ); }\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry$1 = objects.update( object );\n\t\t\t\t\t\tvar material$1 = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material$1 ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry$1.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material$1[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry$1, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material$1.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry$1, material$1, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i$1 = 0, l$1 = children.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tprojectObject( children[ i$1 ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tvar overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tbindingStates.reset();\n\n\t\t\t\trenderObjectImmediate( object, program );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t}\n\n\t\tfunction initMaterial( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) { scene = _emptyScene; } // scene could be a Mesh, Line, Points, ...\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tvar lightsStateVersion = lights.state.version;\n\n\t\t\tvar parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\t\tvar programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\t\tprogramChange = false;\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i$1 = 0; i$1 < _this.maxMorphNormals; i$1 ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i$1 ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) { scene = _emptyScene; } // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tvar encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\n\t\t\tvar materialProperties = properties.get( material );\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, environment, _pixelRatio, _height );\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) { m_uniforms.ltc_1.value = UniformsLib.LTC_1; }\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) { m_uniforms.ltc_2.value = UniformsLib.LTC_2; }\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\t//\n\t\tthis.setFramebuffer = function ( value ) {\n\n\t\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) { _gl.bindFramebuffer( 36160, value ); }\n\n\t\t\t_framebuffer = value;\n\n\t\t};\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar _webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = _webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = _webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar levelScale = Math.pow( 2, - level );\n\t\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\t\tvar glFormat = utils.convert( texture.format );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) { _gl.generateMipmap( 3553 ); }\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGL1Renderer( parameters ) {\n\n\t\tWebGLRenderer.call( this, parameters );\n\n\t}\n\n\tWebGL1Renderer.prototype = Object.assign( Object.create( WebGLRenderer.prototype ), {\n\n\t\tconstructor: WebGL1Renderer,\n\n\t\tisWebGL1Renderer: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tObject.assign( FogExp2.prototype, {\n\n\t\tisFogExp2: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new FogExp2( this.color, this.density );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tObject.assign( Fog.prototype, {\n\n\t\tisFog: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new Fog( this.color, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t\t}\n\n\t\t\tvar array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\t\tvar ib = new InterleavedBuffer( array, this.stride );\n\t\t\tib.setUsage( this.usage );\n\n\t\t\treturn ib;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\t// generate UUID for array buffer if necessary\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tvar _vector$6 = new Vector3();\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tfor ( var i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$6.x = this.getX( i );\n\t\t\t\t_vector$6.y = this.getY( i );\n\t\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( var j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( var j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\t// save as true interlaved attribtue\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _geometry;\n\n\tvar _intersectPoint = new Vector3();\n\tvar _worldScale = new Vector3();\n\tvar _mvPosition = new Vector3();\n\n\tvar _alignedPosition = new Vector2();\n\tvar _rotatedPosition = new Vector2();\n\tvar _viewWorldMatrix = new Matrix4();\n\n\tvar _vA$1 = new Vector3();\n\tvar _vB$1 = new Vector3();\n\tvar _vC$1 = new Vector3();\n\n\tvar _uvA$1 = new Vector2();\n\tvar _uvB$1 = new Vector2();\n\tvar _uvC$1 = new Vector2();\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tvar float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t\t_uvA$1.set( 0, 0 );\n\t\t\t_uvB$1.set( 1, 0 );\n\t\t\t_uvC$1.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.center !== undefined ) { this.center.copy( source.center ); }\n\n\t\t\tthis.material = source.material;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t// to check if rotation is not zero\n\t\tif ( sin !== undefined ) {\n\n\t\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t\t} else {\n\n\t\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t\t}\n\n\n\t\tvertexPosition.copy( mvPosition );\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y;\n\n\t\t// transform to world space\n\t\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v1$4 = new Vector3();\n\tvar _v2$2 = new Vector3();\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tisLOD: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) { distance = 0; }\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tvar l;\n\n\t\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCurrentLevel: function () {\n\n\t\t\treturn this._currentLevel;\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn levels[ i - 1 ].object;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.autoUpdate === false ) { data.object.autoUpdate = false; }\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tMesh.prototype.copy.call( this, source );\n\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\t\tthis.skeleton = source.skeleton;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar vector = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\t\tvector.x = skinWeight.getX( i );\n\t\t\t\tvector.y = skinWeight.getY( i );\n\t\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tboneTransform: ( function () {\n\n\t\t\tvar basePosition = new Vector3();\n\n\t\t\tvar skinIndex = new Vector4();\n\t\t\tvar skinWeight = new Vector4();\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function ( index, target ) {\n\n\t\t\t\tvar skeleton = this.skeleton;\n\t\t\t\tvar geometry = this.geometry;\n\n\t\t\t\tskinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t\t\tskinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t\t\tbasePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\t\t\ttarget.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\tvar weight = skinWeight.getComponent( i );\n\n\t\t\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\t\t\tvar boneIndex = skinIndex.getComponent( i );\n\n\t\t\t\t\t\tmatrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\t\t\ttarget.addScaledVector( vector.copy( basePosition ).applyMatrix4( matrix ), weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t\t\t};\n\n\t\t}() )\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tvar _offsetMatrix = new Matrix4();\n\tvar _identityMatrix = new Matrix4();\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\tthis.frame = - 1;\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var i$1 = 0, il$1 = this.bones.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\tvar bone$1 = this.bones[ i$1 ];\n\n\t\t\t\tif ( bone$1 ) {\n\n\t\t\t\t\tif ( bone$1.parent && bone$1.parent.isBone ) {\n\n\t\t\t\t\t\tbone$1.matrix.getInverse( bone$1.parent.matrixWorld );\n\t\t\t\t\t\tbone$1.matrix.multiply( bone$1.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone$1.matrix.copy( bone$1.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone$1.matrix.decompose( bone$1.position, bone$1.quaternion, bone$1.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t},\n\n\t\tgetBoneByName: function ( name ) {\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tdispose: function ( ) {\n\n\t\t\tif ( this.boneTexture ) {\n\n\t\t\t\tthis.boneTexture.dispose();\n\n\t\t\t\tthis.boneTexture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _instanceLocalMatrix = new Matrix4();\n\tvar _instanceWorldMatrix = new Matrix4();\n\n\tvar _instanceIntersects = [];\n\n\tvar _mesh = new Mesh();\n\n\tfunction InstancedMesh( geometry, material, count ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: InstancedMesh,\n\n\t\tisInstancedMesh: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tMesh.prototype.copy.call( this, source );\n\n\t\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\t\t\tthis.count = source.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar raycastTimes = this.count;\n\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\n\t\t\tif ( _mesh.material === undefined ) { return; }\n\n\t\t\tfor ( var instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t\t// calculate the world matrix for each instance\n\n\t\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t\t// the mesh represents this single instance\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t\t// process the result of raycast\n\n\t\t\t\tfor ( var i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar intersect = _instanceIntersects[ i ];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start = new Vector3();\n\tvar _end = new Vector3();\n\tvar _inverseMatrix$1 = new Matrix4();\n\tvar _ray$1 = new Ray();\n\tvar _sphere$2 = new Sphere();\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances$1 = geometry.lineDistances;\n\n\t\t\t\tlineDistances$1[ 0 ] = 0;\n\n\t\t\t\tfor ( var i$1 = 1, l$1 = vertices.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\t\tlineDistances$1[ i$1 ] = lineDistances$1[ i$1 - 1 ];\n\t\t\t\t\tlineDistances$1[ i$1 ] += vertices[ i$1 - 1 ].distanceTo( vertices[ i$1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Line.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t\t_sphere$2.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localThresholdSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$1 = 0, l$1 = positions.length / 3 - 1; i$1 < l$1; i$1 += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i$1 );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i$1 + 3 );\n\n\t\t\t\t\t\tvar distSq$1 = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq$1 > localThresholdSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance$1 = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance$1 < raycaster.near || distance$1 > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance$1,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i$1,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i$2 = 0; i$2 < nbVertices - 1; i$2 += step ) {\n\n\t\t\t\t\tvar distSq$2 = _ray$1.distanceSqToSegment( vertices[ i$2 ], vertices[ i$2 + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq$2 > localThresholdSq ) { continue; }\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance$2 = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance$2 < raycaster.near || distance$2 > raycaster.far ) { continue; }\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance$2,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i$2,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start$1 = new Vector3();\n\tvar _end$1 = new Vector3();\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances$1 = geometry.lineDistances;\n\n\t\t\t\tfor ( var i$1 = 0, l$1 = vertices.length; i$1 < l$1; i$1 += 2 ) {\n\n\t\t\t\t\t_start$1.copy( vertices[ i$1 ] );\n\t\t\t\t\t_end$1.copy( vertices[ i$1 + 1 ] );\n\n\t\t\t\t\tlineDistances$1[ i$1 ] = ( i$1 === 0 ) ? 0 : lineDistances$1[ i$1 - 1 ];\n\t\t\t\t\tlineDistances$1[ i$1 + 1 ] = lineDistances$1[ i$1 ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _inverseMatrix$2 = new Matrix4();\n\tvar _ray$2 = new Ray();\n\tvar _sphere$3 = new Sphere();\n\tvar _position$1 = new Vector3();\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial();\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t\t_sphere$3.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i$1 = 0, l = positions.length / 3; i$1 < l; i$1 ++ ) {\n\n\t\t\t\t\t\t_position$1.fromArray( positions, i$1 * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, i$1, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i$2 = 0, l$1 = vertices.length; i$2 < l$1; i$2 ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i$2 ], i$2, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( var m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tvar name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\t\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\t\tconstructor: VideoTexture,\n\n\t\tisVideoTexture: true,\n\n\t\tupdate: function () {\n\n\t\t\tvar video = this.image;\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) { type = UnsignedShortType; }\n\t\tif ( type === undefined && format === DepthStencilFormat ) { type = UnsignedInt248Type; }\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar edge = [ 0, 0 ], edges = {};\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tvar edge1 = face[ keys[ j ] ];\n\t\t\t\t\tvar edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tvar key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( var key$1 in edges ) {\n\n\t\t\t\tvar e = edges[ key$1 ];\n\n\t\t\t\tvar vertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar vertex$1 = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar indices = geometry.index;\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i$1 = start, l$1 = ( start + count ); i$1 < l$1; i$1 += 3 ) {\n\n\t\t\t\t\t\tfor ( var j$1 = 0; j$1 < 3; j$1 ++ ) {\n\n\t\t\t\t\t\t\tvar edge1$1 = indices.getX( i$1 + j$1 );\n\t\t\t\t\t\t\tvar edge2$1 = indices.getX( i$1 + ( j$1 + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1$1, edge2$1 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1$1, edge2$1 );\n\n\t\t\t\t\t\t\tvar key$2 = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key$2 ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key$2 ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( var key$3 in edges ) {\n\n\t\t\t\t\tvar e$1 = edges[ key$3 ];\n\n\t\t\t\t\tvertex$1.fromBufferAttribute( position, e$1.index1 );\n\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\tvertex$1.fromBufferAttribute( position, e$1.index2 );\n\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar position$1 = geometry.attributes.position;\n\n\t\t\t\tfor ( var i$2 = 0, l$2 = ( position$1.count / 3 ); i$2 < l$2; i$2 ++ ) {\n\n\t\t\t\t\tfor ( var j$2 = 0; j$2 < 3; j$2 ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tvar index1 = 3 * i$2 + j$2;\n\t\t\t\t\t\tvertex$1.fromBufferAttribute( position$1, index1 );\n\t\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\t\tvar index2 = 3 * i$2 + ( ( j$2 + 1 ) % 3 );\n\t\t\t\t\t\tvertex$1.fromBufferAttribute( position$1, index2 );\n\t\t\t\t\t\tvertices.push( vertex$1.x, vertex$1.y, vertex$1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( var i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( var j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var i$1 = 0; i$1 < stacks; i$1 ++ ) {\n\n\t\t\tfor ( var j$1 = 0; j$1 < slices; j$1 ++ ) {\n\n\t\t\t\tvar a = i$1 * sliceCount + j$1;\n\t\t\t\tvar b = i$1 * sliceCount + j$1 + 1;\n\t\t\t\tvar c = ( i$1 + 1 ) * sliceCount + j$1 + 1;\n\t\t\t\tvar d = ( i$1 + 1 ) * sliceCount + j$1;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( var i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( var i$1 = 0; i$1 < cols; i$1 ++ ) {\n\n\t\t\t\tfor ( var j$1 = 0; j$1 < 2 * ( cols - i$1 ) - 1; j$1 ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j$1 / 2 );\n\n\t\t\t\t\tif ( j$1 % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i$1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i$1 + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) { uvBuffer[ i + 0 ] += 1; }\n\t\t\t\t\tif ( x1 < 0.2 ) { uvBuffer[ i + 2 ] += 1; }\n\t\t\t\t\tif ( x2 < 0.2 ) { uvBuffer[ i + 4 ] += 1; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) { console.warn( 'THREE.TubeGeometry: taper has been removed.' ); }\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar P = new Vector3();\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( var i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin = Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( var j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( var i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\tTubeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) { console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' ); }\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( var j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var j$1 = 1; j$1 <= tubularSegments; j$1 ++ ) {\n\n\t\t\tfor ( var i$1 = 1; i$1 <= radialSegments; i$1 ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j$1 - 1 ) + ( i$1 - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j$1 + ( i$1 - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j$1 + i$1;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j$1 - 1 ) + i$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( var j$1 = 1; j$1 <= radialSegments; j$1 ++ ) {\n\n\t\t\tfor ( var i$1 = 1; i$1 <= tubularSegments; i$1 ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j$1 + i$1 - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j$1 - 1 ) + i$1 - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j$1 - 1 ) + i$1;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j$1 + i$1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\n\tvar Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\t\tdim = dim || 2;\n\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\t\ttriangles = [];\n\n\t\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) { return triangles; }\n\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\t\tif ( y > maxY ) { maxY = y; }\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tvar i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) { return start; }\n\t\tif ( ! end ) { end = start; }\n\n\t\tvar p = start,\n\t\t\tagain;\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) { break; }\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) { return; }\n\n\t\t// interlink polygon nodes in z-order\n\t\tif ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\n\n\t\tvar stop = ear,\n\t\t\tprev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim );\n\t\t\t\ttriangles.push( ear.i / dim );\n\t\t\t\ttriangles.push( next.i / dim );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\tfunction isEar( ear ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tvar p = ear.next.next;\n\n\t\twhile ( p !== ear.prev ) {\n\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t\t// z-order range for the current triangle bbox;\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t\tvar p = ear.prevZ,\n\t\t\tn = ear.nextZ;\n\n\t\t// look for points inside the triangle in both directions\n\t\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\t// look for remaining points in decreasing z-order\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\t// look for remaining points in increasing z-order\n\t\twhile ( n && n.z <= maxZ ) {\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tvar a = p.prev,\n\t\t\t\tb = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim );\n\t\t\t\ttriangles.push( p.i / dim );\n\t\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t\t// remove two nodes involved\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn filterPoints( p );\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tvar a = start;\n\t\tdo {\n\n\t\t\tvar b = a.next.next;\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tvar queue = [],\n\t\t\ti, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) { list.steiner = true; }\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\teliminateHole( queue[ i ], outerNode );\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\touterNode = findHoleBridge( hole, outerNode );\n\t\tif ( outerNode ) {\n\n\t\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\t\t// filter collinear points around the cuts\n\t\t\tfilterPoints( outerNode, outerNode.next );\n\t\t\tfilterPoints( b, b.next );\n\n\t\t}\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tvar p = outerNode,\n\t\t\thx = hole.x,\n\t\t\thy = hole.y,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\t\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\t\tif ( hy === p.y ) { return p; }\n\t\t\t\t\t\tif ( hy === p.next.y ) { return p.next; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) { return null; }\n\n\t\tif ( hx === qx ) { return m; } // hole touches outer segment; pick leftmost endpoint\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y,\n\t\t\ttanMin = Infinity,\n\t\t\ttan;\n\n\t\tp = m;\n\n\t\tdo {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== stop );\n\n\t\treturn m;\n\n\t}\n\n\t// whether sector in vertex m contains sector in vertex p in the same coordinates\n\tfunction sectorContainsSector( m, p ) {\n\n\t\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tif ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\tfunction sortLinked( list ) {\n\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t\tinSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) { break; }\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) { tail.nextZ = e; }\n\t\t\t\t\telse { list = e; }\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * ( x - minX ) * invSize;\n\t\ty = 32767 * ( y - minY ) * invSize;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\tfunction getLeftmost( start ) {\n\n\t\tvar p = start,\n\t\t\tleftmost = start;\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) { leftmost = p; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n\t}\n\n\t// signed area of a triangle\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tvar o1 = sign( area( p1, q1, p2 ) );\n\t\tvar o2 = sign( area( p1, q1, q2 ) );\n\t\tvar o3 = sign( area( p2, q2, p1 ) );\n\t\tvar o4 = sign( area( p2, q2, q1 ) );\n\n\t\tif ( o1 !== o2 && o3 !== o4 ) { return true; } // general case\n\n\t\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) { return true; } // p1, q1 and p2 are collinear and p2 lies on p1q1\n\t\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) { return true; } // p1, q1 and q2 are collinear and q2 lies on p1q1\n\t\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) { return true; } // p2, q2 and p1 are collinear and p1 lies on p2q2\n\t\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) { return true; } // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\n\t}\n\n\t// for collinear points p, q, r, check if point q lies on segment pr\n\tfunction onSegment( p, q, r ) {\n\n\t\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n\t}\n\n\tfunction sign( num ) {\n\n\t\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tvar p = a;\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\tintersects( p, p.next, a, b ) ) { return true; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\tfunction middleInside( a, b ) {\n\n\t\tvar p = a,\n\t\t\tinside = false,\n\t\t\tpx = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t\t{ inside = ! inside; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\tfunction splitPolygon( a, b ) {\n\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tvar p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\n\t\tif ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertex index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertex nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = null;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tvar sum = 0;\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tvar holeIndices = []; // array of hole indices\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tvar holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( var i$1 = 0; i$1 < triangles.length; i$1 += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i$1, i$1 + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t};\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tvar l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float>, // how far from shape outline does bevel start\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tvar scope = this;\n\n\t\tvar verticesArray = [];\n\t\tvar uvArray = [];\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar placeholder = [];\n\n\t\t\t// options\n\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tvar extrudePath = options.extrudePath;\n\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tvar ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( var h$1 = 0, hl$1 = holes.length; h$1 < hl$1; h$1 ++ ) {\n\n\t\t\t\tvar ahole$1 = holes[ h$1 ];\n\n\t\t\t\tvertices = vertices.concat( ahole$1 );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) { console.error( \"THREE.ExtrudeGeometry: vec does not exist\" ); }\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tvar vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tvar contourMovements = [];\n\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) { j = 0; }\n\t\t\t\tif ( k === il ) { k = 0; }\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tvar holesMovements = [];\n\t\t\tvar oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( var h$2 = 0, hl$2 = holes.length; h$2 < hl$2; h$2 ++ ) {\n\n\t\t\t\tvar ahole$2 = holes[ h$2 ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( var i$1 = 0, il$1 = ahole$2.length, j$1 = il$1 - 1, k$1 = i$1 + 1; i$1 < il$1; i$1 ++, j$1 ++, k$1 ++ ) {\n\n\t\t\t\t\tif ( j$1 === il$1 ) { j$1 = 0; }\n\t\t\t\t\tif ( k$1 === il$1 ) { k$1 = 0; }\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i$1 ] = getBevelVec( ahole$2[ i$1 ], ahole$2[ j$1 ], ahole$2[ k$1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( var b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tvar t = b / bevelSegments;\n\t\t\t\tvar z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tvar bs$1 = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( var i$2 = 0, il$2 = contour.length; i$2 < il$2; i$2 ++ ) {\n\n\t\t\t\t\tvar vert = scalePt2( contour[ i$2 ], contourMovements[ i$2 ], bs$1 );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( var h$3 = 0, hl$3 = holes.length; h$3 < hl$3; h$3 ++ ) {\n\n\t\t\t\t\tvar ahole$3 = holes[ h$3 ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h$3 ];\n\n\t\t\t\t\tfor ( var i$3 = 0, il$3 = ahole$3.length; i$3 < il$3; i$3 ++ ) {\n\n\t\t\t\t\t\tvar vert$1 = scalePt2( ahole$3[ i$3 ], oneHoleMovements[ i$3 ], bs$1 );\n\n\t\t\t\t\t\tv( vert$1.x, vert$1.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( var i$4 = 0; i$4 < vlen; i$4 ++ ) {\n\n\t\t\t\tvar vert$2 = bevelEnabled ? scalePt2( vertices[ i$4 ], verticesMovements[ i$4 ], bs ) : vertices[ i$4 ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert$2.x, vert$2.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert$2.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert$2.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( var s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( var i$5 = 0; i$5 < vlen; i$5 ++ ) {\n\n\t\t\t\t\tvar vert$3 = bevelEnabled ? scalePt2( vertices[ i$5 ], verticesMovements[ i$5 ], bs ) : vertices[ i$5 ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert$3.x, vert$3.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert$3.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert$3.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( var b$1 = bevelSegments - 1; b$1 >= 0; b$1 -- ) {\n\n\t\t\t\tvar t$1 = b$1 / bevelSegments;\n\t\t\t\tvar z$1 = bevelThickness * Math.cos( t$1 * Math.PI / 2 );\n\t\t\t\tvar bs$2 = bevelSize * Math.sin( t$1 * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( var i$6 = 0, il$4 = contour.length; i$6 < il$4; i$6 ++ ) {\n\n\t\t\t\t\tvar vert$4 = scalePt2( contour[ i$6 ], contourMovements[ i$6 ], bs$2 );\n\t\t\t\t\tv( vert$4.x, vert$4.y, depth + z$1 );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( var h$4 = 0, hl$4 = holes.length; h$4 < hl$4; h$4 ++ ) {\n\n\t\t\t\t\tvar ahole$4 = holes[ h$4 ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h$4 ];\n\n\t\t\t\t\tfor ( var i$7 = 0, il$5 = ahole$4.length; i$7 < il$5; i$7 ++ ) {\n\n\t\t\t\t\t\tvar vert$5 = scalePt2( ahole$4[ i$7 ], oneHoleMovements[ i$7 ], bs$2 );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert$5.x, vert$5.y, depth + z$1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert$5.x, vert$5.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z$1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( var i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( var i$1 = 0; i$1 < flen; i$1 ++ ) {\n\n\t\t\t\t\t\tvar face$1 = faces[ i$1 ];\n\t\t\t\t\t\tf3( face$1[ 0 ] + offset, face$1[ 1 ] + offset, face$1[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( var i$2 = 0; i$2 < flen; i$2 ++ ) {\n\n\t\t\t\t\t\tvar face$2 = faces[ i$2 ];\n\t\t\t\t\t\tf3( face$2[ 2 ], face$2[ 1 ], face$2[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( var i$3 = 0; i$3 < flen; i$3 ++ ) {\n\n\t\t\t\t\t\tvar face$3 = faces[ i$3 ];\n\t\t\t\t\t\tf3( face$3[ 0 ] + vlen * steps, face$3[ 1 ] + vlen * steps, face$3[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tvar ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tvar i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tvar j = i;\n\t\t\t\t\tvar k = i - 1;\n\t\t\t\t\tif ( k < 0 ) { k = contour.length - 1; }\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( var s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t//\n\n\tvar WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\tfunction toJSON( shapes, options, data ) {\n\n\t\t//\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( options.extrudePath !== undefined ) { data.options.extrudePath = options.extrudePath.toJSON(); }\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) { parameters.bevelThickness = 10; }\n\t\tif ( parameters.bevelSize === undefined ) { parameters.bevelSize = 8; }\n\t\tif ( parameters.bevelEnabled === undefined ) { parameters.bevelEnabled = false; }\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tvar uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( var ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var iy$1 = 0; iy$1 < heightSegments; iy$1 ++ ) {\n\n\t\t\tfor ( var ix$1 = 0; ix$1 < widthSegments; ix$1 ++ ) {\n\n\t\t\t\tvar a = grid[ iy$1 ][ ix$1 + 1 ];\n\t\t\t\tvar b = grid[ iy$1 ][ ix$1 ];\n\t\t\t\tvar c = grid[ iy$1 + 1 ][ ix$1 ];\n\t\t\t\tvar d = grid[ iy$1 + 1 ][ ix$1 + 1 ];\n\n\t\t\t\tif ( iy$1 !== 0 || thetaStart > 0 ) { indices.push( a, b, d ); }\n\t\t\t\tif ( iy$1 !== heightSegments - 1 || thetaEnd < Math.PI ) { indices.push( b, c, d ); }\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 0.5;\n\t\touterRadius = outerRadius || 1;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( var i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tvar segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var j$1 = 0; j$1 < phiSegments; j$1 ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j$1 * ( thetaSegments + 1 );\n\n\t\t\tfor ( var i$1 = 0; i$1 < thetaSegments; i$1 ++ ) {\n\n\t\t\t\tvar segment$1 = i$1 + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment$1;\n\t\t\t\tvar b = segment$1 + thetaSegments + 1;\n\t\t\t\tvar c = segment$1 + thetaSegments + 2;\n\t\t\t\tvar d = segment$1 + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( var i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( var j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var i$1 = 0; i$1 < segments; i$1 ++ ) {\n\n\t\t\tfor ( var j$1 = 0; j$1 < ( points.length - 1 ); j$1 ++ ) {\n\n\t\t\t\tvar base = j$1 + i$1 * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tvar base$1 = segments * points.length * 3;\n\n\t\t\tfor ( var i$2 = 0, j$2 = 0; i$2 < points.length; i$2 ++, j$2 += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j$2 + 0 ];\n\t\t\t\tn1.y = normals[ j$2 + 1 ];\n\t\t\t\tn1.z = normals[ j$2 + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base$1 + j$2 + 0 ];\n\t\t\t\tn2.y = normals[ base$1 + j$2 + 1 ];\n\t\t\t\tn2.z = normals[ base$1 + j$2 + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j$2 + 0 ] = normals[ base$1 + j$2 + 0 ] = n.x;\n\t\t\t\tnormals[ j$2 + 1 ] = normals[ base$1 + j$2 + 1 ] = n.y;\n\t\t\t\tnormals[ j$2 + 2 ] = normals[ base$1 + j$2 + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\tShapeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tvar shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( var i$1 = 0, l$1 = shapeHoles.length; i$1 < l$1; i$1 ++ ) {\n\n\t\t\t\tvar shapeHole$1 = shapeHoles[ i$1 ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole$1 );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( var i$2 = 0, l$2 = shapeVertices.length; i$2 < l$2; i$2 ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i$2 ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( var i$3 = 0, l$3 = faces.length; i$3 < l$3; i$3 ++ ) {\n\n\t\t\t\tvar face = faces[ i$3 ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\tShapeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t//\n\n\tfunction toJSON$1( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {};\n\t\tvar edge1, edge2, key;\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\t\theight = height || 1;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) { generateCap( true ); }\n\t\t\tif ( radiusBottom > 0 ) { generateCap( false ); }\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( var x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( var x$1 = 0; x$1 < radialSegments; x$1 ++ ) {\n\n\t\t\t\tfor ( var y$1 = 0; y$1 < heightSegments; y$1 ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y$1 ][ x$1 ];\n\t\t\t\t\tvar b = indexArray[ y$1 + 1 ][ x$1 ];\n\t\t\t\t\tvar c = indexArray[ y$1 + 1 ][ x$1 + 1 ];\n\t\t\t\t\tvar d = indexArray[ y$1 ][ x$1 + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( var x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( var x$1 = 0; x$1 <= radialSegments; x$1 ++ ) {\n\n\t\t\t\tvar u = x$1 / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( var x$2 = 0; x$2 < radialSegments; x$2 ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x$2;\n\t\t\t\tvar i = centerIndexEnd + x$2;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( var s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( var i$1 = 1; i$1 <= segments; i$1 ++ ) {\n\n\t\t\tindices.push( i$1, i$1 + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  clearcoat: <float>,\n\t *  clearcoatMap: new THREE.Texture( <Image> ),\n\t *  clearcoatRoughness: <float>,\n\t *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *  clearcoatNormalScale: <Vector2>,\n\t *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *  reflectivity: <float>,\n\t *\n\t *  sheen: <Color>,\n\t *\n\t *  transparency: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transparency = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transparency = source.transparency;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.MultiplyOperation,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *  gradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( Material.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) { return array; }\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) { result[ i ] = i; }\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) { return; } // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) { return; } // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t},\n\n\t\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\t\tfps = fps || 30;\n\n\t\t\tvar clip = sourceClip.clone();\n\n\t\t\tclip.name = name;\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\tvar track = clip.tracks[ i ];\n\t\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\t\tif ( frame < startFrame || frame >= endFrame ) { continue; }\n\n\t\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( times.length === 0 ) { continue; }\n\n\t\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\t\ttracks.push( track );\n\n\t\t\t}\n\n\t\t\tclip.tracks = tracks;\n\n\t\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tvar minStartTime = Infinity;\n\n\t\t\tfor ( var i$1 = 0; i$1 < clip.tracks.length; ++ i$1 ) {\n\n\t\t\t\tif ( minStartTime > clip.tracks[ i$1 ].times[ 0 ] ) {\n\n\t\t\t\t\tminStartTime = clip.tracks[ i$1 ].times[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// shift all tracks such that clip begins at t=0\n\n\t\t\tfor ( var i$2 = 0; i$2 < clip.tracks.length; ++ i$2 ) {\n\n\t\t\t\tclip.tracks[ i$2 ].shift( - 1 * minStartTime );\n\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\n\t\t\treturn clip;\n\n\t\t},\n\n\t\tmakeClipAdditive: function ( targetClip, referenceFrame, referenceClip, fps ) {\n\n\t\t\tif ( referenceFrame === undefined ) { referenceFrame = 0; }\n\t\t\tif ( referenceClip === undefined ) { referenceClip = targetClip; }\n\t\t\tif ( fps === undefined || fps <= 0 ) { fps = 30; }\n\n\t\t\tvar numTracks = targetClip.tracks.length;\n\t\t\tvar referenceTime = referenceFrame / fps;\n\n\t\t\t// Make each track's values relative to the values at the reference frame\n\t\t\tvar loop = function ( i ) {\n\n\t\t\t\tvar referenceTrack = referenceClip.tracks[ i ];\n\t\t\t\tvar referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t\t// Skip this track if it's non-numeric\n\t\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) { return; }\n\n\t\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\t\tvar targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t\t} );\n\n\t\t\t\tif ( targetTrack === undefined ) { return; }\n\n\t\t\t\tvar valueSize = referenceTrack.getValueSize();\n\t\t\t\tvar lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tvar referenceValue = (void 0);\n\n\t\t\t\t// Find the value to subtract out of the track\n\t\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, 0, referenceTrack.valueSize );\n\n\t\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tvar startIndex = lastIndex * valueSize;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tvar interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\t\treferenceValue = interpolant.resultBuffer;\n\n\t\t\t\t}\n\n\t\t\t\t// Conjugate the quaternion\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\tvar referenceQuat = new Quaternion(\n\t\t\t\t\t\treferenceValue[ 0 ],\n\t\t\t\t\t\treferenceValue[ 1 ],\n\t\t\t\t\t\treferenceValue[ 2 ],\n\t\t\t\t\t\treferenceValue[ 3 ]\n\t\t\t\t\t).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t\t}\n\n\t\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\t\tvar numTimes = targetTrack.times.length;\n\t\t\t\tfor ( var j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\t\tvar valueStart = j * valueSize;\n\n\t\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\t\tvalueStart\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < numTracks; ++ i ) loop( i );\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\t\treturn targetClip;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function ( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) { break forward_scan; }\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt$1 = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt$1 ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function () {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function ( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t// DECLARE ALIAS AFTER assign prototype\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) { throw new Error( 'THREE.KeyframeTrack: track name is undefined' ); }\n\t\tif ( times === undefined || times.length === 0 ) { throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name ); }\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Static methods\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\ttoJSON: function ( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( KeyframeTrack.prototype, {\n\n\t\tconstructor: KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length;\n\n\t\t\tvar from = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) {\n\n\t\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\t\tfrom = to - 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i$1 = 0, n = values.length; i$1 !== n; ++ i$1 ) {\n\n\t\t\t\t\t\tvar value = values[ i$1 ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i$1, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tvar times = AnimationUtils.arraySlice( this.times ),\n\t\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tvar writeIndex = 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j$1 = 0; j$1 !== stride; ++ j$1 ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j$1 ] = values[ readOffset + j$1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset$1 = lastIndex * stride, writeOffset$1 = writeIndex * stride, j$2 = 0; j$2 !== stride; ++ j$2 ) {\n\n\t\t\t\t\tvalues[ writeOffset$1 + j$2 ] = values[ readOffset$1 + j$2 ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t} else {\n\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\t\tvar TypedKeyframeTrack = this.constructor;\n\t\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\t\treturn track;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrack.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tvar offset = i1 * stride;\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks, blendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\t\tthis.blendMode = ( blendMode !== undefined ) ? blendMode : NormalAnimationBlendMode;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks, json.blendMode );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name$1 in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name$1, animationToMorphTargets[ name$1 ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\tvar fps = animation.fps || 30;\n\t\t\tvar blendMode = animation.blendMode;\n\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) { continue; }\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tvar k = (void 0);\n\n\t\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m$1 = 0; m$1 !== animationKeys[ k ].morphTargets.length; ++ m$1 ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks, blendMode );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks;\n\t\t\tvar duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( this.name, this.duration, tracks, this.blendMode );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\t\tvar handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tvar index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) { regex.lastIndex = 0; } // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tObject.assign( Loader.prototype, {\n\n\t\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\t\tloadAsync: function ( url, onProgress ) {\n\n\t\t\tvar scope = this;\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t\t} );\n\n\t\t},\n\n\t\tparse: function ( /* data */ ) {},\n\n\t\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( path ) {\n\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( resourcePath ) {\n\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( requestHeader ) {\n\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar loading = {};\n\n\tfunction FileLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FileLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\t\t\tvar request;\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\t\t\t\tdata = decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) { data = atob( data ); }\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( response ); }\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) { onError( error ); }\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Initialise array for duplicate requests\n\n\t\t\t\tloading[ url ] = [];\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\trequest = new XMLHttpRequest();\n\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = this.response;\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( this.status === 0 ) { console.warn( 'THREE.FileLoader: HTTP Status 0 received.' ); }\n\n\t\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onLoad ) { callback.onLoad( response ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i$1 = 0, il$1 = callbacks.length; i$1 < il$1; i$1 ++ ) {\n\n\t\t\t\t\t\t\tvar callback$1 = callbacks[ i$1 ];\n\t\t\t\t\t\t\tif ( callback$1.onError ) { callback$1.onError( event ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onProgress ) { callback.onProgress( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) { request.responseType = this.responseType; }\n\t\t\t\tif ( this.withCredentials !== undefined ) { request.withCredentials = this.withCredentials; }\n\n\t\t\t\tif ( request.overrideMimeType ) { request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' ); }\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t */\n\n\tfunction AnimationLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AnimationLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CompressedTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\t{ texture.minFilter = LinearFilter; }\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: DataTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\t\tif ( ! texData ) { return; }\n\n\t\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) { onLoad( texture, texData ); }\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) { onLoad( this ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tif ( onError ) { onError( event ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) { image.crossOrigin = this.crossOrigin; }\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CubeTextureLoader,\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: TextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = this.arcLengthDivisions; }\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( var p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t, optionalTarget ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) { t1 = 0; }\n\t\t\tif ( t2 > 1 ) { t2 = 1; }\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\t\treturn tangent;\n\n\t\t},\n\n\t\tgetTangentAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t, optionalTarget );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( var i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tvar u = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( var i$1 = 1; i$1 <= segments; i$1 ++ ) {\n\n\t\t\t\tnormals[ i$1 ] = normals[ i$1 - 1 ].clone();\n\n\t\t\t\tbinormals[ i$1 ] = binormals[ i$1 - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i$1 - 1 ], tangents[ i$1 ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\tvar theta = Math.acos( MathUtils.clamp( tangents[ i$1 - 1 ].dot( tangents[ i$1 ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i$1 ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i$1 ].crossVectors( tangents[ i$1 ], normals[ i$1 ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\tvar theta$1 = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta$1 /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta$1 = - theta$1;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i$2 = 1; i$2 <= segments; i$2 ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i$2 ].applyMatrix4( mat.makeRotationAxis( tangents[ i$2 ], theta$1 * i$2 ) );\n\t\t\t\t\tbinormals[ i$2 ].crossVectors( tangents[ i$2 ], normals[ i$2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\t\tthis.aClockwise = aClockwise || false;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) { deltaAngle += twoPi; }\n\t\twhile ( deltaAngle > twoPi ) { deltaAngle -= twoPi; }\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t};\n\n\tEllipseCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\n\tEllipseCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points || [];\n\t\tthis.closed = closed || false;\n\t\tthis.curveType = curveType || 'centripetal';\n\t\tthis.tension = tension || 0.5;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) { dt1 = 1.0; }\n\t\t\tif ( dt0 < 1e-4 ) { dt0 = dt1; }\n\t\t\tif ( dt2 < 1e-4 ) { dt2 = dt1; }\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\t\tthis.v3 = v3 || new Vector2();\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\t\tthis.v3 = v3 || new Vector3();\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\t\tvar tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t};\n\n\tLineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points || [];\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar points = this.points;\n\t\tvar p = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar p1 = points[ intPoint ];\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tSplineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tSplineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [];\n\t\t\tvar sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 40; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [];\n\t\t\tvar last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) { continue; } // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurve.prototype.copy.call( this, source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tconstructor: Path,\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape( points ) {\n\n\t\tPath.call( this, points );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tPath.prototype.copy.call( this, source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) { data.object.groundColor = this.groundColor.getHex(); }\n\n\t\t\tif ( this.distance !== undefined ) { data.object.distance = this.distance; }\n\t\t\tif ( this.angle !== undefined ) { data.object.angle = this.angle; }\n\t\t\tif ( this.decay !== undefined ) { data.object.decay = this.decay; }\n\t\t\tif ( this.penumbra !== undefined ) { data.object.penumbra = this.penumbra; }\n\n\t\t\tif ( this.shadow !== undefined ) { data.object.shadow = this.shadow.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\t_projScreenMatrix: new Matrix4(),\n\n\t\t_lightPositionWorld: new Vector3(),\n\n\t\t_lookTarget: new Vector3(),\n\n\t\tgetViewportCount: function () {\n\n\t\t\treturn this._viewportCount;\n\n\t\t},\n\n\t\tgetFrustum: function () {\n\n\t\t\treturn this._frustum;\n\n\t\t},\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar shadowCamera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( lookTarget );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t},\n\n\t\tgetViewport: function ( viewportIndex ) {\n\n\t\t\treturn this._viewports[ viewportIndex ];\n\n\t\t},\n\n\t\tgetFrameExtents: function () {\n\n\t\t\treturn this._frameExtents;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) { object.bias = this.bias; }\n\t\t\tif ( this.normalBias !== 0 ) { object.normalBias = this.normalBias; }\n\t\t\tif ( this.radius !== 1 ) { object.radius = this.radius; }\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) { object.mapSize = this.mapSize.toArray(); }\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = MathUtils.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction PointLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: PointLightShadow,\n\n\t\tisPointLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\t\tif ( viewportIndex === undefined ) { viewportIndex = 0; }\n\n\t\t\tvar camera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tcamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.copy( camera.position );\n\t\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t\tcamera.lookAt( lookTarget );\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = ( left !== undefined ) ? left : - 1;\n\t\tthis.right = ( right !== undefined ) ? right : 1;\n\t\tthis.top = ( top !== undefined ) ? top : 1;\n\t\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow() {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow,\n\n\t\tisDirectionalLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t}\n\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Primary reference:\n\t *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *   https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\n\t// 3-band SH defined by 9 coefficients\n\n\tfunction SphericalHarmonics3() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tObject.assign( SphericalHarmonics3.prototype, {\n\n\t\tisSphericalHarmonics3: true,\n\n\t\tset: function ( coefficients ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tzero: function () {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\tgetAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tadd: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledSH: function ( sh, s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( sh, alpha ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcopy: function ( sh ) {\n\n\t\t\treturn this.set( sh.coefficients );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( SphericalHarmonics3, {\n\n\t\t// evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t// band 0\n\t\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t\t// band 1\n\t\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t\t// band 2\n\t\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * A LightProbe is a source of indirect-diffuse light\n\t */\n\n\tfunction LightProbe( sh, intensity ) {\n\n\t\tLight.call( this, undefined, intensity );\n\n\t\tthis.type = 'LightProbe';\n\n\t\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n\t}\n\n\tLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: LightProbe,\n\n\t\tisLightProbe: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.sh.copy( source.sh );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\t\tthis.sh.fromArray( json.sh );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.sh = this.sh.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: MaterialLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) { material.uuid = json.uuid; }\n\t\t\tif ( json.name !== undefined ) { material.name = json.name; }\n\t\t\tif ( json.color !== undefined ) { material.color.setHex( json.color ); }\n\t\t\tif ( json.roughness !== undefined ) { material.roughness = json.roughness; }\n\t\t\tif ( json.metalness !== undefined ) { material.metalness = json.metalness; }\n\t\t\tif ( json.sheen !== undefined ) { material.sheen = new Color().setHex( json.sheen ); }\n\t\t\tif ( json.emissive !== undefined ) { material.emissive.setHex( json.emissive ); }\n\t\t\tif ( json.specular !== undefined ) { material.specular.setHex( json.specular ); }\n\t\t\tif ( json.shininess !== undefined ) { material.shininess = json.shininess; }\n\t\t\tif ( json.clearcoat !== undefined ) { material.clearcoat = json.clearcoat; }\n\t\t\tif ( json.clearcoatRoughness !== undefined ) { material.clearcoatRoughness = json.clearcoatRoughness; }\n\t\t\tif ( json.fog !== undefined ) { material.fog = json.fog; }\n\t\t\tif ( json.flatShading !== undefined ) { material.flatShading = json.flatShading; }\n\t\t\tif ( json.blending !== undefined ) { material.blending = json.blending; }\n\t\t\tif ( json.combine !== undefined ) { material.combine = json.combine; }\n\t\t\tif ( json.side !== undefined ) { material.side = json.side; }\n\t\t\tif ( json.opacity !== undefined ) { material.opacity = json.opacity; }\n\t\t\tif ( json.transparent !== undefined ) { material.transparent = json.transparent; }\n\t\t\tif ( json.alphaTest !== undefined ) { material.alphaTest = json.alphaTest; }\n\t\t\tif ( json.depthTest !== undefined ) { material.depthTest = json.depthTest; }\n\t\t\tif ( json.depthWrite !== undefined ) { material.depthWrite = json.depthWrite; }\n\t\t\tif ( json.colorWrite !== undefined ) { material.colorWrite = json.colorWrite; }\n\n\t\t\tif ( json.stencilWrite !== undefined ) { material.stencilWrite = json.stencilWrite; }\n\t\t\tif ( json.stencilWriteMask !== undefined ) { material.stencilWriteMask = json.stencilWriteMask; }\n\t\t\tif ( json.stencilFunc !== undefined ) { material.stencilFunc = json.stencilFunc; }\n\t\t\tif ( json.stencilRef !== undefined ) { material.stencilRef = json.stencilRef; }\n\t\t\tif ( json.stencilFuncMask !== undefined ) { material.stencilFuncMask = json.stencilFuncMask; }\n\t\t\tif ( json.stencilFail !== undefined ) { material.stencilFail = json.stencilFail; }\n\t\t\tif ( json.stencilZFail !== undefined ) { material.stencilZFail = json.stencilZFail; }\n\t\t\tif ( json.stencilZPass !== undefined ) { material.stencilZPass = json.stencilZPass; }\n\n\t\t\tif ( json.wireframe !== undefined ) { material.wireframe = json.wireframe; }\n\t\t\tif ( json.wireframeLinewidth !== undefined ) { material.wireframeLinewidth = json.wireframeLinewidth; }\n\t\t\tif ( json.wireframeLinecap !== undefined ) { material.wireframeLinecap = json.wireframeLinecap; }\n\t\t\tif ( json.wireframeLinejoin !== undefined ) { material.wireframeLinejoin = json.wireframeLinejoin; }\n\n\t\t\tif ( json.rotation !== undefined ) { material.rotation = json.rotation; }\n\n\t\t\tif ( json.linewidth !== 1 ) { material.linewidth = json.linewidth; }\n\t\t\tif ( json.dashSize !== undefined ) { material.dashSize = json.dashSize; }\n\t\t\tif ( json.gapSize !== undefined ) { material.gapSize = json.gapSize; }\n\t\t\tif ( json.scale !== undefined ) { material.scale = json.scale; }\n\n\t\t\tif ( json.polygonOffset !== undefined ) { material.polygonOffset = json.polygonOffset; }\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) { material.polygonOffsetFactor = json.polygonOffsetFactor; }\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) { material.polygonOffsetUnits = json.polygonOffsetUnits; }\n\n\t\t\tif ( json.skinning !== undefined ) { material.skinning = json.skinning; }\n\t\t\tif ( json.morphTargets !== undefined ) { material.morphTargets = json.morphTargets; }\n\t\t\tif ( json.morphNormals !== undefined ) { material.morphNormals = json.morphNormals; }\n\t\t\tif ( json.dithering !== undefined ) { material.dithering = json.dithering; }\n\n\t\t\tif ( json.vertexTangents !== undefined ) { material.vertexTangents = json.vertexTangents; }\n\n\t\t\tif ( json.visible !== undefined ) { material.visible = json.visible; }\n\n\t\t\tif ( json.toneMapped !== undefined ) { material.toneMapped = json.toneMapped; }\n\n\t\t\tif ( json.userData !== undefined ) { material.userData = json.userData; }\n\n\t\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) { material.defines = json.defines; }\n\t\t\tif ( json.vertexShader !== undefined ) { material.vertexShader = json.vertexShader; }\n\t\t\tif ( json.fragmentShader !== undefined ) { material.fragmentShader = json.fragmentShader; }\n\n\t\t\tif ( json.extensions !== undefined ) {\n\n\t\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) { material.flatShading = json.shading === 1; } // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) { material.size = json.size; }\n\t\t\tif ( json.sizeAttenuation !== undefined ) { material.sizeAttenuation = json.sizeAttenuation; }\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) { material.map = getTexture( json.map ); }\n\t\t\tif ( json.matcap !== undefined ) { material.matcap = getTexture( json.matcap ); }\n\n\t\t\tif ( json.alphaMap !== undefined ) { material.alphaMap = getTexture( json.alphaMap ); }\n\n\t\t\tif ( json.bumpMap !== undefined ) { material.bumpMap = getTexture( json.bumpMap ); }\n\t\t\tif ( json.bumpScale !== undefined ) { material.bumpScale = json.bumpScale; }\n\n\t\t\tif ( json.normalMap !== undefined ) { material.normalMap = getTexture( json.normalMap ); }\n\t\t\tif ( json.normalMapType !== undefined ) { material.normalMapType = json.normalMapType; }\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) { material.displacementMap = getTexture( json.displacementMap ); }\n\t\t\tif ( json.displacementScale !== undefined ) { material.displacementScale = json.displacementScale; }\n\t\t\tif ( json.displacementBias !== undefined ) { material.displacementBias = json.displacementBias; }\n\n\t\t\tif ( json.roughnessMap !== undefined ) { material.roughnessMap = getTexture( json.roughnessMap ); }\n\t\t\tif ( json.metalnessMap !== undefined ) { material.metalnessMap = getTexture( json.metalnessMap ); }\n\n\t\t\tif ( json.emissiveMap !== undefined ) { material.emissiveMap = getTexture( json.emissiveMap ); }\n\t\t\tif ( json.emissiveIntensity !== undefined ) { material.emissiveIntensity = json.emissiveIntensity; }\n\n\t\t\tif ( json.specularMap !== undefined ) { material.specularMap = getTexture( json.specularMap ); }\n\n\t\t\tif ( json.envMap !== undefined ) { material.envMap = getTexture( json.envMap ); }\n\t\t\tif ( json.envMapIntensity !== undefined ) { material.envMapIntensity = json.envMapIntensity; }\n\n\t\t\tif ( json.reflectivity !== undefined ) { material.reflectivity = json.reflectivity; }\n\t\t\tif ( json.refractionRatio !== undefined ) { material.refractionRatio = json.refractionRatio; }\n\n\t\t\tif ( json.lightMap !== undefined ) { material.lightMap = getTexture( json.lightMap ); }\n\t\t\tif ( json.lightMapIntensity !== undefined ) { material.lightMapIntensity = json.lightMapIntensity; }\n\n\t\t\tif ( json.aoMap !== undefined ) { material.aoMap = getTexture( json.aoMap ); }\n\t\t\tif ( json.aoMapIntensity !== undefined ) { material.aoMapIntensity = json.aoMapIntensity; }\n\n\t\t\tif ( json.gradientMap !== undefined ) { material.gradientMap = getTexture( json.gradientMap ); }\n\n\t\t\tif ( json.clearcoatMap !== undefined ) { material.clearcoatMap = getTexture( json.clearcoatMap ); }\n\t\t\tif ( json.clearcoatRoughnessMap !== undefined ) { material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap ); }\n\t\t\tif ( json.clearcoatNormalMap !== undefined ) { material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap ); }\n\t\t\tif ( json.clearcoatNormalScale !== undefined ) { material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale ); }\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tvar LoaderUtils = {\n\n\t\tdecodeText: function ( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tvar s = '';\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t\t} catch ( e ) { // see #16358\n\n\t\t\t\treturn s;\n\n\t\t\t}\n\n\t\t},\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) { return './'; }\n\n\t\t\treturn url.substr( 0, index + 1 );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\t\tthis.instanceCount = source.instanceCount;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\t\tdata.instanceCount = this.instanceCount;\n\n\t\t\tdata.isInstancedBufferGeometry = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ()\t{\n\n\t\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\tdata.isInstancedBufferAttribute = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: BufferGeometryLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar interleavedBufferMap = {};\n\t\t\tvar arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) { return interleavedBufferMap[ uuid ]; }\n\n\t\t\t\tvar interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tvar interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\t\tvar buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\t\tvar array = new TYPED_ARRAYS[ interleavedBuffer.type ]( buffer );\n\t\t\t\tvar ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\t\treturn ib;\n\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) { return arrayBufferMap[ uuid ]; }\n\n\t\t\t\tvar arrayBuffers = json.arrayBuffers;\n\t\t\t\tvar arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\t\tvar ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\t\treturn ab;\n\n\t\t\t}\n\n\t\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar bufferAttribute = (void 0);\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tvar interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar typedArray$1 = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray$1, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tif ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }\n\t\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\t\tif ( morphAttributes ) {\n\n\t\t\t\tfor ( var key$1 in morphAttributes ) {\n\n\t\t\t\t\tvar attributeArray = morphAttributes[ key$1 ];\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar attribute$1 = attributeArray[ i ];\n\t\t\t\t\t\tvar bufferAttribute$1 = (void 0);\n\n\t\t\t\t\t\tif ( attribute$1.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar interleavedBuffer$1 = getInterleavedBuffer( json.data, attribute$1.data );\n\t\t\t\t\t\t\tbufferAttribute$1 = new InterleavedBufferAttribute( interleavedBuffer$1, attribute$1.itemSize, attribute$1.offset, attribute$1.normalized );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar typedArray$2 = new TYPED_ARRAYS[ attribute$1.type ]( attribute$1.array );\n\t\t\t\t\t\t\tbufferAttribute$1 = new BufferAttribute( typedArray$2, attribute$1.itemSize, attribute$1.normalized );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attribute$1.name !== undefined ) { bufferAttribute$1.name = attribute$1.name; }\n\t\t\t\t\t\tarray.push( bufferAttribute$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[ key$1 ] = array;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i$1 = 0, n = groups.length; i$1 !== n; ++ i$1 ) {\n\n\t\t\t\t\tvar group = groups[ i$1 ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\tif ( json.name ) { geometry.name = json.name; }\n\t\t\tif ( json.userData ) { geometry.userData = json.userData; }\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ObjectLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) { onError( error ); }\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar shapes = this.parseShape( json.shapes );\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseShape: function ( json ) {\n\n\t\t\tvar shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t},\n\n\t\tparseGeometries: function ( json, shapes ) {\n\n\t\t\tvar geometries = {};\n\t\t\tvar geometryShapes;\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry = (void 0);\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j$1 = 0, jl$1 = data.shapes.length; j$1 < jl$1; j$1 ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape$1 = shapes[ data.shapes[ j$1 ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape$1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { geometry.name = data.name; }\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) { geometry.userData = data.userData; }\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar cache = {}; // MultiMaterial\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\t\tif ( data.uuid !== undefined ) { clip.uuid = data.uuid; }\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tvar loader;\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tloader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tvar path$1 = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) { return value; }\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = (void 0);\n\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { texture.name = data.name; }\n\n\t\t\t\t\tif ( data.mapping !== undefined ) { texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING ); }\n\n\t\t\t\t\tif ( data.offset !== undefined ) { texture.offset.fromArray( data.offset ); }\n\t\t\t\t\tif ( data.repeat !== undefined ) { texture.repeat.fromArray( data.repeat ); }\n\t\t\t\t\tif ( data.center !== undefined ) { texture.center.fromArray( data.center ); }\n\t\t\t\t\tif ( data.rotation !== undefined ) { texture.rotation = data.rotation; }\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) { texture.format = data.format; }\n\t\t\t\t\tif ( data.type !== undefined ) { texture.type = data.type; }\n\t\t\t\t\tif ( data.encoding !== undefined ) { texture.encoding = data.encoding; }\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) { texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.magFilter !== undefined ) { texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.anisotropy !== undefined ) { texture.anisotropy = data.anisotropy; }\n\n\t\t\t\t\tif ( data.flipY !== undefined ) { texture.flipY = data.flipY; }\n\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) { texture.premultiplyAlpha = data.premultiplyAlpha; }\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) { texture.unpackAlignment = data.unpackAlignment; }\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) { return undefined; }\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tvar geometry, material;\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) { object.focus = data.focus; }\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.filmGauge !== undefined ) { object.filmGauge = data.filmGauge; }\n\t\t\t\t\tif ( data.filmOffset !== undefined ) { object.filmOffset = data.filmOffset; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\n\t\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\t\tvar count = data.count;\n\t\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) { object.name = data.name; }\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) { object.matrixAutoUpdate = data.matrixAutoUpdate; }\n\t\t\t\tif ( object.matrixAutoUpdate ) { object.matrix.decompose( object.position, object.quaternion, object.scale ); }\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) { object.position.fromArray( data.position ); }\n\t\t\t\tif ( data.rotation !== undefined ) { object.rotation.fromArray( data.rotation ); }\n\t\t\t\tif ( data.quaternion !== undefined ) { object.quaternion.fromArray( data.quaternion ); }\n\t\t\t\tif ( data.scale !== undefined ) { object.scale.fromArray( data.scale ); }\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) { object.castShadow = data.castShadow; }\n\t\t\tif ( data.receiveShadow !== undefined ) { object.receiveShadow = data.receiveShadow; }\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) { object.shadow.bias = data.shadow.bias; }\n\t\t\t\tif ( data.shadow.normalBias !== undefined ) { object.shadow.normalBias = data.shadow.normalBias; }\n\t\t\t\tif ( data.shadow.radius !== undefined ) { object.shadow.radius = data.shadow.radius; }\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) { object.shadow.mapSize.fromArray( data.shadow.mapSize ); }\n\t\t\t\tif ( data.shadow.camera !== undefined ) { object.shadow.camera = this.parseObject( data.shadow.camera ); }\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) { object.visible = data.visible; }\n\t\t\tif ( data.frustumCulled !== undefined ) { object.frustumCulled = data.frustumCulled; }\n\t\t\tif ( data.renderOrder !== undefined ) { object.renderOrder = data.renderOrder; }\n\t\t\tif ( data.userData !== undefined ) { object.userData = data.userData; }\n\t\t\tif ( data.layers !== undefined ) { object.layers.mask = data.layers; }\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tif ( data.autoUpdate !== undefined ) { object.autoUpdate = data.autoUpdate; }\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\t/**\n\t * @author thespite / http://clicktorelease.com/\n\t */\n\n\n\tfunction ImageBitmapLoader( manager ) {\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageBitmapLoader,\n\n\t\tisImageBitmapLoader: true,\n\n\t\tsetOptions: function setOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tfetch( url ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) { onLoad( imageBitmap ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) { onError( e ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\t{ continue; }\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\t{ continue; }\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\t{ continue; }\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\t{ return\ttrue; }\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) { return []; }\n\n\t\t\tif ( noHoles === true )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\t{ mainIdx ++; }\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\t{ mainIdx ++; }\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx$1 = 0, sLen$1 = newShapes.length; sIdx$1 < sLen$1; sIdx$1 ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx$1 ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx$1 !== s2Idx )\t{ toChange.push( { froms: sIdx$1, tos: s2Idx, hole: hIdx } ); }\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx$1 ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\t{ newShapeHoles = betterShapeHoles; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i$1 = 0, il = newShapes.length; i$1 < il; i$1 ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i$1 ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i$1 ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction Font( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size ) {\n\n\t\t\tif ( size === undefined ) { size = 100; }\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths( text, size, this.data );\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\tfunction createPaths( text, size, data ) {\n\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // workaround for IE11, see #13988\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\tvar paths = [];\n\n\t\tvar offsetX = 0, offsetY = 0;\n\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\tvar char = chars[ i ];\n\n\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\n\t\t\t} else {\n\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn paths;\n\n\t}\n\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) {\n\n\t\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar path = new ShapePath();\n\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif ( glyph.o ) {\n\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FontLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) { onLoad( font ); }\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( _context === undefined ) {\n\n\t\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn _context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\t_context = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AudioLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( skyColor );\n\t\tvar color2 = new Color().set( groundColor );\n\n\t\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tvar c0 = Math.sqrt( Math.PI );\n\t\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n\tHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: HemisphereLightProbe,\n\n\t\tisHemisphereLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction AmbientLightProbe( color, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n\tAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: AmbientLightProbe,\n\n\t\tisAmbientLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\tvar _eyeRight = new Matrix4();\n\tvar _eyeLeft = new Matrix4();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar cache = this._cache;\n\n\t\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tvar ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$2 = new Vector3();\n\tvar _quaternion$3 = new Quaternion();\n\tvar _scale$1 = new Vector3();\n\tvar _orientation = new Vector3();\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaStreamSource: function ( mediaStream ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) { this.play(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function ( delay ) {\n\n\t\t\tif ( delay === undefined ) { delay = 0; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\t\tvar source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\tthis.setDetune( this.detune );\n\t\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\t// update current progress\n\n\t\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) { value = []; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDetune: function ( value ) {\n\n\t\t\tthis.detune = value;\n\n\t\t\tif ( this.source.detune === undefined ) { return; } // only set detune when available\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDetune: function () {\n\n\t\t\treturn this.detune;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopStart: function ( value ) {\n\n\t\t\tthis.loopStart = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopEnd: function ( value ) {\n\n\t\t\tthis.loopEnd = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$3 = new Vector3();\n\tvar _quaternion$4 = new Quaternion();\n\tvar _scale$2 = new Vector3();\n\tvar _orientation$1 = new Vector3();\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) { return; }\n\n\t\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0;\n\t\t\tvar data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride;\n\n\t\t\tvar currentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// accumulate data in the 'incoming' region into 'add'\n\t\taccumulateAdditive: function ( weight ) {\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t\t// add = identity\n\n\t\t\t\tthis._setIdentity();\n\n\t\t\t}\n\n\t\t\t// add := add + incoming * weight\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t\t// accuN := accuN + additive accuN\n\n\t\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\t// Add to identity for additive\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\t\t_setAdditiveIdentityNumeric: function () {\n\n\t\t\tvar startIndex = this._addIndex * this.valueSize;\n\t\t\tvar endIndex = startIndex + this.valueSize;\n\n\t\t\tfor ( var i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\t\tthis.buffer[ i ] = 0;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_setAdditiveIdentityQuaternion: function () {\n\n\t\t\tthis._setAdditiveIdentityNumeric();\n\t\t\tthis.buffer[ this._addIndex * 4 + 3 ] = 1;\n\n\t\t},\n\n\t\t_setAdditiveIdentityOther: function () {\n\n\t\t\tvar startIndex = this._origIndex * this.valueSize;\n\t\t\tvar targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor ( var i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_slerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar workOffset = this._workIndex * stride;\n\n\t\t\t// Store result in intermediate buffer offset\n\t\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t\t// Slerp to the intermediate result\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lerpAdditive: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\tvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\tvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\tvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\tvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\tvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n\t// Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\tvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n\t// Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\tvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\n\tvar _trackRe = new RegExp( ''\n\t\t+ '^'\n\t\t+ _directoryRe\n\t\t+ _nodeRe\n\t\t+ _objectRe\n\t\t+ _propertyRe\n\t\t+ '$'\n\t);\n\n\tvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) { binding.getValue( array, offset ); }\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t\t},\n\n\t\tparseTrackName: function ( trackName ) {\n\n\t\t\tvar matches = _trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t},\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) { return result; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t// DECLARE ALIAS AFTER assign prototype\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup() {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar knownObject = undefined,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tvar index = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j$1 = 0, m$1 = nBindings; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j$1 ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\t\tvar binding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j$1 ], parsedPaths[ j$1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tvar nCachedObjects = this.nCachedObjects_,\n\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex$1 = -- nObjects,\n\t\t\t\t\t\t\tlastObject$1 = objects[ lastIndex$1 ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject$1.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject$1;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j$1 = 0, m$1 = nBindings; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath$1 = bindings[ j$1 ];\n\n\t\t\t\t\t\t\tbindingsForPath$1[ index ] = bindingsForPath$1[ lastIndex$1 ];\n\t\t\t\t\t\t\tbindingsForPath$1.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) { return bindings[ index ]; }\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot, blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\t\tthis.blendMode = blendMode || clip.blendMode;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function () {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function () {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0; // restart clip\n\t\t\tthis._loopCount = - 1;// forget previous loops\n\t\t\tthis._startTime = null;// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function () {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function () {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function ( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function ( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function ( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function () {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function () {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function () {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function ( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function ( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function ( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer,\n\t\t\t\tnow = mixer.time,\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function () {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function () {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function () {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function () {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tfor ( var j$1 = 0, m$1 = interpolants.length; j$1 !== m$1; ++ j$1 ) {\n\n\t\t\t\t\t\t\tinterpolants[ j$1 ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j$1 ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function ( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function ( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function ( deltaTime ) {\n\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar loopCount = this._loopCount;\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) { return time; }\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\n\t\t\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: AnimationMixer,\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\t\tvar bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name;\n\n\t\t\t\tvar binding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tvar actionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tvar bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\t\tvar interpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot, blendMode ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid;\n\n\t\t\tvar clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\t\tvar clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\t\tvar actionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( blendMode === undefined ) {\n\n\t\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\t{ clipObject = prototypeAction._clip; }\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) { return null; }\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor ( var i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\t\tactions[ i ].stop();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i$1 = 0; i$1 !== nBindings; ++ i$1 ) {\n\n\t\t\t\tbindings[ i$1 ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Allows you to seek to a specific time in an animation.\n\t\tsetTime: function ( timeInSeconds ) {\n\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\t\tfor ( var i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t\t}\n\n\t\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function ( data ) {\n\n\t\t\tvar ib = InterleavedBuffer.prototype.clone.call( this, data );\n\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn ib;\n\n\t\t},\n\n\t\ttoJSON: function ( data ) {\n\n\t\t\tvar json = InterleavedBuffer.prototype.toJSON.call( this, data );\n\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\t\tobject.raycast( raycaster, intersects );\n\n\t\t}\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function () {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector$7 = new Vector2();\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$7.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$7.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _startP = new Vector3();\n\tvar _startEnd = new Vector3();\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t\t_startP.subVectors( point, this.start );\n\t\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\n\t\tthis.count = 0;\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector$8 = new Vector3();\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$8.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$8 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$9 = new Vector3();\n\tvar _boneMatrix = new Matrix4();\n\tvar _matrixWorldInv = new Matrix4();\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.isSkeletonHelper = true;\n\n\tSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tconst d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$a = new Vector3();\n\tvar _color1 = new Color();\n\tvar _color2 = new Color();\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) { this.material.vertexColors = true; }\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$a.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\t\tconstructor: GridHelper,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\t\tthis.geometry.copy( source.geometry );\n\t\t\tthis.material.copy( source.material );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( var i = 0; i <= radials; i ++ ) {\n\n\t\t\tvar v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tvar x = Math.sin( v ) * radius;\n\t\t\tvar z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tvar color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( var i$1 = 0; i$1 <= circles; i$1 ++ ) {\n\n\t\t\tvar color$1 = ( i$1 & 1 ) ? color1 : color2;\n\n\t\t\tvar r = radius - ( radius / circles * i$1 );\n\n\t\t\tfor ( var j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tvar v$1 = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tvar x$1 = Math.sin( v$1 ) * r;\n\t\t\t\tvar z$1 = Math.cos( v$1 ) * r;\n\n\t\t\t\tvertices.push( x$1, 0, z$1 );\n\t\t\t\tcolors.push( color$1.r, color$1.g, color$1.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv$1 = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx$1 = Math.sin( v$1 ) * r;\n\t\t\t\tz$1 = Math.cos( v$1 ) * r;\n\n\t\t\t\tvertices.push( x$1, 0, z$1 );\n\t\t\t\tcolors.push( color$1.r, color$1.g, color$1.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$5 = new Vector3();\n\tvar _v2$3 = new Vector3();\n\tvar _v3$1 = new Vector3();\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) { size = 1; }\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\t_v1$5.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$3, _v1$5 );\n\n\t\tthis.lightPlane.lookAt( _v2$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$3 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tvar _vector$b = new Vector3();\n\tvar _camera = new Camera();\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) { this.camera.updateProjectionMatrix(); }\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar pointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n\tfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t\t_vector$b.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], _vector$b.x, _vector$b.y, _vector$b.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tvar _box$3 = new Box3();\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = function ( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$3.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$3.isEmpty() ) { return; }\n\n\t\tvar min = _box$3.min;\n\t\tvar max = _box$3.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t};\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.copy = function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, color ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tcolor = color || 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) { return; }\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) { scale = 1e-8; } // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar _axis = new Vector3();\n\tvar _lineGeometry, _coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( dir === undefined ) { dir = new Vector3( 0, 0, 1 ); }\n\t\tif ( origin === undefined ) { origin = new Vector3( 0, 0, 0 ); }\n\t\tif ( length === undefined ) { length = 1; }\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tvar radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t};\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t};\n\n\tArrowHelper.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t};\n\n\tArrowHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxesHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\n\t * @author Emmett Lalish / elalish\n\t *\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t */\n\n\tvar LOD_MIN = 4;\n\tvar LOD_MAX = 8;\n\tvar SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n\t// The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\tvar EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n\tvar TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\t// The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\tvar MAX_SAMPLES = 20;\n\n\tvar ENCODINGS = {};\n\tENCODINGS[ LinearEncoding ] = 0;\n\tENCODINGS[ sRGBEncoding ] = 1;\n\tENCODINGS[ RGBEEncoding ] = 2;\n\tENCODINGS[ RGBM7Encoding ] = 3;\n\tENCODINGS[ RGBM16Encoding ] = 4;\n\tENCODINGS[ RGBDEncoding ] = 5;\n\tENCODINGS[ GammaEncoding ] = 6;\n\n\tvar _flatCamera = new OrthographicCamera();\n\tvar ref = _createPlanes();\n\tvar _lodPlanes = ref._lodPlanes;\n\tvar _sizeLods = ref._sizeLods;\n\tvar _sigmas = ref._sigmas;\n\tvar _oldTarget = null;\n\n\t// Golden Ratio\n\tvar PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar INV_PHI = 1 / PHI;\n\n\t// Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\tvar _axisDirections = [\n\t\tnew Vector3( 1, 1, 1 ),\n\t\tnew Vector3( - 1, 1, 1 ),\n\t\tnew Vector3( 1, 1, - 1 ),\n\t\tnew Vector3( - 1, 1, - 1 ),\n\t\tnew Vector3( 0, PHI, INV_PHI ),\n\t\tnew Vector3( 0, PHI, - INV_PHI ),\n\t\tnew Vector3( INV_PHI, 0, PHI ),\n\t\tnew Vector3( - INV_PHI, 0, PHI ),\n\t\tnew Vector3( PHI, INV_PHI, 0 ),\n\t\tnew Vector3( - PHI, INV_PHI, 0 ) ];\n\n\tfunction PMREMGenerator( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\tPMREMGenerator.prototype = {\n\n\t\tconstructor: PMREMGenerator,\n\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\t\tfromScene: function ( scene, sigma, near, far ) {\n\t\t\tif ( sigma === void 0 ) sigma = 0;\n\t\t\tif ( near === void 0 ) near = 0.1;\n\t\t\tif ( far === void 0 ) far = 100;\n\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\t\tif ( sigma > 0 ) {\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t\t}\n\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromEquirectangular: function ( equirectangular ) {\n\n\t\t\treturn this._fromTexture( equirectangular );\n\n\t\t},\n\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromCubemap: function ( cubemap ) {\n\n\t\t\treturn this._fromTexture( cubemap );\n\n\t\t},\n\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileCubemapShader: function () {\n\n\t\t\tif ( this._cubemapShader === null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileEquirectangularShader: function () {\n\n\t\t\tif ( this._equirectShader === null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\t\tdispose: function () {\n\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif ( this._cubemapShader !== null ) { this._cubemapShader.dispose(); }\n\t\t\tif ( this._equirectShader !== null ) { this._equirectShader.dispose(); }\n\n\t\t\tfor ( var i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// private interface\n\n\t\t_cleanup: function ( outputTarget ) {\n\n\t\t\tthis._pingPongRenderTarget.dispose();\n\t\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\t\toutputTarget.scissorTest = false;\n\t\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t\t},\n\n\t\t_fromTexture: function ( texture ) {\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets( texture );\n\t\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t_allocateTargets: function ( texture ) { // warning: null texture is valid\n\n\t\t\tvar params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false,\n\t\t\t\tstencilBuffer: false\n\t\t\t};\n\n\t\t\tvar cubeUVRenderTarget = _createRenderTarget( params );\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t},\n\n\t\t_compileMaterial: function ( material ) {\n\n\t\t\tvar tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t\t},\n\n\t\t_sceneToCubeUV: function ( scene, near, far, cubeUVRenderTarget ) {\n\n\t\t\tvar fov = 90;\n\t\t\tvar aspect = 1;\n\t\t\tvar cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tvar upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\t\tvar forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tvar outputEncoding = renderer.outputEncoding;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar clearColor = renderer.getClearColor();\n\t\t\tvar clearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\n\t\t\tvar background = scene.background;\n\t\t\tif ( background && background.isColor ) {\n\n\t\t\t\tbackground.convertSRGBToLinear();\n\t\t\t\t// Convert linear to RGBE\n\t\t\t\tvar maxComponent = Math.max( background.r, background.g, background.b );\n\t\t\t\tvar fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t\t\t\tbackground = background.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\t\t\t\tvar alpha = ( fExp + 128.0 ) / 255.0;\n\t\t\t\trenderer.setClearColor( background, alpha );\n\t\t\t\tscene.background = null;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar col = i % 3;\n\t\t\t\tif ( col == 0 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.setClearColor( clearColor, clearAlpha );\n\n\t\t},\n\n\t\t_textureToCubeUV: function ( texture, cubeUVRenderTarget ) {\n\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tvar mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\t\tvar uniforms = material.uniforms;\n\n\t\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t\t}\n\n\t\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\trenderer.render( mesh, _flatCamera );\n\n\t\t},\n\n\t\t_applyPMREM: function ( cubeUVRenderTarget ) {\n\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor ( var i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\t\tvar sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\t\tvar poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\n\t\t},\n\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\t\t_blur: function ( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\t\tvar pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tlodIn,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'latitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t\tthis._halfBlur(\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tlodOut,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'longitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t},\n\n\t\t_halfBlur: function ( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar blurMaterial = this._blurMaterial;\n\n\t\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t\t}\n\n\t\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\t\tvar STANDARD_DEVIATIONS = 3;\n\n\t\t\tvar blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\t\tvar blurUniforms = blurMaterial.uniforms;\n\n\t\t\tvar pixels = _sizeLods[ lodIn ] - 1;\n\t\t\tvar radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\t\tvar sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tvar samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\t\tconsole.warn( (\"sigmaRadians, \" + sigmaRadians + \", is too large and will clip, as it requested \" + samples + \" samples when the maximum is set to \" + MAX_SAMPLES) );\n\n\t\t\t}\n\n\t\t\tvar weights = [];\n\t\t\tvar sum = 0;\n\n\t\t\tfor ( var i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\t\tvar x$1 = i / sigmaPixels;\n\t\t\t\tvar weight = Math.exp( - x$1 * x$1 / 2 );\n\t\t\t\tweights.push( weight );\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\tsum += weight;\n\n\t\t\t\t} else if ( i < samples ) {\n\n\t\t\t\t\tsum += 2 * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i$1 = 0; i$1 < weights.length; i$1 ++ ) {\n\n\t\t\t\tweights[ i$1 ] = weights[ i$1 ] / sum;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\t\tblurUniforms[ 'samples' ].value = samples;\n\t\t\tblurUniforms[ 'weights' ].value = weights;\n\t\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\t\tif ( poleAxis ) {\n\n\t\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\t\tvar outputSize = _sizeLods[ lodOut ];\n\t\t\tvar x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\t\tvar y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\t\trenderer.setRenderTarget( targetOut );\n\t\t\trenderer.render( blurMesh, _flatCamera );\n\n\t\t}\n\n\t};\n\n\tfunction _isLDR( texture ) {\n\n\t\tif ( texture === undefined || texture.type !== UnsignedByteType ) { return false; }\n\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n\t}\n\n\tfunction _createPlanes() {\n\n\t\tvar _lodPlanes = [];\n\t\tvar _sizeLods = [];\n\t\tvar _sigmas = [];\n\n\t\tvar lod = LOD_MAX;\n\n\t\tfor ( var i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tvar sizeLod = Math.pow( 2, lod );\n\t\t\t_sizeLods.push( sizeLod );\n\t\t\tvar sigma = 1.0 / sizeLod;\n\n\t\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t\t} else if ( i == 0 ) {\n\n\t\t\t\tsigma = 0;\n\n\t\t\t}\n\n\t\t\t_sigmas.push( sigma );\n\n\t\t\tvar texelSize = 1.0 / ( sizeLod - 1 );\n\t\t\tvar min = - texelSize / 2;\n\t\t\tvar max = 1 + texelSize / 2;\n\t\t\tvar uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\t\tvar cubeFaces = 6;\n\t\t\tvar vertices = 6;\n\t\t\tvar positionSize = 3;\n\t\t\tvar uvSize = 2;\n\t\t\tvar faceIndexSize = 1;\n\n\t\t\tvar position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\t\tvar uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\t\tvar faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\t\tfor ( var face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\t\tvar x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\t\tvar y = face > 2 ? 0 : - 1;\n\t\t\t\tvar coordinates = [\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y + 1, 0\n\t\t\t\t];\n\t\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\t\tvar fill = [ face, face, face, face, face, face ];\n\t\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t\t}\n\n\t\t\tvar planes = new BufferGeometry();\n\t\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t\t_lodPlanes.push( planes );\n\n\t\t\tif ( lod > LOD_MIN ) {\n\n\t\t\t\tlod --;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { _lodPlanes: _lodPlanes, _sizeLods: _sizeLods, _sigmas: _sigmas };\n\n\t}\n\n\tfunction _createRenderTarget( params ) {\n\n\t\tvar cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\tfunction _setViewport( target, x, y, width, height ) {\n\n\t\ttarget.viewport.set( x, y, width, height );\n\t\ttarget.scissor.set( x, y, width, height );\n\n\t}\n\n\tfunction _getBlurShader( maxSamples ) {\n\n\t\tvar weights = new Float32Array( maxSamples );\n\t\tvar poleAxis = new Vector3( 0, 1, 0 );\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'SphericalGaussianBlur',\n\n\t\t\tdefines: { 'n': maxSamples },\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'samples': { value: 1 },\n\t\t\t\t'weights': { value: weights },\n\t\t\t\t'latitudinal': { value: false },\n\t\t\t\t'dTheta': { value: 0 },\n\t\t\t\t'mipInt': { value: 0 },\n\t\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform sampler2D envMap;\\nuniform int samples;\\nuniform float weights[n];\\nuniform bool latitudinal;\\nuniform float dTheta;\\nuniform float mipInt;\\nuniform vec3 poleAxis;\\n\\n\" + (_getEncodings()) + \"\\n\\n#define ENVMAP_TYPE_CUBE_UV\\n#include <cube_uv_reflection_fragment>\\n\\nvec3 getSample(float theta, vec3 axis) {\\n\\tfloat cosTheta = cos(theta);\\n\\t// Rodrigues' axis-angle rotation\\n\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t+ cross(axis, vOutputDirection) * sin(theta)\\n\\t\\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\\n\\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\\n}\\n\\nvoid main() {\\n\\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\\n\\tif (all(equal(axis, vec3(0.0))))\\n\\t\\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\\n\\taxis = normalize(axis);\\n\\tgl_FragColor = vec4(0.0);\\n\\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\\n\\tfor (int i = 1; i < n; i++) {\\n\\t\\tif (i >= samples)\\n\\t\\t\\tbreak;\\n\\t\\tfloat theta = dTheta * float(i);\\n\\t\\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\\n\\t\\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\\n\\t}\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getEquirectShader() {\n\n\t\tvar texelSize = new Vector2( 1, 1 );\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'EquirectangularToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'texelSize': { value: texelSize },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform sampler2D envMap;\\nuniform vec2 texelSize;\\n\\n\" + (_getEncodings()) + \"\\n\\n#include <common>\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(0.0);\\n\\tvec3 outputDirection = normalize(vOutputDirection);\\n\\tvec2 uv = equirectUv( outputDirection );\\n\\tvec2 f = fract(uv / texelSize - 0.5);\\n\\tuv -= f * texelSize;\\n\\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.x += texelSize.x;\\n\\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.y += texelSize.y;\\n\\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tuv.x -= texelSize.x;\\n\\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n\\tvec3 tm = mix(tl, tr, f.x);\\n\\tvec3 bm = mix(bl, br, f.x);\\n\\tgl_FragColor.rgb = mix(tm, bm, f.y);\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getCubemapShader() {\n\n\t\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\t\tname: 'CubemapToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: (\"\\nprecision mediump float;\\nprecision mediump int;\\nvarying vec3 vOutputDirection;\\nuniform samplerCube envMap;\\n\\n\" + (_getEncodings()) + \"\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(0.0);\\n\\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\\n\\tgl_FragColor = linearToOutputTexel(gl_FragColor);\\n}\\n\\t\\t\"),\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getCommonVertexShader() {\n\n\t\treturn \"\\nprecision mediump float;\\nprecision mediump int;\\nattribute vec3 position;\\nattribute vec2 uv;\\nattribute float faceIndex;\\nvarying vec3 vOutputDirection;\\n\\n// RH coordinate system; PMREM face-indexing convention\\nvec3 getDirection(vec2 uv, float face) {\\n\\tuv = 2.0 * uv - 1.0;\\n\\tvec3 direction = vec3(uv, 1.0);\\n\\tif (face == 0.0) {\\n\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\t} else if (face == 1.0) {\\n\\t\\tdirection = direction.xzy;\\n\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\t} else if (face == 2.0) {\\n\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\t} else if (face == 3.0) {\\n\\t\\tdirection = direction.zyx;\\n\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\t} else if (face == 4.0) {\\n\\t\\tdirection = direction.xzy;\\n\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\t} else if (face == 5.0) {\\n\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\t}\\n\\treturn direction;\\n}\\n\\nvoid main() {\\n\\tvOutputDirection = getDirection(uv, faceIndex);\\n\\tgl_Position = vec4( position, 1.0 );\\n}\\n\\t\";\n\n\t}\n\n\tfunction _getEncodings() {\n\n\t\treturn \"\\nuniform int inputEncoding;\\nuniform int outputEncoding;\\n\\n#include <encodings_pars_fragment>\\n\\nvec4 inputTexelToLinear(vec4 value){\\n\\tif(inputEncoding == 0){\\n\\t\\treturn value;\\n\\t}else if(inputEncoding == 1){\\n\\t\\treturn sRGBToLinear(value);\\n\\t}else if(inputEncoding == 2){\\n\\t\\treturn RGBEToLinear(value);\\n\\t}else if(inputEncoding == 3){\\n\\t\\treturn RGBMToLinear(value, 7.0);\\n\\t}else if(inputEncoding == 4){\\n\\t\\treturn RGBMToLinear(value, 16.0);\\n\\t}else if(inputEncoding == 5){\\n\\t\\treturn RGBDToLinear(value, 256.0);\\n\\t}else{\\n\\t\\treturn GammaToLinear(value, 2.2);\\n\\t}\\n}\\n\\nvec4 linearToOutputTexel(vec4 value){\\n\\tif(outputEncoding == 0){\\n\\t\\treturn value;\\n\\t}else if(outputEncoding == 1){\\n\\t\\treturn LinearTosRGB(value);\\n\\t}else if(outputEncoding == 2){\\n\\t\\treturn LinearToRGBE(value);\\n\\t}else if(outputEncoding == 3){\\n\\t\\treturn LinearToRGBM(value, 7.0);\\n\\t}else if(outputEncoding == 4){\\n\\t\\treturn LinearToRGBM(value, 16.0);\\n\\t}else if(outputEncoding == 5){\\n\\t\\treturn LinearToRGBD(value, 256.0);\\n\\t}else{\\n\\t\\treturn LinearToGamma(value, 2.2);\\n\\t}\\n}\\n\\nvec4 envMapTexelToLinear(vec4 color) {\\n\\treturn inputTexelToLinear(color);\\n}\\n\\t\";\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\tvar LinePieces = 1;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) { materials = []; }\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tObject.assign( CurvePath.prototype, {\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from equidistant sampling along the path\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Path.prototype, {\n\n\t\tfromPoints: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\t\treturn this.setFromPoints( points );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction AxisHelper( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\treturn new AxesHelper( size );\n\n\t}\n\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tObject.assign( Loader.prototype, {\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t} );\n\n\tLoader.Handlers = {\n\n\t\tadd: function ( /* regex, loader */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t\t},\n\n\t\tget: function ( /* file */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t\t}\n\n\t};\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t\treturn this.setResourcePath( value );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\n\t} );\n\n\tFrustum.prototype.setFromMatrix = function ( m ) {\n\n\t\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\t\treturn this.setFromProjectionMatrix( m );\n\n\t};\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\tObject.assign( MathUtils, {\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\t\treturn MathUtils.floorPowerOfTwo( value );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\t\treturn MathUtils.ceilPowerOfTwo( value );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\t\t\treturn attribute.applyMatrix3( this );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\t\t\treturn attribute.applyMatrix4( this );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tarea: function () {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\t\treturn this.getArea();\n\n\t\t},\n\t\tbarycoordFromPoint: function ( point, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn this.getBarycoord( point, target );\n\n\t\t},\n\t\tmidpoint: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\t\treturn this.getMidpoint( target );\n\n\t\t},\n\t\tnormal: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn this.getNormal( target );\n\n\t\t},\n\t\tplane: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\t\treturn this.getPlane( target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle, {\n\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t\t},\n\t\tnormal: function ( a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\t\treturn this.extractPoints( divisions );\n\n\t\t},\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Geometry.prototype, {\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeLineDistances: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t},\n\t\tgetWorldRotation: function () {\n\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( Mesh.prototype, {\n\n\t\tsetDrawMode: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t},\n\n\t} );\n\n\tObject.defineProperties( Mesh.prototype, {\n\n\t\tdrawMode: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\t\treturn TrianglesDrawMode;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tSkinnedMesh.prototype.initBones = function () {\n\n\t\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n\t};\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) { this.filmGauge = filmGauge; }\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\treturn this.setAttribute( name, attribute );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t},\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\t\treturn this.deleteAttribute( name );\n\n\t\t},\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InstancedBufferGeometry.prototype, {\n\n\t\tmaxInstancedCount: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\t\treturn this.instanceCount;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\t\tthis.instanceCount = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Raycaster.prototype, {\n\n\t\tlinePrecision: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\t\treturn this.params.Line.threshold;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\t\tthis.params.Line.threshold = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InterleavedBuffer.prototype, {\n\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( value );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\t\tgetArrays: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t\t},\n\n\t\taddShapeList: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t\t},\n\n\t\taddShape: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\toverdraw: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t},\n\n\t\tstencilMask: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\treturn this.stencilFuncMask;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\tthis.stencilFuncMask = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t},\n\t\tanimate: function ( callback ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\t\tthis.setAnimationLoop( callback );\n\n\t\t},\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\t\tresetGLState: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\t\treturn this.state.reset();\n\n\t\t},\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t},\n\t\tsetFaceCulling: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t\t},\n\t\tallocTextureUnit: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t\t},\n\t\tsetTexture: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t\t},\n\t\tsetTexture2D: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t\t},\n\t\tsetTextureCube: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t\t},\n\t\tgetActiveMipMapLevel: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\t\treturn this.getActiveMipmapLevel();\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\t\treturn this.getContext();\n\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\t\treturn this.xr;\n\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\t\treturn 1.0;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* cullFace */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\t\treturn new WebGLCubeRenderTarget( width, options );\n\n\t}\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Audio.prototype, {\n\n\t\tload: {\n\t\t\tvalue: function ( file ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\t\tvar scope = this;\n\t\t\t\tvar audioLoader = new AudioLoader();\n\t\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t\t} );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t},\n\t\tstartTime: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n\t}\n\n\t//\n\n\tfunction JSONLoader() {\n\n\t\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n\t}\n\n\t//\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tattach: function ( /* child, scene, parent */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction LensFlare() {\n\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n\t}\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\t\trevision: REVISION,\n\t\t} } ) );\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeGeometry = BoxGeometry;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.Face3 = Face3;\n\texports.Face4 = Face4;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GammaEncoding = GammaEncoding;\n\texports.Geometry = Geometry;\n\texports.GeometryUtils = GeometryUtils;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.LightShadow = LightShadow;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.Spline = Spline;\n\texports.SplineCurve = SplineCurve;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}